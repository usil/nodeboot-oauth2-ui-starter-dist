{"version":3,"file":"nodeboot-oauth2-starter-ui.mjs","sources":["../../../projects/nodeboot-oauth2-starter/src/lib/nodeboot-oauth2-starter.service.ts","../../../projects/nodeboot-oauth2-starter/src/lib/nodeboot-oauth2-starter.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/nodeboot-oauth2-starter.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/delete-user/delete-user.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/delete-user/delete-user.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/update-user/update-user.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/update-user/update-user.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/material.module.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/view-user-roles/view-user-roles.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/view-user-roles/view-user-roles.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/create-user/create-user.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/create-user/create-user.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/add-user-roles/add-user-roles.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/add-user-roles/add-user-roles.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/oauth-starter-users.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/oauth-starter-users.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-user-profile/change-password/change-password.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-user-profile/change-password/change-password.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-user-profile/oauth-starter-user-profile.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-user-profile/oauth-starter-user-profile.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-roles/create-role/create-role.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-roles/create-role/create-role.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-roles/delete-role/delete-role.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-roles/delete-role/delete-role.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-roles/options/options.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-roles/options/options.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-roles/oauth-starter-roles.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-roles/oauth-starter-roles.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/add-client-roles/add-client-roles.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/add-client-roles/add-client-roles.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/create-client/create-client.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/create-client/create-client.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/delete-client/delete-client.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/delete-client/delete-client.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/show-token/show-token.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/show-token/show-token.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/update-client/update-client.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/update-client/update-client.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/view-client-roles/view-client-roles.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/view-client-roles/view-client-roles.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/oauth-starter-client.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/oauth-starter-client.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-application-part/application-options/application-options.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-application-part/application-options/application-options.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-application-part/create-application-part/create-application-part.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-application-part/create-application-part/create-application-part.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-application-part/delete-application-part/delete-application-part.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-application-part/delete-application-part/delete-application-part.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-application-part/oauth-starter-application-part.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-application-part/oauth-starter-application-part.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/nodeboot-oauth2-starter.module.ts","../../../projects/nodeboot-oauth2-starter/src/public-api.ts","../../../projects/nodeboot-oauth2-starter/src/nodeboot-oauth2-starter-ui.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable, first } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NodebootOauth2StarterService {\n  configuration: {\n    api: string;\n  };\n  authUserApi: string;\n  authRoleApi: string;\n  authPartApi: string;\n  authClientApi: string;\n  authApplicationApi: string;\n\n  constructor(\n    private http: HttpClient,\n    @Inject('configuration')\n    configuration: {\n      api: string;\n    }\n  ) {\n    this.configuration = configuration;\n    this.authUserApi = configuration.api + '/auth/user';\n    this.authRoleApi = configuration.api + '/auth/role';\n    this.authPartApi = configuration.api + '/auth/part';\n    this.authClientApi = configuration.api + '/auth/client';\n    this.authApplicationApi = configuration.api + '/auth/application ';\n  }\n\n  getUsers(pageIndex: number, order: string): Observable<UserPaginationResult> {\n    return this.http\n      .get<UserPaginationResult>(\n        this.authUserApi +\n          `?pageIndex=${pageIndex}&&itemsPerPage=20&&order=${order}`\n      )\n      .pipe(first());\n  }\n\n  createUser(createUserData: {\n    name: string;\n    username: string;\n    password: string;\n    roles: BasicRole[];\n  }) {\n    return this.http.post(this.authUserApi, createUserData).pipe(first());\n  }\n\n  updatePassword(userId: number, newPassword: string, oldPassword: string) {\n    return this.http\n      .put(`${this.authUserApi}/${userId}/password`, {\n        newPassword,\n        oldPassword,\n      })\n      .pipe(first());\n  }\n\n  updateUserRoles(userId: number, roles: BasicRole[]) {\n    return this.http\n      .put(`${this.authUserApi}/${userId}/role`, { roles })\n      .pipe(first());\n  }\n\n  deleteUser(subjectId: number) {\n    return this.http.delete(`${this.authUserApi}/${subjectId}`).pipe(first());\n  }\n\n  updateUser(subjectId: number, updateBody: UserUpdateBody) {\n    return this.http\n      .put(`${this.authUserApi}/${subjectId}`, updateBody)\n      .pipe(first());\n  }\n\n  getUserProfile(): Observable<UserProfileResult> {\n    return this.http\n      .get<UserProfileResult>(`${this.authUserApi}/profile/me`)\n      .pipe(first());\n  }\n\n  getRolesBasic(): Observable<RoleResult> {\n    return this.http\n      .get<RoleResult>(this.authRoleApi + '?basic=true')\n      .pipe(first());\n  }\n\n  createRole(identifier: string, allowedObject: Record<string, Option[]>) {\n    return this.http\n      .post(this.authRoleApi, { identifier, allowedObject })\n      .pipe(first());\n  }\n\n  updateRoleOptions(\n    roleId: number,\n    newAllowedObject: Record<string, Option[]>,\n    originalAllowedObject: Record<string, Option[]>\n  ) {\n    return this.http\n      .put(this.authRoleApi + `/${roleId}/option`, {\n        newAllowedObject,\n        originalAllowedObject,\n      })\n      .pipe(first());\n  }\n\n  deleteRole(roleId: number) {\n    return this.http.delete(this.authRoleApi + `/${roleId}`).pipe(first());\n  }\n\n  getRoles(pageIndex: number, order: string): Observable<RolePaginationResult> {\n    return this.http\n      .get<RolePaginationResult>(\n        this.authRoleApi +\n          `?pageIndex=${pageIndex}&&itemsPerPage=20&&order=${order}`\n      )\n      .pipe(first());\n  }\n\n  getPartsBasic(): Observable<OptionResult> {\n    return this.http\n      .get<OptionResult>(this.authPartApi + `?basic=true`)\n      .pipe(first());\n  }\n\n  getParts(pageIndex: number, order: string): Observable<PartPaginationResult> {\n    return this.http\n      .get<PartPaginationResult>(\n        this.authPartApi +\n          `?pageIndex=${pageIndex}&&itemsPerPage=20&&order=${order}`\n      )\n      .pipe(first());\n  }\n\n  updatePartOptions(\n    partId: number,\n    newPartOptions: Option[],\n    originalPartOptions: Option[]\n  ) {\n    return this.http\n      .put(this.authPartApi + `/${partId}/option`, {\n        newPartOptions,\n        originalPartOptions,\n      })\n      .pipe(first());\n  }\n\n  deletePart(partId: number) {\n    return this.http.delete(this.authPartApi + `/${partId}`);\n  }\n\n  createPart(partIdentifier: string, applications_id: number) {\n    return this.http.post(this.authPartApi, {\n      partIdentifier,\n      applications_id,\n    });\n  }\n\n  getClients(\n    pageIndex: number,\n    order: string\n  ): Observable<ClientPaginationResult> {\n    return this.http\n      .get<ClientPaginationResult>(\n        this.authClientApi +\n          `?pageIndex=${pageIndex}&&itemsPerPage=20&&order=${order}`\n      )\n      .pipe(first());\n  }\n\n  createClient(createClientData: {\n    name: string;\n    identifier: string;\n    roles: BasicRole[];\n  }): Observable<ClientCreateResult> {\n    return this.http\n      .post<ClientCreateResult>(this.authClientApi, createClientData)\n      .pipe(first());\n  }\n\n  deleteClient(subjectId: number) {\n    return this.http.delete(`${this.authClientApi}/${subjectId}`).pipe(first());\n  }\n\n  updateClientRoles(clientId: number, roles: BasicRole[]) {\n    return this.http\n      .put(`${this.authClientApi}/${clientId}/role`, { roles })\n      .pipe(first());\n  }\n\n  updateClient(subjectId: number, updateBody: ClientUpdateBody) {\n    return this.http\n      .put(`${this.authClientApi}/${subjectId}`, updateBody)\n      .pipe(first());\n  }\n\n  getApplications(): Observable<ApplicationResult> {\n    return this.http.get<ApplicationResult>(this.authApplicationApi);\n  }\n\n  get apiUrl() {\n    return this.configuration.api;\n  }\n}\n\ninterface ApplicationResult {\n  message: string;\n  code: number;\n  content?: Application[];\n}\n\nexport interface Application {\n  id: number;\n  identifier: string;\n}\n\nexport interface ClientUpdateBody {\n  name: string;\n}\n\nexport interface Client {\n  id: number;\n  subjectId: number;\n  name: string;\n  identifier: string;\n  roles: Role[];\n}\n\ninterface ClientCreateResult {\n  message: string;\n  code: number;\n  content?: ClientCreateContent;\n}\n\nexport interface ClientCreateContent {\n  access_token: string;\n}\n\ninterface ClientPaginationResult {\n  message: string;\n  code: number;\n  content?: ClientPaginationContent;\n}\n\ninterface ClientPaginationContent {\n  items: Client[];\n  pageIndex: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\ninterface OptionResult {\n  message: string;\n  code: number;\n  content?: Part[];\n}\n\ninterface PartPaginationResult {\n  message: string;\n  code: number;\n  content?: PartPaginationContent;\n}\n\ninterface PartPaginationContent {\n  items: Part[];\n  pageIndex: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport interface UserUpdateBody {\n  name: string;\n}\n\ninterface UserPaginationResult {\n  message: string;\n  code: number;\n  content?: PaginationUserContent;\n}\n\ninterface UserProfileResult {\n  message: string;\n  code: number;\n  content?: User;\n}\n\ninterface PaginationUserContent {\n  items: User[];\n  pageIndex: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport interface User {\n  id: number;\n  subjectId: number;\n  name: string;\n  username: string;\n  roles: RoleUser[];\n}\n\nexport interface RoleUser {\n  id: number;\n  identifier: string;\n  parts: BasicPart[];\n}\n\nexport interface BasicPart {\n  id: number;\n  applicationPartName: string;\n  allowed: string[];\n}\n\nexport interface BasicRole {\n  id: number;\n  identifier: string;\n}\n\ninterface RolePaginationResult {\n  message: string;\n  code: number;\n  content?: RolePaginationContent;\n}\n\ninterface RolePaginationContent {\n  items: Role[];\n  pageIndex: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport interface Role {\n  id: number;\n  identifier: string;\n  parts: Part[];\n}\n\nexport interface Part {\n  id: number;\n  applicationPartName: string;\n  allowed: Option[];\n}\n\ninterface RoleResult {\n  message: string;\n  code: number;\n  content?: BasicRole[];\n}\n\nexport interface BasicRole {\n  id: number;\n  identifier: string;\n}\n\nexport interface Option {\n  allowed: string;\n  id: number;\n}\n","import { NodebootOauth2StarterService } from './nodeboot-oauth2-starter.service';\nimport { Component, Input, OnInit } from '@angular/core';\n@Component({\n  selector: 'lib-nodeboot-oauth2-starter',\n  templateUrl: './nodeboot-oauth2-starter.component.html',\n  styleUrls: ['./global.scss'],\n})\nexport class NodebootOauth2StarterComponent implements OnInit {\n  testTextT!: string;\n  @Input() otherText!: string;\n  constructor(private nbService: NodebootOauth2StarterService) {\n    this.testTextT = this.nbService.apiUrl;\n  }\n\n  ngOnInit(): void {}\n}\n","","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  NodebootOauth2StarterService,\n  User,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-delete-user',\n  templateUrl: './delete-user.component.html',\n  styleUrls: ['./delete-user.component.scss'],\n})\nexport class DeleteUserComponent implements OnInit {\n  errorMessage!: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteUserComponent>,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public user: User\n  ) {}\n\n  ngOnInit(): void {}\n\n  delete() {\n    this.dialogRef.disableClose = true;\n    this.nbService.deleteUser(this.user.subjectId).subscribe({\n      error: (err) => {\n        this.dialogRef.disableClose = false;\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n      },\n      next: () => {\n        this.dialogRef.close(true);\n      },\n    });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Delete User {{ user.name }}</h2>\n<div mat-dialog-content>\n  <div class=\"error-display\" *ngIf=\"errorMessage\">\n    <h5>{{ errorMessage }}</h5>\n  </div>\n  <p>Are you sure?</p>\n</div>\n<div align=\"end\" mat-dialog-actions>\n  <button\n    (click)=\"closeDialog()\"\n    type=\"button\"\n    color=\"warn\"\n    mat-stroked-button\n    [disabled]=\"dialogRef.disableClose\"\n  >\n    Cancel</button\n  ><button\n    (click)=\"delete()\"\n    type=\"button\"\n    color=\"primary\"\n    mat-flat-button\n    [disabled]=\"dialogRef.disableClose\"\n  >\n    Delete\n  </button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  NodebootOauth2StarterService,\n  User,\n  UserUpdateBody,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.scss'],\n})\nexport class UpdateUserComponent implements OnInit {\n  errorMessage!: string;\n  updateUserForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<UpdateUserComponent>,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public user: User\n  ) {\n    this.updateUserForm = this.formBuilder.group({\n      name: this.formBuilder.control(\n        user.name,\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(45),\n          Validators.pattern(/^[a-zA-Z0-9_\\.\\-\\/\\s]+$/),\n        ])\n      ),\n    });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  updateUser(updateUserData: UserUpdateBody) {\n    this.dialogRef.disableClose = true;\n    this.nbService.updateUser(this.user.subjectId, updateUserData).subscribe({\n      error: (err) => {\n        this.dialogRef.disableClose = false;\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n      },\n      next: () => {\n        this.dialogRef.close(true);\n      },\n    });\n  }\n\n  ngOnInit(): void {}\n}\n","<h2 mat-dialog-title>Update User {{ user.name }}</h2>\n<form\n  [formGroup]=\"updateUserForm\"\n  (ngSubmit)=\"updateUser(updateUserForm.value)\"\n>\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Name</mat-label>\n      <input matInput formControlName=\"name\" name=\"name\" required />\n      <mat-hint>Put your name</mat-hint>\n    </mat-form-field>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!updateUserForm.valid || dialogRef.disableClose\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Update\n    </button>\n  </div>\n</form>\n","import { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule,\r\n    MatListModule,\r\n    MatExpansionModule,\r\n    MatTooltipModule,\r\n  ],\r\n})\r\nexport class LibraryMaterials {}\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { User } from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-view-user-roles',\n  templateUrl: './view-user-roles.component.html',\n  styleUrls: ['./view-user-roles.component.scss'],\n})\nexport class ViewUserRolesComponent implements OnInit {\n  userTitle: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<ViewUserRolesComponent>,\n    @Inject(MAT_DIALOG_DATA) public user: User\n  ) {\n    this.userTitle = `${user.name} roles`;\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n  ngOnInit(): void {}\n}\n","<h2 class=\"primary-color\" mat-dialog-title>{{ userTitle }}</h2>\n<div mat-dialog-content>\n  <div class=\"accordion-container\">\n    <mat-accordion>\n      <mat-expansion-panel *ngFor=\"let role of user.roles\">\n        <mat-expansion-panel-header>\n          <mat-panel-title> {{ role.identifier }} </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h4>Grouped by application part</h4>\n        <mat-list>\n          <div *ngFor=\"let option of role.parts\">\n            <div mat-subheader>{{ option.applicationPartName }}</div>\n            <mat-list-item *ngFor=\"let allowed of option.allowed\">\n              <mat-icon mat-list-icon>vpn_key</mat-icon>\n              <div mat-line>{{ option.applicationPartName }}:{{ allowed }}</div>\n            </mat-list-item>\n            <mat-divider></mat-divider>\n          </div>\n        </mat-list>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </div>\n</div>\n<div align=\"end\" mat-dialog-actions>\n  <button\n    (click)=\"closeDialog()\"\n    type=\"button\"\n    color=\"primary\"\n    mat-stroked-button\n  >\n    Ok\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n  BasicRole,\n  NodebootOauth2StarterService,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.scss'],\n})\nexport class CreateUserComponent implements OnInit {\n  createUserForm: FormGroup;\n  errorMessage!: string;\n  errorMessageRoles!: string;\n  roles: BasicRole[] = [];\n  rolesList: BasicRole[] = [];\n  hidePassword = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateUserComponent>,\n    private formBuilder: FormBuilder,\n    private nbService: NodebootOauth2StarterService\n  ) {\n    this.nbService.getRolesBasic().subscribe({\n      error: (err) => {\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n        this.roles = [];\n      },\n      next: (res) => {\n        this.roles = res.content || [];\n      },\n    });\n    this.createUserForm = this.formBuilder.group({\n      name: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(45),\n          Validators.pattern(/^[a-zA-Z0-9_\\.\\-\\/\\s]+$/),\n        ])\n      ),\n      username: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(/^[a-zA-Z0-9]+$/),\n          Validators.minLength(4),\n          Validators.maxLength(20),\n        ])\n      ),\n      password: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\n            /^[a-zA-Z0-9\\d@$!%*#?&]*[A-Z]+[a-zA-Z0-9\\d@$!%*#?&]*$/\n          ),\n          Validators.pattern(\n            /^[a-zA-Z0-9\\d@$!%*#?&]*[0-9]+[a-zA-Z0-9\\d@$!%*#?&]*$/\n          ),\n          Validators.pattern(\n            /^[a-zA-Z0-9\\d@$!%*#?&]*[a-z]+[a-zA-Z0-9\\d@$!%*#?&]*$/\n          ),\n          Validators.minLength(6),\n        ])\n      ),\n      role: this.formBuilder.control(''),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  addRoleToList() {\n    const roleValue = this.createUserForm.get('role')?.value;\n    if (!roleValue) {\n      return;\n    }\n    const indexOfRole = this.roles.indexOf(roleValue);\n    this.roles.splice(indexOfRole, 1);\n    this.rolesList.push(roleValue);\n    this.createUserForm.get('role')?.setValue('');\n  }\n\n  removeRoleToList(role: BasicRole) {\n    const roleValue = role;\n    const indexOfRole = this.roles.indexOf(roleValue);\n    this.rolesList.splice(indexOfRole, 1);\n    this.roles.push(roleValue);\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  createUser(createUserData: {\n    name: string;\n    username: string;\n    password: string;\n    role: string | undefined;\n  }) {\n    createUserData.role = undefined;\n    this.dialogRef.disableClose = true;\n    this.nbService\n      .createUser({ ...createUserData, roles: this.rolesList })\n      .subscribe({\n        error: (err) => {\n          this.dialogRef.disableClose = false;\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n        },\n        next: () => {\n          this.dialogRef.close(true);\n        },\n      });\n  }\n}\n","<h2 mat-dialog-title>Create User</h2>\n<form\n  [formGroup]=\"createUserForm\"\n  (ngSubmit)=\"createUser(createUserForm.value)\"\n>\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Name</mat-label>\n      <input matInput formControlName=\"name\" name=\"name\" required />\n      <mat-hint>Put your name</mat-hint>\n    </mat-form-field>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Username</mat-label>\n      <input\n        matInput\n        placeholder=\"admin01\"\n        formControlName=\"username\"\n        name=\"username\"\n        required\n      />\n      <mat-hint>Your username</mat-hint>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\" class=\"forms-field\">\n      <mat-label>Password</mat-label>\n      <input\n        formControlName=\"password\"\n        name=\"password\"\n        matInput\n        [type]=\"hidePassword ? 'password' : 'text'\"\n        required\n      />\n      <button\n        type=\"button\"\n        mat-icon-button\n        matSuffix\n        (click)=\"hidePassword = !hidePassword\"\n        [attr.aria-label]=\"'hidePassword password'\"\n        [attr.aria-pressed]=\"hidePassword\"\n      >\n        <mat-icon>{{\n          hidePassword ? \"visibility_off\" : \"visibility\"\n        }}</mat-icon>\n      </button>\n      <mat-hint>Put your password</mat-hint>\n    </mat-form-field>\n    <div class=\"select-role\">\n      <mat-form-field class=\"forms-field\" appearance=\"fill\">\n        <mat-label>Select A Role</mat-label>\n        <mat-select name=\"role\" formControlName=\"role\">\n          <mat-option [value]=\"role\" *ngFor=\"let role of roles\">{{\n            role.identifier\n          }}</mat-option>\n        </mat-select>\n        <mat-hint>Select a role and add it</mat-hint>\n      </mat-form-field>\n      <button type=\"button\" (click)=\"addRoleToList()\" mat-stroked-button>\n        +\n      </button>\n    </div>\n    <div *ngFor=\"let role of rolesList\" class=\"roles-list\">\n      <div class=\"role-title\">\n        <h3>{{ role.identifier }}</h3>\n      </div>\n      <button\n        (click)=\"removeRoleToList(role)\"\n        color=\"warn\"\n        type=\"button\"\n        mat-stroked-button\n      >\n        -\n      </button>\n    </div>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!createUserForm.valid || rolesList.length === 0\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Create\n    </button>\n  </div>\n</form>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  BasicRole,\n  NodebootOauth2StarterService,\n  User,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-add-user-roles',\n  templateUrl: './add-user-roles.component.html',\n  styleUrls: ['./add-user-roles.component.scss'],\n})\nexport class AddUserRolesComponent implements OnInit {\n  addRolesForm: FormGroup;\n  errorMessage!: string;\n  errorMessageRoles!: string;\n  roles: BasicRole[] = [];\n  rolesList: BasicRole[] = [];\n\n  constructor(\n    public dialogRef: MatDialogRef<AddUserRolesComponent>,\n    private formBuilder: FormBuilder,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public user: User\n  ) {\n    this.nbService.getRolesBasic().subscribe({\n      error: (err) => {\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n        this.roles = [];\n      },\n      next: (res) => {\n        const availableRoles = res.content?.flatMap((c) => {\n          const roleExist = user.roles.findIndex((r) => c.id == r.id) as number;\n          if (roleExist === -1) {\n            return c;\n          }\n          this.rolesList.push(c);\n          return [];\n        });\n        this.roles = availableRoles || [];\n      },\n    });\n    this.addRolesForm = this.formBuilder.group({\n      role: this.formBuilder.control(''),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  addRoleToList() {\n    const roleValue = this.addRolesForm.get('role')?.value;\n    if (!roleValue) {\n      return;\n    }\n    const indexOfRole = this.roles.indexOf(roleValue);\n    this.roles.splice(indexOfRole, 1);\n    this.rolesList.push(roleValue);\n    this.addRolesForm.get('role')?.setValue('');\n  }\n\n  removeRoleToList(role: BasicRole) {\n    const roleValue = role;\n    const indexOfRole = this.roles.indexOf(roleValue);\n    this.rolesList.splice(indexOfRole, 1);\n    this.roles.push(roleValue);\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  updateRoles() {\n    const rolesListToSend = this.rolesList.flatMap((rl) => {\n      const roleExist = this.user.roles.findIndex(\n        (r) => rl.id == r.id\n      ) as number;\n      if (roleExist === -1) {\n        return rl;\n      }\n      return [];\n    });\n    if (rolesListToSend.length === 0) {\n      return this.dialogRef.close(false);\n    }\n    this.nbService.updateUserRoles(this.user.id, rolesListToSend).subscribe({\n      error: (err) => {\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n        this.roles = [];\n      },\n      next: () => {\n        this.dialogRef.close(true);\n      },\n    });\n  }\n}\n","<h2 mat-dialog-title>Modify roles of {{ user.name }}</h2>\n<form [formGroup]=\"addRolesForm\" (ngSubmit)=\"updateRoles()\">\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <div class=\"select-role\">\n      <mat-form-field class=\"forms-field\" appearance=\"fill\">\n        <mat-label>Select A Role</mat-label>\n        <mat-select name=\"role\" formControlName=\"role\">\n          <mat-option [value]=\"role\" *ngFor=\"let role of roles\">{{\n            role.identifier\n          }}</mat-option>\n        </mat-select>\n        <mat-hint>Select a role and add it</mat-hint>\n      </mat-form-field>\n      <button type=\"button\" (click)=\"addRoleToList()\" mat-stroked-button>\n        +\n      </button>\n    </div>\n    <div *ngFor=\"let role of rolesList\" class=\"roles-list\">\n      <div class=\"role-title\">\n        <h3>{{ role.identifier }}</h3>\n      </div>\n      <button\n        (click)=\"removeRoleToList(role)\"\n        color=\"warn\"\n        type=\"button\"\n        mat-stroked-button\n      >\n        -\n      </button>\n    </div>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!addRolesForm.valid || rolesList.length === 0\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Update\n    </button>\n  </div>\n</form>\n","import {\n  NodebootOauth2StarterService,\n  User,\n} from './../nodeboot-oauth2-starter.service';\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport {\n  BehaviorSubject,\n  Subscription,\n  merge,\n  startWith,\n  switchMap,\n  catchError,\n  of,\n  map,\n  first,\n} from 'rxjs';\nimport { ViewUserRolesComponent } from './view-user-roles/view-user-roles.component';\nimport { CreateUserComponent } from './create-user/create-user.component';\nimport { AddUserRolesComponent } from './add-user-roles/add-user-roles.component';\nimport { DeleteUserComponent } from './delete-user/delete-user.component';\nimport { UpdateUserComponent } from './update-user/update-user.component';\n\n@Component({\n  selector: 'lib-oauth-starter-users',\n  templateUrl: './oauth-starter-users.component.html',\n  styleUrls: ['./oauth-starter-users.component.scss'],\n})\nexport class OauthStarterUsersComponent implements OnDestroy, AfterViewInit {\n  users!: User[];\n  errorMessage!: string | undefined;\n  displayedColumns: string[] = ['id', 'name', 'username', 'roles', 'edit'];\n\n  resultsLength = 0;\n  isLoadingResults = true;\n\n  reload = new BehaviorSubject<number>(0);\n\n  userDataSubscription!: Subscription;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private nbService: NodebootOauth2StarterService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnDestroy(): void {\n    this.userDataSubscription?.unsubscribe();\n    this.sort.sortChange.complete();\n  }\n\n  ngAfterViewInit(): void {\n    this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\n    this.userDataSubscription = merge(\n      this.sort.sortChange,\n      this.paginator.page,\n      this.reload\n    )\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.errorMessage = undefined;\n          this.isLoadingResults = true;\n          return this.nbService!.getUsers(\n            this.paginator.pageIndex,\n            this.sort.direction\n          ).pipe(\n            catchError((err) => {\n              if (err.error) {\n                this.errorMessage = err.error.message;\n              } else {\n                this.errorMessage = 'Unknown Error';\n              }\n              return of(null);\n            })\n          );\n        }),\n        map((data) => {\n          this.isLoadingResults = false;\n          if (data === null) {\n            return [];\n          }\n          this.resultsLength = data.content?.totalItems || 0;\n          return data.content?.items || [];\n        })\n      )\n      .subscribe((data) => {\n        this.users = data;\n      });\n  }\n\n  // ngOnInit(): void {}\n\n  openCreateUserDialog() {\n    const createUserDialogRef = this.dialog.open(CreateUserComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n    });\n    createUserDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openViewRolesDialog(user: User) {\n    this.dialog.open(ViewUserRolesComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: user,\n    });\n  }\n\n  openDialogDeleteUser(user: User) {\n    const updateRolesDialogRef = this.dialog.open(DeleteUserComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: user,\n    });\n\n    updateRolesDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openUpdateRolesDialog(user: User) {\n    const updateRolesDialogRef = this.dialog.open(AddUserRolesComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: user,\n    });\n\n    updateRolesDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openUpdateUserDialog(user: User) {\n    const updateUserDialogRef = this.dialog.open(UpdateUserComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: user,\n    });\n\n    updateUserDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n}\n","<div class=\"user-container\">\n  <div class=\"users-head\">\n    <h1 class=\"user-title\">Users</h1>\n    <span class=\"separator\"></span>\n    <button (click)=\"openCreateUserDialog()\" color=\"accent\" mat-flat-button>\n      Add User\n    </button>\n  </div>\n  <div class=\"user-body\">\n    <div class=\"container-table mat-elevation-z8\">\n      <div class=\"loading-shade\" *ngIf=\"isLoadingResults\">\n        <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n      </div>\n\n      <div class=\"example-table-container\">\n        <table\n          mat-table\n          [dataSource]=\"users\"\n          class=\"user-table\"\n          matSort\n          matSortActive=\"id\"\n          matSortDisableClear\n          matSortDirection=\"asc\"\n        >\n          <ng-container matColumnDef=\"id\">\n            <th mat-sort-header mat-header-cell *matHeaderCellDef>id</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"username\">\n            <th mat-header-cell *matHeaderCellDef>Username</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.username }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"roles\">\n            <th mat-header-cell *matHeaderCellDef>Roles</th>\n            <td class=\"roles-column\" mat-cell *matCellDef=\"let row\">\n              <button (click)=\"openViewRolesDialog(row)\" mat-stroked-button>\n                View Roles\n              </button>\n              <button\n                [disabled]=\"row.username === 'admin'\"\n                (click)=\"openUpdateRolesDialog(row)\"\n                mat-stroked-button\n              >\n                Update Roles\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td class=\"actions-column\" mat-cell *matCellDef=\"let row\">\n              <button\n                color=\"primary\"\n                [disabled]=\"row.username === 'admin'\"\n                mat-stroked-button\n                (click)=\"openUpdateUserDialog(row)\"\n              >\n                Edit User\n              </button>\n              <button\n                color=\"warn\"\n                [disabled]=\"row.username === 'admin'\"\n                mat-stroked-button\n                (click)=\"openDialogDeleteUser(row)\"\n              >\n                Delete User\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n      </div>\n\n      <mat-paginator\n        [length]=\"resultsLength\"\n        [pageSize]=\"20\"\n        aria-label=\"Select page of GitHub search results\"\n      ></mat-paginator>\n    </div>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  NodebootOauth2StarterService,\n  User,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss'],\n})\nexport class ChangePasswordComponent implements OnInit {\n  changePasswordForm: FormGroup;\n  errorMessage!: string;\n\n  hideNewPassword = true;\n  hideOldPassword = true;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<ChangePasswordComponent>,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public user: User\n  ) {\n    this.changePasswordForm = this.formBuilder.group({\n      oldPassword: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\n            /^[a-zA-Z0-9\\d@$!%*#?&]*[A-Z]+[a-zA-Z0-9\\d@$!%*#?&]*$/\n          ),\n          Validators.pattern(\n            /^[a-zA-Z0-9\\d@$!%*#?&]*[0-9]+[a-zA-Z0-9\\d@$!%*#?&]*$/\n          ),\n          Validators.pattern(\n            /^[a-zA-Z0-9\\d@$!%*#?&]*[a-z]+[a-zA-Z0-9\\d@$!%*#?&]*$/\n          ),\n          Validators.minLength(6),\n        ])\n      ),\n      newPassword: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\n            /^[a-zA-Z0-9\\d@$!%*#?&]*[A-Z]+[a-zA-Z0-9\\d@$!%*#?&]*$/\n          ),\n          Validators.pattern(\n            /^[a-zA-Z0-9\\d@$!%*#?&]*[0-9]+[a-zA-Z0-9\\d@$!%*#?&]*$/\n          ),\n          Validators.pattern(\n            /^[a-zA-Z0-9\\d@$!%*#?&]*[a-z]+[a-zA-Z0-9\\d@$!%*#?&]*$/\n          ),\n          Validators.minLength(6),\n        ])\n      ),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  changePassword(updatePasswordData: {\n    oldPassword: string;\n    newPassword: string;\n  }) {\n    this.nbService\n      .updatePassword(\n        this.user.id,\n        updatePasswordData.newPassword,\n        updatePasswordData.oldPassword\n      )\n      .subscribe({\n        error: (err) => {\n          this.dialogRef.disableClose = false;\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n        },\n        next: () => {\n          this.dialogRef.close(true);\n        },\n      });\n  }\n}\n","<h2 mat-dialog-title>Change Password</h2>\n<form\n  [formGroup]=\"changePasswordForm\"\n  (ngSubmit)=\"changePassword(changePasswordForm.value)\"\n>\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <mat-form-field appearance=\"fill\" class=\"forms-field\">\n      <mat-label>Old Password</mat-label>\n      <input\n        formControlName=\"oldPassword\"\n        name=\"oldPassword\"\n        matInput\n        [type]=\"hideOldPassword ? 'password' : 'text'\"\n        required\n      />\n      <button\n        type=\"button\"\n        mat-icon-button\n        matSuffix\n        (click)=\"hideOldPassword = !hideOldPassword\"\n        [attr.aria-label]=\"'hideOldPassword password'\"\n        [attr.aria-pressed]=\"hideOldPassword\"\n      >\n        <mat-icon>{{\n          hideOldPassword ? \"visibility_off\" : \"visibility\"\n        }}</mat-icon>\n      </button>\n      <mat-hint>Put your current password</mat-hint>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\" class=\"forms-field\">\n      <mat-label>New Password</mat-label>\n      <input\n        formControlName=\"newPassword\"\n        name=\"newPassword\"\n        matInput\n        [type]=\"hideNewPassword ? 'password' : 'text'\"\n        required\n      />\n      <button\n        type=\"button\"\n        mat-icon-button\n        matSuffix\n        (click)=\"hideNewPassword = !hideNewPassword\"\n        [attr.aria-label]=\"'hideOldPassword password'\"\n        [attr.aria-pressed]=\"hideNewPassword\"\n      >\n        <mat-icon>{{\n          hideNewPassword ? \"visibility_off\" : \"visibility\"\n        }}</mat-icon>\n      </button>\n      <mat-hint>Put your new password</mat-hint>\n    </mat-form-field>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!changePasswordForm.valid\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Update\n    </button>\n  </div>\n</form>\n","import {\n  NodebootOauth2StarterService,\n  User,\n} from './../nodeboot-oauth2-starter.service';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ChangePasswordComponent } from './change-password/change-password.component';\n\n@Component({\n  selector: 'lib-oauth-starter-user-profile',\n  templateUrl: './oauth-starter-user-profile.component.html',\n  styleUrls: ['./oauth-starter-user-profile.component.scss'],\n})\nexport class OauthStarterUserProfileComponent implements OnInit {\n  user!: User;\n\n  constructor(\n    private nbService: NodebootOauth2StarterService,\n    public dialog: MatDialog\n  ) {\n    this.nbService.getUserProfile().subscribe({\n      next: (res) => {\n        this.user = res.content as User;\n      },\n    });\n  }\n\n  ngOnInit(): void {}\n\n  openChangePasswordDialog() {\n    this.dialog.open(ChangePasswordComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: this.user,\n    });\n  }\n}\n","<div>\n  <div class=\"profile-container\" *ngIf=\"user\">\n    <div class=\"header\">\n      <h1>{{ user.name }} Profile</h1>\n      <h4>#{{ user.id }}</h4>\n    </div>\n    <section>\n      <h3>Roles</h3>\n      <mat-accordion>\n        <mat-expansion-panel *ngFor=\"let role of user.roles\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              #{{ role.id }} | Role Name: {{ role.identifier }}\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <mat-list role=\"list\">\n            <mat-list-item *ngFor=\"let part of role.parts\" role=\"listitem\"\n              >{{ part.applicationPartName }} | Options:\n              {{ part.allowed.join(\",\") }}</mat-list-item\n            >\n          </mat-list>\n        </mat-expansion-panel>\n      </mat-accordion>\n      <div class=\"actions\">\n        <button\n          (click)=\"openChangePasswordDialog()\"\n          type=\"button\"\n          mat-flat-button\n          color=\"accent\"\n        >\n          Change Password\n        </button>\n      </div>\n    </section>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport {\n  Part,\n  Option,\n  NodebootOauth2StarterService,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-create-role',\n  templateUrl: './create-role.component.html',\n  styleUrls: ['./create-role.component.scss'],\n})\nexport class CreateRoleComponent implements OnInit, OnDestroy {\n  createRoleForm: FormGroup;\n  errorMessage!: string;\n  options: Part[] = [];\n  allowedShowList: Option[] = [];\n  allowedObject: Record<string, Option[]> = {};\n  objectKeys = Object.keys;\n  partSubscription: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private nbService: NodebootOauth2StarterService,\n    public dialogRef: MatDialogRef<CreateRoleComponent>\n  ) {\n    this.nbService.getPartsBasic().subscribe({\n      error: (err) => {\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n        this.options = [];\n      },\n      next: (res) => {\n        this.options = res.content || [];\n      },\n    });\n    this.createRoleForm = this.formBuilder.group({\n      identifier: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(/^[a-zA-Z0-9_\\.\\-\\/]+$/),\n          Validators.minLength(4),\n          Validators.maxLength(20),\n        ])\n      ),\n      part: this.formBuilder.control(''),\n      selected: this.formBuilder.control(''),\n    });\n    this.partSubscription = this.createRoleForm\n      .get('part')\n      ?.valueChanges.subscribe({\n        next: (value) => {\n          this.allowedShowList =\n            this.options.find((o) => o.applicationPartName === value)\n              ?.allowed || [];\n          this.createRoleForm\n            .get('selected')\n            ?.setValue(\n              this.allowedObject[this.createRoleForm.get('part')?.value] || []\n            );\n        },\n      }) as Subscription;\n  }\n\n  ngOnDestroy(): void {\n    this.partSubscription?.unsubscribe();\n  }\n\n  ngOnInit(): void {}\n\n  createRole(roleBody: { identifier: string; part: string | undefined }) {\n    this.nbService\n      .createRole(roleBody.identifier, this.allowedObject)\n      .subscribe({\n        error: (err) => {\n          this.dialogRef.disableClose = false;\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n        },\n        next: () => {\n          this.dialogRef.close(true);\n        },\n      });\n  }\n\n  selectedChange(selected: boolean, value: Option) {\n    const currentAllowedObject =\n      this.allowedObject[this.createRoleForm.get('part')?.value];\n    if (\n      value.allowed === '*' &&\n      selected &&\n      this.createRoleForm.get('selected')?.value.length !==\n        this.allowedShowList.length\n    ) {\n      this.createRoleForm.get('selected')?.setValue(this.allowedShowList);\n      this.allowedObject[this.createRoleForm.get('part')?.value] = [\n        this.allowedShowList[0],\n      ];\n    } else if (value.allowed === '*' && !selected) {\n      const temporalAllowed = [...this.allowedShowList];\n      temporalAllowed.shift();\n      this.allowedObject[this.createRoleForm.get('part')?.value] =\n        temporalAllowed;\n    } else if (selected) {\n      if (!(currentAllowedObject && currentAllowedObject[0].allowed === '*')) {\n        if (\n          currentAllowedObject &&\n          currentAllowedObject.findIndex((ca) => ca.id === value.id)\n        ) {\n          currentAllowedObject.push(value);\n        } else {\n          this.allowedObject[this.createRoleForm.get('part')?.value] = [value];\n        }\n      }\n    } else {\n      const indexOfValue = this.createRoleForm\n        .get('selected')\n        ?.value.indexOf(value);\n      if (currentAllowedObject && indexOfValue !== -1) {\n        currentAllowedObject.splice(indexOfValue, 1);\n      }\n      if (currentAllowedObject && currentAllowedObject.length === 0) {\n        delete this.allowedObject[this.createRoleForm.get('part')?.value];\n      }\n    }\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Create Role</h2>\n<form\n  [formGroup]=\"createRoleForm\"\n  (ngSubmit)=\"createRole(createRoleForm.value)\"\n>\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Identifier</mat-label>\n      <input\n        matInput\n        placeholder=\"admin01\"\n        formControlName=\"identifier\"\n        name=\"identifier\"\n        required\n      />\n      <mat-hint>A role identifier</mat-hint>\n    </mat-form-field>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Select a part</mat-label>\n      <mat-select name=\"part\" formControlName=\"part\">\n        <mat-option\n          [value]=\"option.applicationPartName\"\n          *ngFor=\"let option of options\"\n          >{{ option.applicationPartName }}</mat-option\n        >\n      </mat-select>\n      <mat-hint>Select an application part</mat-hint>\n    </mat-form-field>\n    <mat-selection-list #allowed formControlName=\"selected\">\n      <mat-list-option\n        (selectedChange)=\"selectedChange($event, allowedL)\"\n        [value]=\"allowedL\"\n        [disabled]=\"\n          allowedL.allowed !== '*' &&\n          createRoleForm.get('selected')?.value.length ===\n            allowedShowList.length\n            ? true\n            : false\n        \"\n        *ngFor=\"let allowedL of allowedShowList\"\n      >\n        {{ allowedL.allowed }}\n      </mat-list-option>\n    </mat-selection-list>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"\n        !createRoleForm.valid || objectKeys(allowedObject).length === 0\n      \"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Create\n    </button>\n  </div>\n</form>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  NodebootOauth2StarterService,\n  Role,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-delete-role',\n  templateUrl: './delete-role.component.html',\n  styleUrls: ['./delete-role.component.scss'],\n})\nexport class DeleteRoleComponent implements OnInit {\n  errorMessage!: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteRoleComponent>,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public role: Role\n  ) {}\n\n  ngOnInit(): void {}\n\n  delete() {\n    this.dialogRef.disableClose = true;\n    this.nbService.deleteRole(this.role.id).subscribe({\n      error: (err) => {\n        this.dialogRef.disableClose = false;\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n      },\n      next: () => {\n        this.dialogRef.close(true);\n      },\n    });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Delete Role {{ role.identifier }}</h2>\n<div mat-dialog-content>\n  <div class=\"error-display\" *ngIf=\"errorMessage\">\n    <h5>{{ errorMessage }}</h5>\n  </div>\n  <p>Are you sure?</p>\n</div>\n<div align=\"end\" mat-dialog-actions>\n  <button\n    (click)=\"closeDialog()\"\n    type=\"button\"\n    color=\"warn\"\n    mat-stroked-button\n    [disabled]=\"dialogRef.disableClose\"\n  >\n    Cancel</button\n  ><button\n    (click)=\"delete()\"\n    type=\"button\"\n    color=\"primary\"\n    mat-flat-button\n    [disabled]=\"dialogRef.disableClose\"\n  >\n    Delete\n  </button>\n</div>\n","import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport {\n  Part,\n  Role,\n  Option,\n  NodebootOauth2StarterService,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-options',\n  templateUrl: './options.component.html',\n  styleUrls: ['./options.component.scss'],\n})\nexport class OptionsComponent implements OnInit, OnDestroy {\n  optionsForm: FormGroup;\n  errorMessage!: string;\n  options: Part[] = [];\n  allowedShowList: Option[] = [];\n  allowedObject: Record<string, Option[]> = {};\n  originalAllowedObject: Record<string, Option[]> = {};\n  objectKeys = Object.keys;\n  convertToString = JSON.stringify;\n  partSubscription: Subscription;\n\n  constructor(\n    public dialogRef: MatDialogRef<OptionsComponent>,\n    @Inject(MAT_DIALOG_DATA) public role: Role,\n    private nbService: NodebootOauth2StarterService,\n    private formBuilder: FormBuilder\n  ) {\n    for (const option of this.role.parts) {\n      this.allowedObject[option.applicationPartName] = [...option.allowed];\n      this.originalAllowedObject[option.applicationPartName] = [\n        ...option.allowed,\n      ];\n    }\n    this.nbService.getPartsBasic().subscribe({\n      error: (err) => {\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n        this.options = [];\n      },\n      next: (res) => {\n        this.options = res.content || [];\n      },\n    });\n    this.optionsForm = this.formBuilder.group({\n      part: this.formBuilder.control(''),\n      selected: this.formBuilder.control([]),\n    });\n    this.partSubscription = this.optionsForm\n      .get('part')\n      ?.valueChanges.subscribe({\n        next: (value) => {\n          this.allowedShowList =\n            this.options.find((o) => o.applicationPartName === value)\n              ?.allowed || [];\n          this.optionsForm\n            .get('selected')\n            ?.setValue(\n              this.allowedObject[this.optionsForm.get('part')?.value]?.map(\n                (asl) => JSON.stringify(asl)\n              ) || []\n            );\n        },\n      }) as Subscription;\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.partSubscription?.unsubscribe();\n  }\n\n  selectedChange(selected: boolean, value: string) {\n    const parsedValue = JSON.parse(value) as Option;\n    const currentAllowedObject =\n      this.allowedObject[this.optionsForm.get('part')?.value];\n    if (\n      parsedValue.allowed === '*' &&\n      selected &&\n      this.optionsForm.get('selected')?.value.length !==\n        this.allowedShowList.length\n    ) {\n      this.optionsForm\n        .get('selected')\n        ?.setValue(this.allowedShowList.map((asl) => JSON.stringify(asl)));\n      this.allowedObject[this.optionsForm.get('part')?.value] = [\n        this.allowedShowList[0],\n      ];\n    } else if (parsedValue.allowed === '*' && !selected) {\n      const temporalAllowed = [...this.allowedShowList];\n      temporalAllowed.shift();\n      this.allowedObject[this.optionsForm.get('part')?.value] = temporalAllowed;\n    } else if (selected) {\n      if (!(currentAllowedObject && currentAllowedObject[0].allowed === '*')) {\n        if (\n          currentAllowedObject &&\n          currentAllowedObject.findIndex((ca) => ca.id === parsedValue.id) ===\n            -1\n        ) {\n          currentAllowedObject.push(parsedValue);\n        } else {\n          this.allowedObject[this.optionsForm.get('part')?.value] = [\n            parsedValue,\n          ];\n        }\n      }\n    } else {\n      const indexOfValue = this.optionsForm\n        .get('selected')\n        ?.value.indexOf(parsedValue);\n      if (currentAllowedObject && indexOfValue !== -1) {\n        currentAllowedObject.splice(indexOfValue, 1);\n      }\n      if (currentAllowedObject && currentAllowedObject.length === 0) {\n        delete this.allowedObject[this.optionsForm.get('part')?.value];\n      }\n    }\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  updateOptions() {\n    this.nbService\n      .updateRoleOptions(\n        this.role.id,\n        this.allowedObject,\n        this.originalAllowedObject\n      )\n      .subscribe({\n        error: (err) => {\n          this.dialogRef.disableClose = false;\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n        },\n        next: () => {\n          this.dialogRef.close(true);\n        },\n      });\n  }\n}\n","<h2 mat-dialog-title>Role {{ role.identifier }} access options</h2>\n<form [formGroup]=\"optionsForm\" (ngSubmit)=\"updateOptions()\">\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Select a part</mat-label>\n      <mat-select name=\"part\" formControlName=\"part\">\n        <mat-option\n          [value]=\"option.applicationPartName\"\n          *ngFor=\"let option of options\"\n          >{{ option.applicationPartName }}</mat-option\n        >\n      </mat-select>\n      <mat-hint>Select an application part</mat-hint>\n    </mat-form-field>\n    <mat-selection-list #allowed formControlName=\"selected\">\n      <mat-list-option\n        (selectedChange)=\"selectedChange($event, convertToString(allowedL))\"\n        [value]=\"convertToString(allowedL)\"\n        [disabled]=\"\n          allowedL.allowed !== '*' &&\n          optionsForm.get('selected')?.value.length === allowedShowList.length\n            ? true\n            : false\n        \"\n        *ngFor=\"let allowedL of allowedShowList\"\n      >\n        {{ allowedL.allowed }}\n      </mat-list-option>\n    </mat-selection-list>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!optionsForm.valid || objectKeys(allowedObject).length === 0\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Update\n    </button>\n  </div>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport {\n  BehaviorSubject,\n  Subscription,\n  merge,\n  startWith,\n  switchMap,\n  catchError,\n  of,\n  map,\n  first,\n} from 'rxjs';\nimport {\n  BasicRole,\n  NodebootOauth2StarterService,\n  Role,\n} from '../nodeboot-oauth2-starter.service';\nimport { CreateRoleComponent } from './create-role/create-role.component';\nimport { DeleteRoleComponent } from './delete-role/delete-role.component';\nimport { OptionsComponent } from './options/options.component';\n\n@Component({\n  selector: 'lib-oauth-starter-roles',\n  templateUrl: './oauth-starter-roles.component.html',\n  styleUrls: ['./oauth-starter-roles.component.scss'],\n})\nexport class OauthStarterRolesComponent implements OnInit {\n  roles!: BasicRole[];\n  errorMessage!: string | undefined;\n  displayedColumns: string[] = ['id', 'identifier', 'options', 'delete'];\n\n  resultsLength = 0;\n  isLoadingResults = true;\n\n  reload = new BehaviorSubject<number>(0);\n\n  roleDataSubscription!: Subscription;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private nbService: NodebootOauth2StarterService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.roleDataSubscription?.unsubscribe();\n    this.sort.sortChange.complete();\n  }\n\n  ngAfterViewInit(): void {\n    this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\n    this.roleDataSubscription = merge(\n      this.sort.sortChange,\n      this.paginator.page,\n      this.reload\n    )\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.errorMessage = undefined;\n          this.isLoadingResults = true;\n          return this.nbService\n            .getRoles(this.paginator.pageIndex, this.sort.direction)\n            .pipe(\n              catchError((err) => {\n                if (err.error) {\n                  this.errorMessage = err.error.message;\n                } else {\n                  this.errorMessage = 'Unknown Error';\n                }\n                return of(null);\n              })\n            );\n        }),\n        map((data) => {\n          this.isLoadingResults = false;\n          if (data === null) {\n            return [];\n          }\n          this.resultsLength = data.content?.totalItems || 0;\n          return data.content?.items || [];\n        })\n      )\n      .subscribe((data) => {\n        this.roles = data;\n      });\n  }\n\n  openCreateRoleDialog() {\n    const createRoleDialogRef = this.dialog.open(CreateRoleComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n    });\n    createRoleDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openOptionsDialog(role: Role) {\n    const optionsRoleDialogRef = this.dialog.open(OptionsComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: role,\n    });\n    optionsRoleDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openDeleteRoleDialog(role: Role) {\n    const deleteRoleDialogRef = this.dialog.open(DeleteRoleComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: role,\n    });\n    deleteRoleDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n}\n","<div class=\"role-container\">\n  <div class=\"role-head\">\n    <h1 class=\"role-title\">Roles</h1>\n    <span class=\"separator\"></span>\n    <button (click)=\"openCreateRoleDialog()\" color=\"accent\" mat-flat-button>\n      Add Role\n    </button>\n  </div>\n  <div class=\"role-body\">\n    <div class=\"container-table mat-elevation-z8\">\n      <div class=\"loading-shade\" *ngIf=\"isLoadingResults\">\n        <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n      </div>\n\n      <div class=\"example-table-container\">\n        <table\n          mat-table\n          [dataSource]=\"roles\"\n          class=\"user-table\"\n          matSort\n          matSortActive=\"id\"\n          matSortDisableClear\n          matSortDirection=\"asc\"\n        >\n          <ng-container matColumnDef=\"id\">\n            <th mat-sort-header mat-header-cell *matHeaderCellDef>id</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"identifier\">\n            <th mat-header-cell *matHeaderCellDef>Identifier</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.identifier }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"options\">\n            <th mat-header-cell *matHeaderCellDef>Options</th>\n            <td class=\"roles-column\" mat-cell *matCellDef=\"let row\">\n              <button\n                [disabled]=\"row.identifier === 'admin'\"\n                (click)=\"openOptionsDialog(row)\"\n                mat-stroked-button\n              >\n                Options\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td class=\"actions-column\" mat-cell *matCellDef=\"let row\">\n              <button\n                color=\"warn\"\n                [disabled]=\"row.identifier === 'admin'\"\n                mat-stroked-button\n                (click)=\"openDeleteRoleDialog(row)\"\n              >\n                Delete Role\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n      </div>\n\n      <mat-paginator\n        [length]=\"resultsLength\"\n        [pageSize]=\"20\"\n        aria-label=\"Select page of GitHub search results\"\n      ></mat-paginator>\n    </div>\n  </div>\n</div>\n","import { NodebootOauth2StarterService } from './../../nodeboot-oauth2-starter.service';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BasicRole, Client } from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-add-client-roles',\n  templateUrl: './add-client-roles.component.html',\n  styleUrls: ['./add-client-roles.component.scss'],\n})\nexport class AddClientRolesComponent implements OnInit {\n  addRolesForm: FormGroup;\n  errorMessage!: string;\n  errorMessageRoles!: string;\n  roles: BasicRole[] = [];\n  rolesList: BasicRole[] = [];\n\n  constructor(\n    public dialogRef: MatDialogRef<AddClientRolesComponent>,\n    private formBuilder: FormBuilder,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public client: Client\n  ) {\n    this.nbService.getRolesBasic().subscribe({\n      error: (err) => {\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n        this.roles = [];\n      },\n      next: (res) => {\n        const availableRoles = res.content?.flatMap((c) => {\n          const roleExist = client.roles.findIndex(\n            (r) => c.id == r.id\n          ) as number;\n          if (roleExist === -1) {\n            return c;\n          }\n          this.rolesList.push(c);\n          return [];\n        });\n        this.roles = availableRoles || [];\n      },\n    });\n    this.addRolesForm = this.formBuilder.group({\n      role: this.formBuilder.control(''),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  addRoleToList() {\n    const roleValue = this.addRolesForm.get('role')?.value;\n    if (!roleValue) {\n      return;\n    }\n    const indexOfRole = this.roles.indexOf(roleValue);\n    this.roles.splice(indexOfRole, 1);\n    this.rolesList.push(roleValue);\n    this.addRolesForm.get('role')?.setValue('');\n  }\n\n  removeRoleToList(role: BasicRole) {\n    const roleValue = role;\n    const indexOfRole = this.roles.indexOf(roleValue);\n    this.rolesList.splice(indexOfRole, 1);\n    this.roles.push(roleValue);\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  updateRoles() {\n    const rolesListToSend = this.rolesList.flatMap((rl) => {\n      const roleExist = this.client.roles.findIndex(\n        (r) => rl.id == r.id\n      ) as number;\n      if (roleExist === -1) {\n        return rl;\n      }\n      return [];\n    });\n    if (rolesListToSend.length === 0) {\n      return this.dialogRef.close(false);\n    }\n    this.nbService\n      .updateClientRoles(this.client.id, rolesListToSend)\n      .subscribe({\n        error: (err) => {\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n          this.roles = [];\n        },\n        next: () => {\n          this.dialogRef.close(true);\n        },\n      });\n  }\n}\n","<h2 mat-dialog-title>Modify roles of {{ client.name }}</h2>\n<form [formGroup]=\"addRolesForm\" (ngSubmit)=\"updateRoles()\">\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <div class=\"select-role\">\n      <mat-form-field class=\"forms-field\" appearance=\"fill\">\n        <mat-label>Select A Role</mat-label>\n        <mat-select name=\"role\" formControlName=\"role\">\n          <mat-option [value]=\"role\" *ngFor=\"let role of roles\">{{\n            role.identifier\n          }}</mat-option>\n        </mat-select>\n        <mat-hint>Select a role and add it</mat-hint>\n      </mat-form-field>\n      <button type=\"button\" (click)=\"addRoleToList()\" mat-stroked-button>\n        +\n      </button>\n    </div>\n    <div *ngFor=\"let role of rolesList\" class=\"roles-list\">\n      <div class=\"role-title\">\n        <h3>{{ role.identifier }}</h3>\n      </div>\n      <button\n        (click)=\"removeRoleToList(role)\"\n        color=\"warn\"\n        type=\"button\"\n        mat-stroked-button\n      >\n        -\n      </button>\n    </div>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!addRolesForm.valid || rolesList.length === 0\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Update\n    </button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n  BasicRole,\n  NodebootOauth2StarterService,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-create-client',\n  templateUrl: './create-client.component.html',\n  styleUrls: ['./create-client.component.scss'],\n})\nexport class CreateClientComponent implements OnInit {\n  createClientForm: FormGroup;\n  errorMessage!: string;\n  errorMessageRoles!: string;\n  roles: BasicRole[] = [];\n  rolesList: BasicRole[] = [];\n  hidePassword = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateClientComponent>,\n    private formBuilder: FormBuilder,\n    private nbService: NodebootOauth2StarterService\n  ) {\n    this.nbService.getRolesBasic().subscribe({\n      error: (err) => {\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n        this.roles = [];\n      },\n      next: (res) => {\n        this.roles = res.content || [];\n      },\n    });\n    this.createClientForm = this.formBuilder.group({\n      name: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(45),\n          Validators.pattern(/^[a-zA-Z0-9_\\.\\-\\/\\s]+$/),\n        ])\n      ),\n      identifier: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(/^[a-zA-Z0-9_\\.\\-\\/]+$/),\n          Validators.minLength(4),\n          Validators.maxLength(20),\n        ])\n      ),\n      role: this.formBuilder.control(''),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  addRoleToList() {\n    const roleValue = this.createClientForm.get('role')?.value;\n    if (!roleValue) {\n      return;\n    }\n    const indexOfRole = this.roles.indexOf(roleValue);\n    this.roles.splice(indexOfRole, 1);\n    this.rolesList.push(roleValue);\n    this.createClientForm.get('role')?.setValue('');\n  }\n\n  removeRoleToList(role: BasicRole) {\n    const roleValue = role;\n    const indexOfRole = this.roles.indexOf(roleValue);\n    this.rolesList.splice(indexOfRole, 1);\n    this.roles.push(roleValue);\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  createClient(createClientData: {\n    name: string;\n    identifier: string;\n    role: string | undefined;\n  }) {\n    createClientData.role = undefined;\n    this.dialogRef.disableClose = true;\n    this.nbService\n      .createClient({ ...createClientData, roles: this.rolesList })\n      .subscribe({\n        error: (err) => {\n          this.dialogRef.disableClose = false;\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n        },\n        next: (res) => {\n          this.dialogRef.close(res.content);\n        },\n      });\n  }\n}\n","<h2 mat-dialog-title>Create Client</h2>\n<form\n  [formGroup]=\"createClientForm\"\n  (ngSubmit)=\"createClient(createClientForm.value)\"\n>\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Name</mat-label>\n      <input matInput formControlName=\"name\" name=\"name\" required />\n      <mat-hint>Put the client name</mat-hint>\n    </mat-form-field>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Identifier</mat-label>\n      <input\n        matInput\n        placeholder=\"admin01\"\n        formControlName=\"identifier\"\n        name=\"identifier\"\n        required\n      />\n      <mat-hint>Client unique identifier</mat-hint>\n    </mat-form-field>\n    <div class=\"select-role\">\n      <mat-form-field class=\"forms-field\" appearance=\"fill\">\n        <mat-label>Select A Role</mat-label>\n        <mat-select name=\"role\" formControlName=\"role\">\n          <mat-option [value]=\"role\" *ngFor=\"let role of roles\">{{\n            role.identifier\n          }}</mat-option>\n        </mat-select>\n        <mat-hint>Select a role and add it</mat-hint>\n      </mat-form-field>\n      <button type=\"button\" (click)=\"addRoleToList()\" mat-stroked-button>\n        +\n      </button>\n    </div>\n    <div *ngFor=\"let role of rolesList\" class=\"roles-list\">\n      <div class=\"role-title\">\n        <h3>{{ role.identifier }}</h3>\n      </div>\n      <button\n        (click)=\"removeRoleToList(role)\"\n        color=\"warn\"\n        type=\"button\"\n        mat-stroked-button\n      >\n        -\n      </button>\n    </div>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!createClientForm.valid || rolesList.length === 0\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Create\n    </button>\n  </div>\n</form>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  Client,\n  NodebootOauth2StarterService,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-delete-client',\n  templateUrl: './delete-client.component.html',\n  styleUrls: ['./delete-client.component.scss'],\n})\nexport class DeleteClientComponent implements OnInit {\n  errorMessage!: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteClientComponent>,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public client: Client\n  ) {}\n\n  ngOnInit(): void {}\n\n  delete() {\n    this.dialogRef.disableClose = true;\n    this.nbService.deleteClient(this.client.subjectId).subscribe({\n      error: (err) => {\n        this.dialogRef.disableClose = false;\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n      },\n      next: () => {\n        this.dialogRef.close(true);\n      },\n    });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Delete Client {{ client.name }}</h2>\n<div mat-dialog-content>\n  <div class=\"error-display\" *ngIf=\"errorMessage\">\n    <h5>{{ errorMessage }}</h5>\n  </div>\n  <p>Are you sure?</p>\n</div>\n<div align=\"end\" mat-dialog-actions>\n  <button\n    (click)=\"closeDialog()\"\n    type=\"button\"\n    color=\"warn\"\n    mat-stroked-button\n    [disabled]=\"dialogRef.disableClose\"\n  >\n    Cancel</button\n  ><button\n    (click)=\"delete()\"\n    type=\"button\"\n    color=\"primary\"\n    mat-flat-button\n    [disabled]=\"dialogRef.disableClose\"\n  >\n    Delete\n  </button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ClientCreateContent } from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-show-token',\n  templateUrl: './show-token.component.html',\n  styleUrls: ['./show-token.component.scss'],\n})\nexport class ShowTokenComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<ShowTokenComponent>,\n    @Inject(MAT_DIALOG_DATA) public clientResult: ClientCreateContent\n  ) {}\n\n  ngOnInit(): void {}\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Access Token</h2>\n<div mat-dialog-content>\n  <p>Save this access token, it will not be shown again</p>\n  <mat-form-field class=\"full-width\" appearance=\"fill\">\n    <mat-label>Access Token</mat-label>\n    <input disabled type=\"tel\" matInput [value]=\"clientResult.access_token\" />\n    <button\n      matTooltip=\"Info about the action\"\n      mat-icon-button\n      matSuffix\n      ngxClipboard\n      [cbContent]=\"clientResult.access_token\"\n      [attr.aria-label]=\"'Copy Token'\"\n    >\n      <mat-icon matSuffix>file_copy</mat-icon>\n    </button>\n  </mat-form-field>\n</div>\n<div align=\"end\" mat-dialog-actions>\n  <button (click)=\"closeDialog()\" type=\"button\" color=\"warn\" mat-stroked-button>\n    Ok\n  </button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  Client,\n  ClientUpdateBody,\n  NodebootOauth2StarterService,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-update-client',\n  templateUrl: './update-client.component.html',\n  styleUrls: ['./update-client.component.scss'],\n})\nexport class UpdateClientComponent implements OnInit {\n  errorMessage!: string;\n  updateUserForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<UpdateClientComponent>,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public client: Client\n  ) {\n    this.updateUserForm = this.formBuilder.group({\n      name: this.formBuilder.control(\n        client.name,\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(45),\n          Validators.pattern(/^[a-zA-Z0-9_\\.\\-\\/\\s]+$/),\n        ])\n      ),\n    });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  updateUser(updateClientData: ClientUpdateBody) {\n    this.dialogRef.disableClose = true;\n    this.nbService\n      .updateClient(this.client.subjectId, updateClientData)\n      .subscribe({\n        error: (err) => {\n          this.dialogRef.disableClose = false;\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n        },\n        next: () => {\n          this.dialogRef.close(true);\n        },\n      });\n  }\n\n  ngOnInit(): void {}\n}\n","<h2 mat-dialog-title>Update Client {{ client.name }}</h2>\n<form\n  [formGroup]=\"updateUserForm\"\n  (ngSubmit)=\"updateUser(updateUserForm.value)\"\n>\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Name</mat-label>\n      <input matInput formControlName=\"name\" name=\"name\" required />\n      <mat-hint>Put your name</mat-hint>\n    </mat-form-field>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!updateUserForm.valid || dialogRef.disableClose\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Update\n    </button>\n  </div>\n</form>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Client } from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-view-client-roles',\n  templateUrl: './view-client-roles.component.html',\n  styleUrls: ['./view-client-roles.component.scss'],\n})\nexport class ViewClientRolesComponent implements OnInit {\n  userTitle: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<ViewClientRolesComponent>,\n    @Inject(MAT_DIALOG_DATA) public client: Client\n  ) {\n    this.userTitle = `${client.name} roles`;\n  }\n\n  ngOnInit(): void {}\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<h2 class=\"primary-color\" mat-dialog-title>{{ userTitle }}</h2>\n<div mat-dialog-content>\n  <div class=\"accordion-container\">\n    <mat-accordion>\n      <mat-expansion-panel *ngFor=\"let role of client.roles\">\n        <mat-expansion-panel-header>\n          <mat-panel-title> {{ role.identifier }} </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h4>Grouped by application part</h4>\n        <mat-list>\n          <div *ngFor=\"let option of role.parts\">\n            <div mat-subheader>{{ option.applicationPartName }}</div>\n            <mat-list-item *ngFor=\"let allowed of option.allowed\">\n              <mat-icon mat-list-icon>vpn_key</mat-icon>\n              <div mat-line>{{ option.applicationPartName }}:{{ allowed }}</div>\n            </mat-list-item>\n            <mat-divider></mat-divider>\n          </div>\n        </mat-list>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </div>\n</div>\n<div align=\"end\" mat-dialog-actions>\n  <button\n    (click)=\"closeDialog()\"\n    type=\"button\"\n    color=\"primary\"\n    mat-stroked-button\n  >\n    Ok\n  </button>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport {\n  BehaviorSubject,\n  Subscription,\n  merge,\n  startWith,\n  switchMap,\n  catchError,\n  of,\n  map,\n  first,\n} from 'rxjs';\nimport {\n  Client,\n  ClientCreateContent,\n  NodebootOauth2StarterService,\n} from '../nodeboot-oauth2-starter.service';\nimport { AddClientRolesComponent } from './add-client-roles/add-client-roles.component';\nimport { CreateClientComponent } from './create-client/create-client.component';\nimport { DeleteClientComponent } from './delete-client/delete-client.component';\nimport { ShowTokenComponent } from './show-token/show-token.component';\nimport { UpdateClientComponent } from './update-client/update-client.component';\nimport { ViewClientRolesComponent } from './view-client-roles/view-client-roles.component';\n\n@Component({\n  selector: 'lib-oauth-starter-client',\n  templateUrl: './oauth-starter-client.component.html',\n  styleUrls: ['./oauth-starter-client.component.scss'],\n})\nexport class OauthStarterClientComponent implements OnInit {\n  clients!: Client[];\n  errorMessage!: string | undefined;\n  displayedColumns: string[] = ['id', 'name', 'identifier', 'roles', 'edit'];\n\n  resultsLength = 0;\n  isLoadingResults = true;\n\n  reload = new BehaviorSubject<number>(0);\n\n  clientDataSubscription!: Subscription;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private nbService: NodebootOauth2StarterService,\n    public dialog: MatDialog\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\n    this.clientDataSubscription = merge(\n      this.sort.sortChange,\n      this.paginator.page,\n      this.reload\n    )\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.errorMessage = undefined;\n          this.isLoadingResults = true;\n          return this.nbService!.getClients(\n            this.paginator.pageIndex,\n            this.sort.direction\n          ).pipe(\n            catchError((err) => {\n              if (err.error) {\n                this.errorMessage = err.error.message;\n              } else {\n                this.errorMessage = 'Unknown Error';\n              }\n              return of(null);\n            })\n          );\n        }),\n        map((data) => {\n          this.isLoadingResults = false;\n          if (data === null) {\n            return [];\n          }\n          this.resultsLength = data.content?.totalItems || 0;\n          return data.content?.items || [];\n        })\n      )\n      .subscribe((data) => {\n        this.clients = data;\n      });\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.clientDataSubscription?.unsubscribe();\n    this.sort.sortChange.complete();\n  }\n\n  openCreateClientDialog() {\n    const createClientDialogRef = this.dialog.open(CreateClientComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n    });\n    createClientDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res: ClientCreateContent) => {\n          if (res) {\n            this.dialog.open(ShowTokenComponent, {\n              width: '600px',\n              maxHeight: '70vh',\n              data: res,\n            });\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openViewRolesDialog(client: Client) {\n    this.dialog.open(ViewClientRolesComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: client,\n    });\n  }\n\n  openUpdateRolesDialog(client: Client) {\n    const updateRolesDialogRef = this.dialog.open(AddClientRolesComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: client,\n    });\n\n    updateRolesDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openUpdateClientDialog(client: Client) {\n    const updateClientDialogRef = this.dialog.open(UpdateClientComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: client,\n    });\n\n    updateClientDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openDialogDeleteClient(client: Client) {\n    const updateRolesDialogRef = this.dialog.open(DeleteClientComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: client,\n    });\n\n    updateRolesDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n}\n","<div class=\"client-container\">\n  <div class=\"client-head\">\n    <h1 class=\"client-title\">Clients</h1>\n    <span class=\"separator\"></span>\n    <button (click)=\"openCreateClientDialog()\" color=\"accent\" mat-flat-button>\n      Add Client\n    </button>\n  </div>\n  <div class=\"client-body\">\n    <div class=\"container-table mat-elevation-z8\">\n      <div class=\"loading-shade\" *ngIf=\"isLoadingResults\">\n        <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n      </div>\n\n      <div class=\"example-table-container\">\n        <table\n          mat-table\n          [dataSource]=\"clients\"\n          class=\"client-table\"\n          matSort\n          matSortActive=\"id\"\n          matSortDisableClear\n          matSortDirection=\"asc\"\n        >\n          <ng-container matColumnDef=\"id\">\n            <th mat-sort-header mat-header-cell *matHeaderCellDef>id</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"identifier\">\n            <th mat-header-cell *matHeaderCellDef>Identifier</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.identifier }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"roles\">\n            <th mat-header-cell *matHeaderCellDef>Roles</th>\n            <td class=\"roles-column\" mat-cell *matCellDef=\"let row\">\n              <button (click)=\"openViewRolesDialog(row)\" mat-stroked-button>\n                View Roles\n              </button>\n              <button\n                [disabled]=\"row.identifier === 'admin'\"\n                (click)=\"openUpdateRolesDialog(row)\"\n                mat-stroked-button\n              >\n                Update Roles\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td class=\"actions-column\" mat-cell *matCellDef=\"let row\">\n              <button\n                color=\"primary\"\n                [disabled]=\"row.identifier === 'admin'\"\n                mat-stroked-button\n                (click)=\"openUpdateClientDialog(row)\"\n              >\n                Edit Client\n              </button>\n              <button\n                color=\"warn\"\n                [disabled]=\"row.identifier === 'admin'\"\n                mat-stroked-button\n                (click)=\"openDialogDeleteClient(row)\"\n              >\n                Delete Client\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n      </div>\n\n      <mat-paginator [length]=\"resultsLength\" [pageSize]=\"20\"></mat-paginator>\n    </div>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  NodebootOauth2StarterService,\n  Part,\n  Option,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-application-options',\n  templateUrl: './application-options.component.html',\n  styleUrls: ['./application-options.component.scss'],\n})\nexport class ApplicationOptionsComponent implements OnInit {\n  addPartOptionForm: FormGroup;\n  errorMessage!: string;\n  errorMessageRoles!: string;\n  options: Option[] = [];\n  optionsList: Option[] = [];\n  hidePassword = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ApplicationOptionsComponent>,\n    private formBuilder: FormBuilder,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public part: Part\n  ) {\n    this.optionsList = [...part.allowed];\n    this.addPartOptionForm = this.formBuilder.group({\n      name: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.pattern(/^[a-zA-Z0-9_\\.\\-\\/\\s]+$/),\n          Validators.minLength(1),\n          Validators.maxLength(40),\n        ])\n      ),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  isBasicOption(allowed: string) {\n    const basicOptions = ['*', 'create', 'select', 'update', 'delete'];\n    const indexOfAllowed = basicOptions.indexOf(allowed);\n    if (indexOfAllowed === -1) return false;\n    return true;\n  }\n\n  addOptionToList() {\n    const currentNameValue =\n      (this.addPartOptionForm.get('name')?.value as string) || '';\n    if (currentNameValue === '') return;\n    const indexOfCurrent = this.optionsList.findIndex(\n      (option) =>\n        option.allowed.toLowerCase() === currentNameValue.toLowerCase()\n    );\n    if (indexOfCurrent === -1 && this.addPartOptionForm.get('name')?.valid) {\n      this.optionsList.push({\n        id: 0,\n        allowed: this.addPartOptionForm.get('name')?.value,\n      });\n      this.addPartOptionForm.get('name')?.reset();\n    }\n  }\n\n  removeFromOptionList(optionToRemove: Option) {\n    const indexToRemove = this.optionsList.findIndex(\n      (option) =>\n        option.allowed.toLowerCase() === optionToRemove.allowed.toLowerCase()\n    );\n    this.optionsList.splice(indexToRemove, 1);\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  updatePartOptions() {\n    this.nbService\n      .updatePartOptions(this.part.id, this.optionsList, this.part.allowed)\n      .subscribe({\n        error: (err) => {\n          this.dialogRef.disableClose = false;\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n        },\n        next: () => {\n          this.dialogRef.close(true);\n        },\n      });\n  }\n}\n","<h2 mat-dialog-title>Part options</h2>\n<form [formGroup]=\"addPartOptionForm\" (ngSubmit)=\"updatePartOptions()\">\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <div class=\"select-role\">\n      <mat-form-field class=\"forms-field\" appearance=\"fill\">\n        <mat-label>New Option</mat-label>\n        <input matInput formControlName=\"name\" name=\"name\" />\n        <mat-hint>Part option</mat-hint>\n      </mat-form-field>\n      <button\n        [disabled]=\"!addPartOptionForm.valid\"\n        type=\"button\"\n        (click)=\"addOptionToList()\"\n        mat-stroked-button\n      >\n        +\n      </button>\n    </div>\n    <div class=\"options-list-container\">\n      <div *ngFor=\"let option of optionsList\" class=\"roles-list\">\n        <div class=\"role-title\">\n          <h3>{{ option.allowed }}</h3>\n        </div>\n        <button\n          [disabled]=\"isBasicOption(option.allowed)\"\n          (click)=\"removeFromOptionList(option)\"\n          color=\"warn\"\n          type=\"button\"\n          mat-stroked-button\n        >\n          -\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!addPartOptionForm.valid || optionsList.length === 0\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Update\n    </button>\n  </div>\n</form>\n","import {\n  Application,\n  NodebootOauth2StarterService,\n} from './../../nodeboot-oauth2-starter.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'lib-create-application-part',\n  templateUrl: './create-application-part.component.html',\n  styleUrls: ['./create-application-part.component.scss'],\n})\nexport class CreateApplicationPartComponent implements OnInit {\n  createPartForm: FormGroup;\n  errorMessage!: string;\n  errorMessageRoles!: string;\n  applications: Application[] = [];\n  hidePassword = true;\n\n  loadingResult = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateApplicationPartComponent>,\n    private formBuilder: FormBuilder,\n    private nbService: NodebootOauth2StarterService\n  ) {\n    this.nbService.getApplications().subscribe({\n      error: (err) => {\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n        this.applications = [];\n      },\n      next: (res) => {\n        this.applications = res.content || [];\n      },\n    });\n    this.createPartForm = this.formBuilder.group({\n      partIdentifier: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(45),\n          Validators.pattern(/^[a-zA-Z0-9_\\.\\-\\/]+$/),\n        ])\n      ),\n      application: this.formBuilder.control(\n        '',\n        Validators.compose([Validators.required, Validators.min(1)])\n      ),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  createPart(createPartForm: { partIdentifier: string; application: number }) {\n    this.loadingResult = true;\n    this.nbService\n      .createPart(createPartForm.partIdentifier, createPartForm.application)\n      .subscribe({\n        error: (err) => {\n          this.dialogRef.disableClose = false;\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n        },\n        next: () => {\n          this.dialogRef.close(true);\n        },\n        complete: () => {\n          this.loadingResult = false;\n        },\n      });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Create Application Part</h2>\n<form\n  [formGroup]=\"createPartForm\"\n  (ngSubmit)=\"createPart(createPartForm.value)\"\n>\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Identifier</mat-label>\n      <input\n        matInput\n        formControlName=\"partIdentifier\"\n        name=\"partIdentifier\"\n        required\n      />\n      <mat-hint>The part name</mat-hint>\n    </mat-form-field>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Select A Application</mat-label>\n      <mat-select name=\"application\" formControlName=\"application\">\n        <mat-option\n          [value]=\"application.id\"\n          *ngFor=\"let application of applications\"\n          >{{ application.identifier }}</mat-option\n        >\n      </mat-select>\n      <mat-hint>Select an application</mat-hint>\n    </mat-form-field>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!createPartForm.valid || loadingResult\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Create\n    </button>\n  </div>\n</form>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  NodebootOauth2StarterService,\n  Part,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-delete-application-part',\n  templateUrl: './delete-application-part.component.html',\n  styleUrls: ['./delete-application-part.component.scss'],\n})\nexport class DeleteApplicationPartComponent implements OnInit {\n  errorMessage!: string;\n  loadingResult = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteApplicationPartComponent>,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public part: Part\n  ) {}\n\n  ngOnInit(): void {}\n\n  delete() {\n    this.loadingResult = true;\n    this.dialogRef.disableClose = true;\n    this.nbService.deletePart(this.part.id).subscribe({\n      error: (err) => {\n        this.dialogRef.disableClose = false;\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n      },\n      next: () => {\n        this.dialogRef.close(true);\n      },\n      complete: () => {\n        this.loadingResult = false;\n      },\n    });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Delete Part {{ part.applicationPartName }}</h2>\n<div mat-dialog-content>\n  <div class=\"error-display\" *ngIf=\"errorMessage\">\n    <h5>{{ errorMessage }}</h5>\n  </div>\n  <p>Are you sure?</p>\n</div>\n<div align=\"end\" mat-dialog-actions>\n  <button\n    (click)=\"closeDialog()\"\n    type=\"button\"\n    color=\"warn\"\n    mat-stroked-button\n    [disabled]=\"dialogRef.disableClose\"\n  >\n    Cancel</button\n  ><button\n    (click)=\"delete()\"\n    type=\"button\"\n    color=\"primary\"\n    mat-flat-button\n    [disabled]=\"dialogRef.disableClose\"\n  >\n    Delete\n  </button>\n</div>\n","import { NodebootOauth2StarterService } from './../nodeboot-oauth2-starter.service';\nimport {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport {\n  BehaviorSubject,\n  Subscription,\n  merge,\n  startWith,\n  switchMap,\n  catchError,\n  of,\n  map,\n  first,\n} from 'rxjs';\nimport { Part } from '../nodeboot-oauth2-starter.service';\nimport { ApplicationOptionsComponent } from './application-options/application-options.component';\nimport { CreateApplicationPartComponent } from './create-application-part/create-application-part.component';\nimport { DeleteApplicationPartComponent } from './delete-application-part/delete-application-part.component';\n\n@Component({\n  selector: 'lib-oauth-starter-application-part',\n  templateUrl: './oauth-starter-application-part.component.html',\n  styleUrls: ['./oauth-starter-application-part.component.scss'],\n})\nexport class OauthStarterApplicationPartComponent\n  implements OnInit, OnDestroy, AfterViewInit\n{\n  parts!: Part[];\n  errorMessage!: string | undefined;\n  displayedColumns: string[] = [\n    'id',\n    'applicationPartName',\n    'options',\n    'delete',\n  ];\n\n  masterParts = [\n    'OAUTH2_global',\n    'OAUTH2_user',\n    'OAUTH2_client',\n    'OAUTH2_application',\n    'OAUTH2_role',\n    'OAUTH2_option',\n  ];\n\n  resultsLength = 0;\n  isLoadingResults = true;\n\n  reload = new BehaviorSubject<number>(0);\n\n  userDataSubscription!: Subscription;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private nbService: NodebootOauth2StarterService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnDestroy(): void {\n    this.userDataSubscription?.unsubscribe();\n    this.sort.sortChange.complete();\n  }\n\n  ngAfterViewInit(): void {\n    this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\n    this.userDataSubscription = merge(\n      this.sort.sortChange,\n      this.paginator.page,\n      this.reload\n    )\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.errorMessage = undefined;\n          this.isLoadingResults = true;\n          return this.nbService!.getParts(\n            this.paginator.pageIndex,\n            this.sort.direction\n          ).pipe(\n            catchError((err) => {\n              if (err.error) {\n                this.errorMessage = err.error.message;\n              } else {\n                this.errorMessage = 'Unknown Error';\n              }\n              return of(null);\n            })\n          );\n        }),\n        map((data) => {\n          this.isLoadingResults = false;\n          if (data === null) {\n            return [];\n          }\n          this.resultsLength = data.content?.totalItems || 0;\n          return data.content?.items || [];\n        })\n      )\n      .subscribe((data) => {\n        this.parts = data;\n      });\n  }\n\n  ngOnInit(): void {}\n\n  openCreateAppPartDialog() {\n    const createPartOptionsDialogRef = this.dialog.open(\n      CreateApplicationPartComponent,\n      {\n        width: '600px',\n        maxHeight: '70vh',\n      }\n    );\n\n    createPartOptionsDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openDeletePartDialog(part: Part) {\n    const deletePartOptionsDialogRef = this.dialog.open(\n      DeleteApplicationPartComponent,\n      {\n        width: '600px',\n        maxHeight: '70vh',\n        data: part,\n      }\n    );\n\n    deletePartOptionsDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openOptionsDialog(part: Part) {\n    const updatePartOptionsDialogRef = this.dialog.open(\n      ApplicationOptionsComponent,\n      {\n        width: '600px',\n        maxHeight: '70vh',\n        data: part,\n      }\n    );\n\n    updatePartOptionsDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n}\n","<div class=\"role-container\">\n  <div class=\"role-head\">\n    <h1 class=\"role-title\">Applications Parts</h1>\n    <span class=\"separator\"></span>\n    <button (click)=\"openCreateAppPartDialog()\" color=\"accent\" mat-flat-button>\n      Add Part\n    </button>\n  </div>\n  <div class=\"role-body\">\n    <div class=\"container-table mat-elevation-z8\">\n      <div class=\"loading-shade\" *ngIf=\"isLoadingResults\">\n        <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n      </div>\n      <div class=\"example-table-container\">\n        <table\n          mat-table\n          [dataSource]=\"parts\"\n          class=\"user-table\"\n          matSort\n          matSortActive=\"id\"\n          matSortDisableClear\n          matSortDirection=\"asc\"\n        >\n          <ng-container matColumnDef=\"id\">\n            <th mat-sort-header mat-header-cell *matHeaderCellDef>id</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"applicationPartName\">\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let row\">\n              {{ row.applicationPartName }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"options\">\n            <th mat-header-cell *matHeaderCellDef>Part Options</th>\n            <td class=\"roles-column\" mat-cell *matCellDef=\"let row\">\n              <button\n                [disabled]=\"masterParts.indexOf(row.applicationPartName) !== -1\"\n                (click)=\"openOptionsDialog(row)\"\n                mat-stroked-button\n              >\n                Options\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td class=\"actions-column\" mat-cell *matCellDef=\"let row\">\n              <button\n                color=\"warn\"\n                [disabled]=\"masterParts.indexOf(row.applicationPartName) !== -1\"\n                mat-stroked-button\n                (click)=\"openDeletePartDialog(row)\"\n              >\n                Delete Part\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n      </div>\n\n      <mat-paginator\n        [length]=\"resultsLength\"\n        [pageSize]=\"20\"\n        aria-label=\"Select page of GitHub search results\"\n      ></mat-paginator>\n    </div>\n  </div>\n</div>\n","import { DeleteUserComponent } from './oauth-starter-users/delete-user/delete-user.component';\nimport { UpdateUserComponent } from './oauth-starter-users/update-user/update-user.component';\nimport { NgModule } from '@angular/core';\nimport { NodebootOauth2StarterComponent } from './nodeboot-oauth2-starter.component';\nimport { LibraryMaterials } from './material.module';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OauthStarterUsersComponent } from './oauth-starter-users/oauth-starter-users.component';\nimport { ViewUserRolesComponent } from './oauth-starter-users/view-user-roles/view-user-roles.component';\nimport { CreateUserComponent } from './oauth-starter-users/create-user/create-user.component';\nimport { AddUserRolesComponent } from './oauth-starter-users/add-user-roles/add-user-roles.component';\nimport { OauthStarterUserProfileComponent } from './oauth-starter-user-profile/oauth-starter-user-profile.component';\nimport { ClipboardModule } from 'ngx-clipboard';\nimport { OauthStarterRolesComponent } from './oauth-starter-roles/oauth-starter-roles.component';\nimport { DeleteRoleComponent } from './oauth-starter-roles/delete-role/delete-role.component';\nimport { OptionsComponent } from './oauth-starter-roles/options/options.component';\nimport { CreateRoleComponent } from './oauth-starter-roles/create-role/create-role.component';\nimport { OauthStarterClientComponent } from './oauth-starter-client/oauth-starter-client.component';\nimport { DeleteClientComponent } from './oauth-starter-client/delete-client/delete-client.component';\nimport { UpdateClientComponent } from './oauth-starter-client/update-client/update-client.component';\nimport { AddClientRolesComponent } from './oauth-starter-client/add-client-roles/add-client-roles.component';\nimport { ViewClientRolesComponent } from './oauth-starter-client/view-client-roles/view-client-roles.component';\nimport { ShowTokenComponent } from './oauth-starter-client/show-token/show-token.component';\nimport { CreateClientComponent } from './oauth-starter-client/create-client/create-client.component';\nimport { OauthStarterApplicationPartComponent } from './oauth-starter-application-part/oauth-starter-application-part.component';\nimport { DeleteApplicationPartComponent } from './oauth-starter-application-part/delete-application-part/delete-application-part.component';\nimport { ApplicationOptionsComponent } from './oauth-starter-application-part/application-options/application-options.component';\nimport { CreateApplicationPartComponent } from './oauth-starter-application-part/create-application-part/create-application-part.component';\nimport { ChangePasswordComponent } from './oauth-starter-user-profile/change-password/change-password.component';\n\n@NgModule({\n  declarations: [\n    NodebootOauth2StarterComponent,\n    OauthStarterUsersComponent,\n    OauthStarterUserProfileComponent,\n    ViewUserRolesComponent,\n    CreateUserComponent,\n    UpdateUserComponent,\n    DeleteUserComponent,\n    AddUserRolesComponent,\n    OauthStarterRolesComponent,\n    DeleteRoleComponent,\n    OptionsComponent,\n    CreateRoleComponent,\n    OauthStarterClientComponent,\n    DeleteClientComponent,\n    UpdateClientComponent,\n    AddClientRolesComponent,\n    ViewClientRolesComponent,\n    ShowTokenComponent,\n    CreateClientComponent,\n    ChangePasswordComponent,\n    OauthStarterApplicationPartComponent,\n    DeleteApplicationPartComponent,\n    ApplicationOptionsComponent,\n    CreateApplicationPartComponent,\n  ],\n  imports: [\n    LibraryMaterials,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    ClipboardModule,\n  ],\n  exports: [\n    NodebootOauth2StarterComponent,\n    OauthStarterUsersComponent,\n    OauthStarterUserProfileComponent,\n    OauthStarterRolesComponent,\n    OauthStarterClientComponent,\n    OauthStarterApplicationPartComponent,\n  ],\n})\nexport class NodebootOauth2StarterModule {}\n","/*\n * Public API Surface of nodeboot-oauth2-starter\n */\n\nexport * from './lib/nodeboot-oauth2-starter.service';\nexport * from './lib/nodeboot-oauth2-starter.component';\nexport * from './lib/nodeboot-oauth2-starter.module';\nexport * from './lib/oauth-starter-users/oauth-starter-users.component';\nexport * from './lib/oauth-starter-user-profile/oauth-starter-user-profile.component';\nexport * from './lib/oauth-starter-roles/oauth-starter-roles.component';\nexport * from './lib/oauth-starter-client/oauth-starter-client.component';\nexport * from './lib/oauth-starter-application-part/oauth-starter-application-part.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}