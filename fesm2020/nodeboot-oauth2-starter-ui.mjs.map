{"version":3,"file":"nodeboot-oauth2-starter-ui.mjs","sources":["../../../projects/nodeboot-oauth2-starter/src/lib/nodeboot-oauth2-starter.service.ts","../../../projects/nodeboot-oauth2-starter/src/lib/nodeboot-oauth2-starter.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/nodeboot-oauth2-starter.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/delete-user/delete-user.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/delete-user/delete-user.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/update-user/update-user.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/update-user/update-user.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/material.module.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/view-user-roles/view-user-roles.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/view-user-roles/view-user-roles.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/create-user/create-user.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/create-user/create-user.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/add-user-roles/add-user-roles.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/add-user-roles/add-user-roles.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/oauth-starter-users.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-users/oauth-starter-users.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-user-profile/change-password/change-password.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-user-profile/change-password/change-password.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-user-profile/oauth-starter-user-profile.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-user-profile/oauth-starter-user-profile.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-roles/create-role/create-role.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-roles/create-role/create-role.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-roles/delete-role/delete-role.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-roles/delete-role/delete-role.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-roles/options/options.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-roles/options/options.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-roles/oauth-starter-roles.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-roles/oauth-starter-roles.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/show-secret/show-secret.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/show-secret/show-secret.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/add-client-roles/add-client-roles.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/add-client-roles/add-client-roles.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/create-client/create-client.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/create-client/create-client.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/delete-client/delete-client.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/delete-client/delete-client.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/show-token/show-token.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/show-token/show-token.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/update-client/update-client.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/update-client/update-client.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/view-client-roles/view-client-roles.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/view-client-roles/view-client-roles.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/show-new-token/show-new-token.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/show-new-token/show-new-token.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/oauth-starter-client.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/oauth-starter-client.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-application-resource/application-options/application-options.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-application-resource/application-options/application-options.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-application-resource/create-application-resource/create-application-resource.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-application-resource/create-application-resource/create-application-resource.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-application-resource/delete-application-resource/delete-application-resource.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-application-resource/delete-application-resource/delete-application-resource.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-application-resource/oauth-starter-application-resource.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-application-resource/oauth-starter-application-resource.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/revoke-token/revoke-token.component.ts","../../../projects/nodeboot-oauth2-starter/src/lib/oauth-starter-client/revoke-token/revoke-token.component.html","../../../projects/nodeboot-oauth2-starter/src/lib/nodeboot-oauth2-starter.module.ts","../../../projects/nodeboot-oauth2-starter/src/public-api.ts","../../../projects/nodeboot-oauth2-starter/src/nodeboot-oauth2-starter-ui.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable, first } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NodebootOauth2StarterService {\n  configuration: {\n    api: string;\n  };\n  authUserApi: string;\n  authRoleApi: string;\n  authResourceApi: string;\n  authClientApi: string;\n  authApplicationApi: string;\n\n  constructor(\n    private http: HttpClient,\n    @Inject('configuration')\n    configuration: {\n      api: string;\n    }\n  ) {\n    this.configuration = configuration;\n    this.authUserApi = configuration.api + '/auth/user';\n    this.authRoleApi = configuration.api + '/auth/role';\n    this.authResourceApi = configuration.api + '/auth/resource';\n    this.authClientApi = configuration.api + '/auth/client';\n    this.authApplicationApi = configuration.api + '/auth/application ';\n  }\n\n  getUsers(pageIndex: number, order: string): Observable<UserPaginationResult> {\n    return this.http\n      .get<UserPaginationResult>(\n        this.authUserApi +\n          `?pageIndex=${pageIndex}&&itemsPerPage=20&&order=${order}`\n      )\n      .pipe(first());\n  }\n\n  createUser(createUserData: {\n    name: string;\n    username: string;\n    password: string;\n    roles: BasicRole[];\n  }) {\n    return this.http.post(this.authUserApi, createUserData).pipe(first());\n  }\n\n  updatePassword(userId: number, newPassword: string, oldPassword: string) {\n    return this.http\n      .put(`${this.authUserApi}/${userId}/password`, {\n        newPassword,\n        oldPassword,\n      })\n      .pipe(first());\n  }\n\n  updateUserRoles(\n    userId: number,\n    roles: BasicRole[],\n    originalRolesList: BasicRole[]\n  ) {\n    return this.http\n      .put(`${this.authUserApi}/${userId}/role`, { roles, originalRolesList })\n      .pipe(first());\n  }\n\n  deleteUser(subjectId: number) {\n    return this.http.delete(`${this.authUserApi}/${subjectId}`).pipe(first());\n  }\n\n  updateUser(subjectId: number, updateBody: UserUpdateBody) {\n    return this.http\n      .put(`${this.authUserApi}/${subjectId}`, updateBody)\n      .pipe(first());\n  }\n\n  getUserProfile(): Observable<UserProfileResult> {\n    return this.http\n      .get<UserProfileResult>(`${this.authUserApi}/profile/me`)\n      .pipe(first());\n  }\n\n  getRolesBasic(): Observable<RoleResult> {\n    return this.http\n      .get<RoleResult>(this.authRoleApi + '?basic=true')\n      .pipe(first());\n  }\n\n  createRole(identifier: string, allowedObject: Record<string, Option[]>) {\n    return this.http\n      .post(this.authRoleApi, { identifier, allowedObject })\n      .pipe(first());\n  }\n\n  updateRoleOptions(\n    roleId: number,\n    newAllowedObject: Record<string, Option[]>,\n    originalAllowedObject: Record<string, Option[]>\n  ) {\n    return this.http\n      .put(this.authRoleApi + `/${roleId}/permission`, {\n        newAllowedObject: newAllowedObject,\n        originalAllowedObject: originalAllowedObject,\n      })\n      .pipe(first());\n  }\n\n  deleteRole(roleId: number) {\n    return this.http.delete(this.authRoleApi + `/${roleId}`).pipe(first());\n  }\n\n  getRoles(pageIndex: number, order: string): Observable<RolePaginationResult> {\n    return this.http\n      .get<RolePaginationResult>(\n        this.authRoleApi +\n          `?pageIndex=${pageIndex}&&itemsPerPage=20&&order=${order}`\n      )\n      .pipe(first());\n  }\n\n  getResourcesBasic(): Observable<OptionResult> {\n    return this.http\n      .get<OptionResult>(this.authResourceApi + `?basic=true`)\n      .pipe(first());\n  }\n\n  getResources(\n    pageIndex: number,\n    order: string\n  ): Observable<ResourcePaginationResult> {\n    return this.http\n      .get<ResourcePaginationResult>(\n        this.authResourceApi +\n          `?pageIndex=${pageIndex}&&itemsPerPage=20&&order=${order}`\n      )\n      .pipe(first());\n  }\n\n  updateResourceOptions(\n    resourceId: number,\n    newResourceOptions: Option[],\n    originalResourceOptions: Option[]\n  ) {\n    return this.http\n      .put(this.authResourceApi + `/${resourceId}/permission`, {\n        newResourcePermissions: newResourceOptions,\n        originalResourcePermissions: originalResourceOptions,\n      })\n      .pipe(first());\n  }\n\n  deleteResource(resourceId: number) {\n    return this.http.delete(this.authResourceApi + `/${resourceId}`);\n  }\n\n  createResource(resourceIdentifier: string, applications_id: number) {\n    return this.http.post(this.authResourceApi, {\n      resourceIdentifier,\n      applications_id,\n    });\n  }\n\n  getClients(\n    pageIndex: number,\n    order: string\n  ): Observable<ClientPaginationResult> {\n    return this.http\n      .get<ClientPaginationResult>(\n        this.authClientApi +\n          `?pageIndex=${pageIndex}&&itemsPerPage=20&&order=${order}`\n      )\n      .pipe(first());\n  }\n\n  createClient(\n    createClientData: {\n      name: string;\n      identifier: string;\n      roles: BasicRole[];\n    },\n    longLive: boolean\n  ): Observable<ClientCreateResult> {\n    return this.http\n      .post<ClientCreateResult>(\n        this.authClientApi + `?longLive=${longLive}`,\n        createClientData\n      )\n      .pipe(first());\n  }\n\n  deleteClient(subjectId: number) {\n    return this.http.delete(`${this.authClientApi}/${subjectId}`).pipe(first());\n  }\n\n  updateClientRoles(\n    clientId: number,\n    roles: BasicRole[],\n    originalRolesList: BasicRole[]\n  ) {\n    return this.http\n      .put(`${this.authClientApi}/${clientId}/role`, {\n        roles,\n        originalRolesList,\n      })\n      .pipe(first());\n  }\n\n  updateClient(subjectId: number, updateBody: ClientUpdateBody) {\n    return this.http\n      .put(`${this.authClientApi}/${subjectId}`, updateBody)\n      .pipe(first());\n  }\n\n  getApplications(): Observable<ApplicationResult> {\n    return this.http.get<ApplicationResult>(this.authApplicationApi);\n  }\n\n  getSecret(clientId: number): Observable<SecretTokenResponse> {\n    return this.http\n      .get<SecretTokenResponse>(this.authClientApi + `/${clientId}/secret`)\n      .pipe(first());\n  }\n\n  generateLongLiveToken(\n    clientId: number,\n    identifier: string\n  ): Observable<LongLiveTokenResponse> {\n    return this.http\n      .put<LongLiveTokenResponse>(\n        this.authClientApi + `/${clientId}/long-live`,\n        {\n          identifier,\n        }\n      )\n      .pipe(first());\n  }\n\n  removeLongLiveToken(\n    clientId: number,\n    identifier: string\n  ): Observable<BasicResponse> {\n    return this.http\n      .put<BasicResponse>(\n        this.authClientApi + `/${clientId}/long-live?remove_long_live=true`,\n        {\n          identifier,\n        }\n      )\n      .pipe(first());\n  }\n\n  modifyRevokeStatus(clientId: number, revoke: boolean) {\n    return this.http\n      .put<BasicResponse>(this.authClientApi + `/${clientId}/revoke`, {\n        revoke,\n      })\n      .pipe(first());\n  }\n\n  get apiUrl() {\n    return this.configuration.api;\n  }\n}\n\ninterface BasicResponse {\n  message: string;\n  code: number;\n}\n\ninterface SecretTokenResponse {\n  message: string;\n  code: number;\n  content: {\n    clientSecret: string;\n  };\n}\n\ninterface LongLiveTokenResponse {\n  message: string;\n  code: number;\n  content: {\n    access_token: string;\n  };\n}\n\ninterface ApplicationResult {\n  message: string;\n  code: number;\n  content?: Application[];\n}\n\nexport interface Application {\n  id: number;\n  identifier: string;\n}\n\nexport interface ClientUpdateBody {\n  name: string;\n}\n\nexport interface Client {\n  id: number;\n  subjectId: number;\n  name: string;\n  description: string;\n  identifier: string;\n  hasLongLiveToken?: boolean;\n  revoked?: boolean;\n  roles: Role[];\n}\n\ninterface ClientCreateResult {\n  message: string;\n  code: number;\n  content?: ClientCreateContent;\n}\n\nexport interface ClientCreateContent {\n  clientSecret: string;\n  clientId: string;\n  access_token: string;\n}\n\ninterface ClientPaginationResult {\n  message: string;\n  code: number;\n  content?: ClientPaginationContent;\n}\n\ninterface ClientPaginationContent {\n  items: Client[];\n  pageIndex: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\ninterface OptionResult {\n  message: string;\n  code: number;\n  content?: Resource[];\n}\n\ninterface ResourcePaginationResult {\n  message: string;\n  code: number;\n  content?: ResourcePaginationContent;\n}\n\ninterface ResourcePaginationContent {\n  items: Resource[];\n  pageIndex: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport interface UserUpdateBody {\n  name: string;\n}\n\ninterface UserPaginationResult {\n  message: string;\n  code: number;\n  content?: PaginationUserContent;\n}\n\ninterface UserProfileResult {\n  message: string;\n  code: number;\n  content?: User;\n}\n\ninterface PaginationUserContent {\n  items: User[];\n  pageIndex: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport interface User {\n  id: number;\n  subjectId: number;\n  description: string;\n  name: string;\n  username: string;\n  roles: RoleUser[];\n}\n\nexport interface RoleUser {\n  id: number;\n  identifier: string;\n  resources: BasicResource[];\n}\n\nexport interface BasicResource {\n  id: number;\n  applicationResourceName: string;\n  allowed: string[];\n}\n\nexport interface BasicRole {\n  id: number;\n  identifier: string;\n}\n\ninterface RolePaginationResult {\n  message: string;\n  code: number;\n  content?: RolePaginationContent;\n}\n\ninterface RolePaginationContent {\n  items: Role[];\n  pageIndex: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport interface Role {\n  id: number;\n  identifier: string;\n  resources: Resource[];\n}\n\nexport interface Resource {\n  id: number;\n  applicationResourceName: string;\n  allowed: Option[];\n}\n\ninterface RoleResult {\n  message: string;\n  code: number;\n  content?: BasicRole[];\n}\n\nexport interface BasicRole {\n  id: number;\n  identifier: string;\n}\n\nexport interface Option {\n  allowed: string;\n  id: number;\n}\n","import { NodebootOauth2StarterService } from './nodeboot-oauth2-starter.service';\nimport { Component, Input, OnInit } from '@angular/core';\n@Component({\n  selector: 'lib-nodeboot-oauth2-starter',\n  templateUrl: './nodeboot-oauth2-starter.component.html',\n  styleUrls: ['./global.scss'],\n})\nexport class NodebootOauth2StarterComponent implements OnInit {\n  testTextT!: string;\n  @Input() otherText!: string;\n  constructor(private nbService: NodebootOauth2StarterService) {\n    this.testTextT = this.nbService.apiUrl;\n  }\n\n  ngOnInit(): void {}\n}\n","","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  NodebootOauth2StarterService,\n  User,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-delete-user',\n  templateUrl: './delete-user.component.html',\n  styleUrls: ['./delete-user.component.scss'],\n})\nexport class DeleteUserComponent implements OnInit {\n  errorMessage!: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteUserComponent>,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public user: User\n  ) {}\n\n  ngOnInit(): void {}\n\n  delete() {\n    this.dialogRef.disableClose = true;\n    this.nbService.deleteUser(this.user.subjectId).subscribe({\n      error: (err) => {\n        this.dialogRef.disableClose = false;\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n      },\n      next: () => {\n        this.dialogRef.close(true);\n      },\n    });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Delete User {{ user.name }}</h2>\n<div mat-dialog-content>\n  <div class=\"error-display\" *ngIf=\"errorMessage\">\n    <h5>{{ errorMessage }}</h5>\n  </div>\n  <p>Are you sure?</p>\n</div>\n<div align=\"end\" mat-dialog-actions>\n  <button\n    (click)=\"closeDialog()\"\n    type=\"button\"\n    color=\"warn\"\n    mat-stroked-button\n    [disabled]=\"dialogRef.disableClose\"\n  >\n    Cancel</button\n  ><button\n    (click)=\"delete()\"\n    type=\"button\"\n    color=\"primary\"\n    mat-flat-button\n    [disabled]=\"dialogRef.disableClose\"\n  >\n    Delete\n  </button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  NodebootOauth2StarterService,\n  User,\n  UserUpdateBody,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.scss'],\n})\nexport class UpdateUserComponent implements OnInit {\n  errorMessage!: string;\n  updateUserForm: UntypedFormGroup;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    public dialogRef: MatDialogRef<UpdateUserComponent>,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public user: User\n  ) {\n    this.updateUserForm = this.formBuilder.group({\n      name: this.formBuilder.control(\n        user.name,\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(45),\n          Validators.pattern(/^[a-zA-Z0-9_\\.\\-\\/\\s]+$/),\n        ])\n      ),\n    });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  updateUser(updateUserData: UserUpdateBody) {\n    this.dialogRef.disableClose = true;\n    this.nbService.updateUser(this.user.subjectId, updateUserData).subscribe({\n      error: (err) => {\n        this.dialogRef.disableClose = false;\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n      },\n      next: () => {\n        this.dialogRef.close(true);\n      },\n    });\n  }\n\n  ngOnInit(): void {}\n}\n","<h2 mat-dialog-title>Update User {{ user.name }}</h2>\n<form\n  [formGroup]=\"updateUserForm\"\n  (ngSubmit)=\"updateUser(updateUserForm.value)\"\n>\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Name</mat-label>\n      <input matInput formControlName=\"name\" name=\"name\" required />\n      <mat-hint>Put your name</mat-hint>\n    </mat-form-field>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!updateUserForm.valid || dialogRef.disableClose\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Update\n    </button>\n  </div>\n</form>\n","import { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule,\r\n    MatListModule,\r\n    MatExpansionModule,\r\n    MatTooltipModule,\r\n    MatCheckboxModule,\r\n  ],\r\n})\r\nexport class LibraryMaterials {}\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { User } from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-view-user-roles',\n  templateUrl: './view-user-roles.component.html',\n  styleUrls: ['./view-user-roles.component.scss'],\n})\nexport class ViewUserRolesComponent implements OnInit {\n  userTitle: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<ViewUserRolesComponent>,\n    @Inject(MAT_DIALOG_DATA) public user: User\n  ) {\n    this.userTitle = `${user.name} roles`;\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n  ngOnInit(): void {}\n}\n","<h2 class=\"primary-color\" mat-dialog-title>{{ userTitle }}</h2>\n<div mat-dialog-content>\n  <div class=\"accordion-container\">\n    <mat-accordion>\n      <mat-expansion-panel *ngFor=\"let role of user.roles\">\n        <mat-expansion-panel-header>\n          <mat-panel-title> {{ role.identifier }} </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h4>Grouped by application resource</h4>\n        <mat-list>\n          <div *ngFor=\"let option of role.resources\">\n            <div mat-subheader>{{ option.applicationResourceName }}</div>\n            <mat-list-item *ngFor=\"let allowed of option.allowed\">\n              <mat-icon mat-list-icon>vpn_key</mat-icon>\n              <div mat-line>\n                {{ option.applicationResourceName }}:{{ allowed }}\n              </div>\n            </mat-list-item>\n            <mat-divider></mat-divider>\n          </div>\n        </mat-list>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </div>\n</div>\n<div align=\"end\" mat-dialog-actions>\n  <button\n    (click)=\"closeDialog()\"\n    type=\"button\"\n    color=\"primary\"\n    mat-stroked-button\n  >\n    Ok\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n  BasicRole,\n  NodebootOauth2StarterService,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.scss'],\n})\nexport class CreateUserComponent implements OnInit {\n  createUserForm: UntypedFormGroup;\n  errorMessage!: string;\n  errorMessageRoles!: string;\n  roles: BasicRole[] = [];\n  rolesList: BasicRole[] = [];\n  hidePassword = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateUserComponent>,\n    private formBuilder: UntypedFormBuilder,\n    private nbService: NodebootOauth2StarterService\n  ) {\n    this.nbService.getRolesBasic().subscribe({\n      error: (err) => {\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n        this.roles = [];\n      },\n      next: (res) => {\n        this.roles = res.content || [];\n      },\n    });\n    this.createUserForm = this.formBuilder.group({\n      name: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(45),\n          Validators.pattern(/^[a-zA-Z0-9_\\.\\-\\/\\s]+$/),\n        ])\n      ),\n      description: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(255),\n        ])\n      ),\n      username: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(/^[a-zA-Z0-9]+$/),\n          Validators.minLength(4),\n          Validators.maxLength(20),\n        ])\n      ),\n      password: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\n            /^[a-zA-Z0-9\\d@$!%*#?&]*[A-Z]+[a-zA-Z0-9\\d@$!%*#?&]*$/\n          ),\n          Validators.pattern(\n            /^[a-zA-Z0-9\\d@$!%*#?&]*[0-9]+[a-zA-Z0-9\\d@$!%*#?&]*$/\n          ),\n          Validators.pattern(\n            /^[a-zA-Z0-9\\d@$!%*#?&]*[a-z]+[a-zA-Z0-9\\d@$!%*#?&]*$/\n          ),\n          Validators.minLength(6),\n        ])\n      ),\n      role: this.formBuilder.control(''),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  addRoleToList() {\n    const roleValue = this.createUserForm.get('role')?.value;\n    if (!roleValue) {\n      return;\n    }\n    const indexOfRole = this.roles.indexOf(roleValue);\n    this.roles.splice(indexOfRole, 1);\n    this.rolesList.push(roleValue);\n    this.createUserForm.get('role')?.setValue('');\n  }\n\n  removeRoleToList(role: BasicRole) {\n    const roleValue = role;\n    const indexOfRole = this.rolesList.indexOf(roleValue);\n    this.roles.unshift(role);\n    this.rolesList.splice(indexOfRole, 1);\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  createUser(createUserData: {\n    name: string;\n    username: string;\n    password: string;\n    role: string | undefined;\n  }) {\n    createUserData.role = undefined;\n    this.dialogRef.disableClose = true;\n    this.nbService\n      .createUser({ ...createUserData, roles: this.rolesList })\n      .subscribe({\n        error: (err) => {\n          this.dialogRef.disableClose = false;\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n        },\n        next: () => {\n          this.dialogRef.close(true);\n        },\n      });\n  }\n}\n","<h2 mat-dialog-title>Create User</h2>\n<form\n  [formGroup]=\"createUserForm\"\n  (ngSubmit)=\"createUser(createUserForm.value)\"\n>\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Name</mat-label>\n      <input matInput formControlName=\"name\" name=\"name\" required />\n      <mat-hint>Put your name</mat-hint>\n    </mat-form-field>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Description</mat-label>\n      <input\n        matInput\n        formControlName=\"description\"\n        name=\"description\"\n        required\n      />\n      <mat-hint>Breve user description</mat-hint>\n    </mat-form-field>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Username</mat-label>\n      <input\n        matInput\n        placeholder=\"admin01\"\n        formControlName=\"username\"\n        name=\"username\"\n        required\n      />\n      <mat-hint>Your username</mat-hint>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\" class=\"forms-field\">\n      <mat-label>Password</mat-label>\n      <input\n        formControlName=\"password\"\n        name=\"password\"\n        matInput\n        [type]=\"hidePassword ? 'password' : 'text'\"\n        required\n      />\n      <button\n        type=\"button\"\n        mat-icon-button\n        matSuffix\n        (click)=\"hidePassword = !hidePassword\"\n        [attr.aria-label]=\"'hidePassword password'\"\n        [attr.aria-pressed]=\"hidePassword\"\n      >\n        <mat-icon>{{\n          hidePassword ? \"visibility_off\" : \"visibility\"\n        }}</mat-icon>\n      </button>\n      <mat-hint>Put your password</mat-hint>\n    </mat-form-field>\n    <div class=\"select-role\">\n      <mat-form-field class=\"forms-field\" appearance=\"fill\">\n        <mat-label>Select A Role</mat-label>\n        <mat-select name=\"role\" formControlName=\"role\">\n          <mat-option [value]=\"role\" *ngFor=\"let role of roles\">{{\n            role.identifier\n          }}</mat-option>\n        </mat-select>\n        <mat-hint>Select a role and add it</mat-hint>\n      </mat-form-field>\n      <button type=\"button\" (click)=\"addRoleToList()\" mat-stroked-button>\n        +\n      </button>\n    </div>\n    <div *ngFor=\"let role of rolesList\" class=\"roles-list\">\n      <div class=\"role-title\">\n        <h3>{{ role.identifier }}</h3>\n      </div>\n      <button\n        (click)=\"removeRoleToList(role)\"\n        color=\"warn\"\n        type=\"button\"\n        mat-stroked-button\n      >\n        -\n      </button>\n    </div>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!createUserForm.valid || rolesList.length === 0\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Create\n    </button>\n  </div>\n</form>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  BasicRole,\n  NodebootOauth2StarterService,\n  User,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-add-user-roles',\n  templateUrl: './add-user-roles.component.html',\n  styleUrls: ['./add-user-roles.component.scss'],\n})\nexport class AddUserRolesComponent implements OnInit {\n  addRolesForm: UntypedFormGroup;\n  errorMessage!: string;\n  errorMessageRoles!: string;\n  roles: BasicRole[] = [];\n  rolesList: BasicRole[] = [];\n\n  constructor(\n    public dialogRef: MatDialogRef<AddUserRolesComponent>,\n    private formBuilder: UntypedFormBuilder,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public user: User\n  ) {\n    this.nbService.getRolesBasic().subscribe({\n      error: (err) => {\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n        this.roles = [];\n      },\n      next: (res) => {\n        const availableRoles = res.content?.flatMap((c) => {\n          const roleExist = user.roles.findIndex((r) => c.id == r.id) as number;\n          if (roleExist === -1) {\n            return c;\n          }\n          this.rolesList.push(c);\n          return [];\n        });\n        this.roles = availableRoles || [];\n      },\n    });\n    this.addRolesForm = this.formBuilder.group({\n      role: this.formBuilder.control(''),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  addRoleToList() {\n    const roleValue = this.addRolesForm.get('role')?.value;\n    if (!roleValue) {\n      return;\n    }\n    const indexOfRole = this.roles.indexOf(roleValue);\n    this.roles.splice(indexOfRole, 1);\n    this.rolesList.push(roleValue);\n    this.addRolesForm.get('role')?.setValue('');\n  }\n\n  removeRoleToList(role: BasicRole) {\n    const roleValue = role;\n    const indexOfRole = this.rolesList.indexOf(roleValue);\n    this.roles.unshift(role);\n    this.rolesList.splice(indexOfRole, 1);\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  updateRoles() {\n    const basicOriginalRoles = this.user.roles.map((rl) => {\n      return { id: rl.id, identifier: rl.identifier };\n    });\n    this.nbService\n      .updateUserRoles(this.user.subjectId, this.rolesList, basicOriginalRoles)\n      .subscribe({\n        error: (err) => {\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n          this.roles = [];\n        },\n        next: () => {\n          this.dialogRef.close(true);\n        },\n      });\n  }\n}\n","<h2 mat-dialog-title>Modify roles of {{ user.name }}</h2>\n<form [formGroup]=\"addRolesForm\" (ngSubmit)=\"updateRoles()\">\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <div class=\"select-role\">\n      <mat-form-field class=\"forms-field\" appearance=\"fill\">\n        <mat-label>Select A Role</mat-label>\n        <mat-select name=\"role\" formControlName=\"role\">\n          <mat-option [value]=\"role\" *ngFor=\"let role of roles\">{{\n            role.identifier\n          }}</mat-option>\n        </mat-select>\n        <mat-hint>Select a role and add it</mat-hint>\n      </mat-form-field>\n      <button type=\"button\" (click)=\"addRoleToList()\" mat-stroked-button>\n        +\n      </button>\n    </div>\n    <div *ngFor=\"let role of rolesList\" class=\"roles-list\">\n      <div class=\"role-title\">\n        <h3>{{ role.identifier }}</h3>\n      </div>\n      <button\n        (click)=\"removeRoleToList(role)\"\n        color=\"warn\"\n        type=\"button\"\n        mat-stroked-button\n      >\n        -\n      </button>\n    </div>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!addRolesForm.valid || rolesList.length === 0\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Update\n    </button>\n  </div>\n</form>\n","import {\n  NodebootOauth2StarterService,\n  User,\n} from './../nodeboot-oauth2-starter.service';\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport {\n  BehaviorSubject,\n  Subscription,\n  merge,\n  startWith,\n  switchMap,\n  catchError,\n  of,\n  map,\n  first,\n} from 'rxjs';\nimport { ViewUserRolesComponent } from './view-user-roles/view-user-roles.component';\nimport { CreateUserComponent } from './create-user/create-user.component';\nimport { AddUserRolesComponent } from './add-user-roles/add-user-roles.component';\nimport { DeleteUserComponent } from './delete-user/delete-user.component';\nimport { UpdateUserComponent } from './update-user/update-user.component';\n\n@Component({\n  selector: 'lib-oauth-starter-users',\n  templateUrl: './oauth-starter-users.component.html',\n  styleUrls: ['./oauth-starter-users.component.scss'],\n})\nexport class OauthStarterUsersComponent implements OnDestroy, AfterViewInit {\n  users!: User[];\n  errorMessage!: string | undefined;\n  displayedColumns: string[] = ['id', 'name', 'username', 'roles', 'edit'];\n\n  resultsLength = 0;\n  isLoadingResults = true;\n\n  reload = new BehaviorSubject<number>(0);\n\n  userDataSubscription!: Subscription;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private nbService: NodebootOauth2StarterService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnDestroy(): void {\n    this.userDataSubscription?.unsubscribe();\n    this.sort.sortChange.complete();\n  }\n\n  ngAfterViewInit(): void {\n    this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\n    this.userDataSubscription = merge(\n      this.sort.sortChange,\n      this.paginator.page,\n      this.reload\n    )\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.errorMessage = undefined;\n          this.isLoadingResults = true;\n          return this.nbService!.getUsers(\n            this.paginator.pageIndex,\n            this.sort.direction\n          ).pipe(\n            catchError((err) => {\n              if (err.error) {\n                this.errorMessage = err.error.message;\n              } else {\n                this.errorMessage = 'Unknown Error';\n              }\n              return of(null);\n            })\n          );\n        }),\n        map((data) => {\n          this.isLoadingResults = false;\n          if (data === null) {\n            return [];\n          }\n          this.resultsLength = data.content?.totalItems || 0;\n          return data.content?.items || [];\n        })\n      )\n      .subscribe((data) => {\n        this.users = data;\n      });\n  }\n\n  // ngOnInit(): void {}\n\n  openCreateUserDialog() {\n    const createUserDialogRef = this.dialog.open(CreateUserComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n    });\n    createUserDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openViewRolesDialog(user: User) {\n    this.dialog.open(ViewUserRolesComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: user,\n    });\n  }\n\n  openDialogDeleteUser(user: User) {\n    const updateRolesDialogRef = this.dialog.open(DeleteUserComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: user,\n    });\n\n    updateRolesDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openUpdateRolesDialog(user: User) {\n    const updateRolesDialogRef = this.dialog.open(AddUserRolesComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: user,\n    });\n\n    updateRolesDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openUpdateUserDialog(user: User) {\n    const updateUserDialogRef = this.dialog.open(UpdateUserComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: user,\n    });\n\n    updateUserDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n}\n","<div class=\"user-container\">\n  <div class=\"users-head\">\n    <h1 class=\"user-title\">Users</h1>\n    <span class=\"separator\"></span>\n    <button (click)=\"openCreateUserDialog()\" color=\"accent\" mat-flat-button>\n      Add User\n    </button>\n  </div>\n  <div class=\"user-body\">\n    <div class=\"container-table mat-elevation-z8\">\n      <div class=\"loading-shade\" *ngIf=\"isLoadingResults\">\n        <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n      </div>\n\n      <div class=\"example-table-container\">\n        <table\n          mat-table\n          [dataSource]=\"users\"\n          class=\"user-table\"\n          matSort\n          matSortActive=\"id\"\n          matSortDisableClear\n          matSortDirection=\"asc\"\n        >\n          <ng-container matColumnDef=\"id\">\n            <th mat-sort-header mat-header-cell *matHeaderCellDef>id</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"username\">\n            <th mat-header-cell *matHeaderCellDef>Username</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.username }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"roles\">\n            <th mat-header-cell *matHeaderCellDef>Roles</th>\n            <td class=\"roles-column\" mat-cell *matCellDef=\"let row\">\n              <button (click)=\"openViewRolesDialog(row)\" mat-stroked-button>\n                View Roles\n              </button>\n              <button\n                [disabled]=\"row.username === 'admin'\"\n                (click)=\"openUpdateRolesDialog(row)\"\n                mat-stroked-button\n              >\n                Update Roles\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td class=\"actions-column\" mat-cell *matCellDef=\"let row\">\n              <button\n                color=\"primary\"\n                [disabled]=\"row.username === 'admin'\"\n                mat-stroked-button\n                (click)=\"openUpdateUserDialog(row)\"\n              >\n                Edit User\n              </button>\n              <button\n                color=\"warn\"\n                [disabled]=\"row.username === 'admin'\"\n                mat-stroked-button\n                (click)=\"openDialogDeleteUser(row)\"\n              >\n                Delete User\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n      </div>\n\n      <mat-paginator\n        [length]=\"resultsLength\"\n        [pageSize]=\"20\"\n        aria-label=\"Select page of GitHub search results\"\n      ></mat-paginator>\n    </div>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  NodebootOauth2StarterService,\n  User,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss'],\n})\nexport class ChangePasswordComponent implements OnInit {\n  changePasswordForm: UntypedFormGroup;\n  errorMessage!: string;\n\n  hideNewPassword = true;\n  hideOldPassword = true;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    public dialogRef: MatDialogRef<ChangePasswordComponent>,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public user: User\n  ) {\n    this.changePasswordForm = this.formBuilder.group({\n      oldPassword: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\n            /^[a-zA-Z0-9\\d@$!%*#?&]*[A-Z]+[a-zA-Z0-9\\d@$!%*#?&]*$/\n          ),\n          Validators.pattern(\n            /^[a-zA-Z0-9\\d@$!%*#?&]*[0-9]+[a-zA-Z0-9\\d@$!%*#?&]*$/\n          ),\n          Validators.pattern(\n            /^[a-zA-Z0-9\\d@$!%*#?&]*[a-z]+[a-zA-Z0-9\\d@$!%*#?&]*$/\n          ),\n          Validators.minLength(6),\n        ])\n      ),\n      newPassword: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\n            /^[a-zA-Z0-9\\d@$!%*#?&]*[A-Z]+[a-zA-Z0-9\\d@$!%*#?&]*$/\n          ),\n          Validators.pattern(\n            /^[a-zA-Z0-9\\d@$!%*#?&]*[0-9]+[a-zA-Z0-9\\d@$!%*#?&]*$/\n          ),\n          Validators.pattern(\n            /^[a-zA-Z0-9\\d@$!%*#?&]*[a-z]+[a-zA-Z0-9\\d@$!%*#?&]*$/\n          ),\n          Validators.minLength(6),\n        ])\n      ),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  changePassword(updatePasswordData: {\n    oldPassword: string;\n    newPassword: string;\n  }) {\n    this.nbService\n      .updatePassword(\n        this.user.id,\n        updatePasswordData.newPassword,\n        updatePasswordData.oldPassword\n      )\n      .subscribe({\n        error: (err) => {\n          this.dialogRef.disableClose = false;\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n        },\n        next: () => {\n          this.dialogRef.close(true);\n        },\n      });\n  }\n}\n","<h2 mat-dialog-title>Change Password</h2>\n<form\n  [formGroup]=\"changePasswordForm\"\n  (ngSubmit)=\"changePassword(changePasswordForm.value)\"\n>\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <mat-form-field appearance=\"fill\" class=\"forms-field\">\n      <mat-label>Old Password</mat-label>\n      <input\n        formControlName=\"oldPassword\"\n        name=\"oldPassword\"\n        matInput\n        [type]=\"hideOldPassword ? 'password' : 'text'\"\n        required\n      />\n      <button\n        type=\"button\"\n        mat-icon-button\n        matSuffix\n        (click)=\"hideOldPassword = !hideOldPassword\"\n        [attr.aria-label]=\"'hideOldPassword password'\"\n        [attr.aria-pressed]=\"hideOldPassword\"\n      >\n        <mat-icon>{{\n          hideOldPassword ? \"visibility_off\" : \"visibility\"\n        }}</mat-icon>\n      </button>\n      <mat-hint>Put your current password</mat-hint>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\" class=\"forms-field\">\n      <mat-label>New Password</mat-label>\n      <input\n        formControlName=\"newPassword\"\n        name=\"newPassword\"\n        matInput\n        [type]=\"hideNewPassword ? 'password' : 'text'\"\n        required\n      />\n      <button\n        type=\"button\"\n        mat-icon-button\n        matSuffix\n        (click)=\"hideNewPassword = !hideNewPassword\"\n        [attr.aria-label]=\"'hideOldPassword password'\"\n        [attr.aria-pressed]=\"hideNewPassword\"\n      >\n        <mat-icon>{{\n          hideNewPassword ? \"visibility_off\" : \"visibility\"\n        }}</mat-icon>\n      </button>\n      <mat-hint>Put your new password</mat-hint>\n    </mat-form-field>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!changePasswordForm.valid\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Update\n    </button>\n  </div>\n</form>\n","import {\n  NodebootOauth2StarterService,\n  User,\n} from './../nodeboot-oauth2-starter.service';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ChangePasswordComponent } from './change-password/change-password.component';\n\n@Component({\n  selector: 'lib-oauth-starter-user-profile',\n  templateUrl: './oauth-starter-user-profile.component.html',\n  styleUrls: ['./oauth-starter-user-profile.component.scss'],\n})\nexport class OauthStarterUserProfileComponent implements OnInit {\n  user!: User;\n\n  constructor(\n    private nbService: NodebootOauth2StarterService,\n    public dialog: MatDialog\n  ) {\n    this.nbService.getUserProfile().subscribe({\n      next: (res) => {\n        this.user = res.content as User;\n      },\n    });\n  }\n\n  ngOnInit(): void {}\n\n  openChangePasswordDialog() {\n    this.dialog.open(ChangePasswordComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: this.user,\n    });\n  }\n}\n","<div>\n  <div class=\"profile-container\" *ngIf=\"user\">\n    <div class=\"header\">\n      <h1>{{ user.name }} Profile</h1>\n      <h4>#{{ user.id }}</h4>\n    </div>\n    <section>\n      <h3>Roles</h3>\n      <mat-accordion>\n        <mat-expansion-panel *ngFor=\"let role of user.roles\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              #{{ role.id }} | Role Name: {{ role.identifier }}\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <mat-list role=\"list\">\n            <mat-list-item\n              *ngFor=\"let resource of role.resources\"\n              role=\"listitem\"\n              >{{ resource.applicationResourceName }} | Options:\n              {{ resource.allowed.join(\",\") }}</mat-list-item\n            >\n          </mat-list>\n        </mat-expansion-panel>\n      </mat-accordion>\n      <div class=\"actions\">\n        <button\n          (click)=\"openChangePasswordDialog()\"\n          type=\"button\"\n          mat-flat-button\n          color=\"accent\"\n        >\n          Change Password\n        </button>\n      </div>\n    </section>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport {\n  Resource,\n  Option,\n  NodebootOauth2StarterService,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-create-role',\n  templateUrl: './create-role.component.html',\n  styleUrls: ['./create-role.component.scss'],\n})\nexport class CreateRoleComponent implements OnInit, OnDestroy {\n  createRoleForm: UntypedFormGroup;\n  errorMessage!: string;\n  options: Resource[] = [];\n  allowedShowList: Option[] = [];\n  allowedObject: Record<string, Option[]> = {};\n  objectKeys = Object.keys;\n\n  selectedSubscription: Subscription;\n  resourceSubscription: Subscription;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private nbService: NodebootOauth2StarterService,\n    public dialogRef: MatDialogRef<CreateRoleComponent>\n  ) {\n    this.nbService.getResourcesBasic().subscribe({\n      error: (err) => {\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n        this.options = [];\n      },\n      next: (res) => {\n        this.options = res.content || [];\n      },\n    });\n    this.createRoleForm = this.formBuilder.group({\n      identifier: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(/^[a-zA-Z0-9_\\.\\-\\/]+$/),\n          Validators.minLength(4),\n          Validators.maxLength(20),\n        ])\n      ),\n      resource: this.formBuilder.control(''),\n      selected: this.formBuilder.control(''),\n    });\n    this.resourceSubscription = this.createRoleForm\n      .get('resource')\n      ?.valueChanges.subscribe({\n        next: (value: string) => {\n          this.allowedShowList =\n            this.options.find((o) => o.applicationResourceName === value)\n              ?.allowed || [];\n          this.createRoleForm\n            .get('selected')\n            ?.setValue(this.allowedObject[value] || []);\n        },\n      }) as Subscription;\n\n    this.selectedSubscription = this.createRoleForm\n      .get('selected')\n      ?.valueChanges.subscribe((valueChange: Option[]) => {\n        const currentAllowedObject =\n          this.allowedObject[this.createRoleForm.get('resource')?.value] || [];\n\n        if (valueChange.length === 0 && currentAllowedObject.length === 0)\n          return;\n\n        let newOptionEntry: Option;\n\n        if (currentAllowedObject.length === 0) {\n          newOptionEntry = valueChange[0];\n          this.selectedChange(true, newOptionEntry);\n          return;\n        }\n\n        if (valueChange.length === 0) {\n          newOptionEntry = currentAllowedObject[0];\n          this.selectedChange(false, newOptionEntry);\n          return;\n        }\n\n        if (\n          currentAllowedObject[0].allowed === '*' &&\n          valueChange[0].allowed !== '*'\n        ) {\n          newOptionEntry = currentAllowedObject[0];\n          this.selectedChange(false, newOptionEntry);\n          return;\n        }\n\n        if (valueChange[0].allowed === '*') {\n          newOptionEntry = valueChange[0];\n          this.selectedChange(true, newOptionEntry);\n          return;\n        }\n\n        if (currentAllowedObject.length > valueChange.length) {\n          for (const allowed of currentAllowedObject) {\n            const indexOfAllowed = valueChange.findIndex(\n              (v) => v.id === allowed.id\n            );\n\n            if (indexOfAllowed === -1) {\n              newOptionEntry = allowed;\n              this.selectedChange(false, newOptionEntry);\n              break;\n            }\n          }\n\n          return;\n        }\n\n        for (const value of valueChange) {\n          const indexOfAllowed = currentAllowedObject.findIndex(\n            (c) => c.id === value.id\n          );\n\n          if (indexOfAllowed === -1) {\n            newOptionEntry = value;\n            this.selectedChange(true, newOptionEntry);\n            break;\n          }\n        }\n      }) as Subscription;\n  }\n\n  ngOnDestroy(): void {\n    this.resourceSubscription?.unsubscribe();\n    this.selectedSubscription?.unsubscribe();\n  }\n\n  ngOnInit(): void {}\n\n  createRole(roleBody: { identifier: string; resource: string | undefined }) {\n    this.nbService\n      .createRole(roleBody.identifier, this.allowedObject)\n      .subscribe({\n        error: (err) => {\n          this.dialogRef.disableClose = false;\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n        },\n        next: () => {\n          this.dialogRef.close(true);\n        },\n      });\n  }\n\n  selectedChange(selected: boolean, value: Option) {\n    // const currentAllowedObject =\n    //   this.allowedObject[this.createRoleForm.get('resource')?.value];\n    if (\n      value.allowed === '*' &&\n      selected &&\n      this.createRoleForm.get('selected')?.value.length !==\n        this.allowedShowList.length\n    ) {\n      this.createRoleForm.get('selected')?.setValue(this.allowedShowList);\n      this.allowedObject[this.createRoleForm.get('resource')?.value] = [\n        this.allowedShowList[0],\n      ];\n    } else if (value.allowed === '*' && !selected) {\n      const temporalAllowed = [...this.allowedShowList];\n      temporalAllowed.shift();\n      this.allowedObject[this.createRoleForm.get('resource')?.value] =\n        temporalAllowed;\n    } else if (selected) {\n      this.allowedObject[this.createRoleForm.get('resource')?.value] =\n        this.createRoleForm.get('selected')?.value;\n    } else {\n      if (this.createRoleForm.get('selected')?.value.length === 0) {\n        delete this.allowedObject[this.createRoleForm.get('resource')?.value];\n      } else {\n        this.allowedObject[this.createRoleForm.get('resource')?.value] =\n          this.createRoleForm.get('selected')?.value;\n      }\n    }\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Create Role</h2>\n<form\n  [formGroup]=\"createRoleForm\"\n  (ngSubmit)=\"createRole(createRoleForm.value)\"\n>\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Identifier</mat-label>\n      <input\n        matInput\n        placeholder=\"admin01\"\n        formControlName=\"identifier\"\n        name=\"identifier\"\n        required\n      />\n      <mat-hint>A role identifier</mat-hint>\n    </mat-form-field>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Select a resource</mat-label>\n      <mat-select name=\"resource\" formControlName=\"resource\">\n        <mat-option\n          [value]=\"option.applicationResourceName\"\n          *ngFor=\"let option of options\"\n          >{{ option.applicationResourceName }}</mat-option\n        >\n      </mat-select>\n      <mat-hint>Select an application resource</mat-hint>\n    </mat-form-field>\n    <mat-selection-list #allowed formControlName=\"selected\">\n      <mat-list-option\n        [value]=\"allowedL\"\n        [disabled]=\"\n          allowedL.allowed !== '*' &&\n          createRoleForm.get('selected')?.value.length ===\n            allowedShowList.length\n            ? true\n            : false\n        \"\n        *ngFor=\"let allowedL of allowedShowList\"\n      >\n        {{ allowedL.allowed }}\n      </mat-list-option>\n    </mat-selection-list>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"\n        !createRoleForm.valid || objectKeys(allowedObject).length === 0\n      \"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Create\n    </button>\n  </div>\n</form>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  NodebootOauth2StarterService,\n  Role,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-delete-role',\n  templateUrl: './delete-role.component.html',\n  styleUrls: ['./delete-role.component.scss'],\n})\nexport class DeleteRoleComponent implements OnInit {\n  errorMessage!: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteRoleComponent>,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public role: Role\n  ) {}\n\n  ngOnInit(): void {}\n\n  delete() {\n    this.dialogRef.disableClose = true;\n    this.nbService.deleteRole(this.role.id).subscribe({\n      error: (err) => {\n        this.dialogRef.disableClose = false;\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n      },\n      next: () => {\n        this.dialogRef.close(true);\n      },\n    });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Delete Role {{ role.identifier }}</h2>\n<div mat-dialog-content>\n  <div class=\"error-display\" *ngIf=\"errorMessage\">\n    <h5>{{ errorMessage }}</h5>\n  </div>\n  <p>Are you sure?</p>\n</div>\n<div align=\"end\" mat-dialog-actions>\n  <button\n    (click)=\"closeDialog()\"\n    type=\"button\"\n    color=\"warn\"\n    mat-stroked-button\n    [disabled]=\"dialogRef.disableClose\"\n  >\n    Cancel</button\n  ><button\n    (click)=\"delete()\"\n    type=\"button\"\n    color=\"primary\"\n    mat-flat-button\n    [disabled]=\"dialogRef.disableClose\"\n  >\n    Delete\n  </button>\n</div>\n","import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport {\n  Resource,\n  Role,\n  Option,\n  NodebootOauth2StarterService,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-options',\n  templateUrl: './options.component.html',\n  styleUrls: ['./options.component.scss'],\n})\nexport class OptionsComponent implements OnInit, OnDestroy {\n  optionsForm: UntypedFormGroup;\n  errorMessage!: string;\n  options: Resource[] = [];\n  allowedShowList: Option[] = [];\n  allowedObject: Record<string, Option[]> = {};\n  originalAllowedObject: Record<string, Option[]> = {};\n  objectKeys = Object.keys;\n  convertToString = JSON.stringify;\n\n  selectedSubscription: Subscription;\n  resourceSubscription: Subscription;\n\n  constructor(\n    public dialogRef: MatDialogRef<OptionsComponent>,\n    @Inject(MAT_DIALOG_DATA) public role: Role,\n    private nbService: NodebootOauth2StarterService,\n    private formBuilder: UntypedFormBuilder\n  ) {\n    for (const option of this.role.resources) {\n      this.allowedObject[option.applicationResourceName] = [...option.allowed];\n      this.originalAllowedObject[option.applicationResourceName] = [\n        ...option.allowed,\n      ];\n    }\n\n    this.nbService.getResourcesBasic().subscribe({\n      error: (err) => {\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n        this.options = [];\n      },\n      next: (res) => {\n        this.options = res.content || [];\n      },\n    });\n    this.optionsForm = this.formBuilder.group({\n      resource: this.formBuilder.control(''),\n      selected: this.formBuilder.control([]),\n    });\n    this.resourceSubscription = this.optionsForm\n      .get('resource')\n      ?.valueChanges.subscribe({\n        next: (value) => {\n          this.allowedShowList =\n            this.options.find((o) => o.applicationResourceName === value)\n              ?.allowed || [];\n\n          this.optionsForm\n            .get('selected')\n            ?.setValue(\n              this.allowedObject[this.optionsForm.get('resource')?.value]?.map(\n                (asl) => JSON.stringify(asl)\n              ) || []\n            );\n        },\n      }) as Subscription;\n\n    this.selectedSubscription = this.optionsForm\n      .get('selected')\n      ?.valueChanges.subscribe((valueChange: string[]) => {\n        const currentAllowedObject =\n          this.allowedObject[this.optionsForm.get('resource')?.value] || [];\n\n        if (valueChange.length === 0 && currentAllowedObject.length === 0)\n          return;\n\n        let newOptionEntry: Option;\n\n        if (currentAllowedObject.length === 0) {\n          newOptionEntry = JSON.parse(valueChange[0]);\n          this.selectedChange(true, newOptionEntry);\n          return;\n        }\n\n        if (valueChange.length === 0) {\n          newOptionEntry = currentAllowedObject[0];\n          this.selectedChange(false, newOptionEntry);\n          return;\n        }\n\n        if (\n          currentAllowedObject[0].allowed === '*' &&\n          JSON.parse(valueChange[0]).allowed !== '*'\n        ) {\n          newOptionEntry = currentAllowedObject[0];\n          this.selectedChange(false, newOptionEntry);\n          return;\n        }\n\n        if (JSON.parse(valueChange[0]).allowed === '*') {\n          newOptionEntry = JSON.parse(valueChange[0]);\n          this.selectedChange(true, newOptionEntry);\n          return;\n        }\n\n        if (currentAllowedObject.length > valueChange.length) {\n          for (const allowed of currentAllowedObject) {\n            const indexOfAllowed = valueChange.findIndex(\n              (v) => JSON.parse(v).id === allowed.id\n            );\n\n            if (indexOfAllowed === -1) {\n              newOptionEntry = allowed;\n              this.selectedChange(false, newOptionEntry);\n              break;\n            }\n          }\n\n          return;\n        }\n\n        for (const value of valueChange) {\n          const indexOfAllowed = currentAllowedObject.findIndex(\n            (c) => c.id === JSON.parse(value).id\n          );\n\n          if (indexOfAllowed === -1) {\n            newOptionEntry = JSON.parse(value);\n            this.selectedChange(true, newOptionEntry);\n            break;\n          }\n        }\n      }) as Subscription;\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.resourceSubscription?.unsubscribe();\n    this.selectedSubscription?.unsubscribe();\n  }\n\n  selectedChange(selected: boolean, value: Option) {\n    if (\n      value.allowed === '*' &&\n      selected &&\n      this.optionsForm.get('selected')?.value.length !==\n        this.allowedShowList.length\n    ) {\n      this.optionsForm\n        .get('selected')\n        ?.setValue(\n          this.allowedShowList.map((aso) => JSON.stringify(aso)) || []\n        );\n      this.allowedObject[this.optionsForm.get('resource')?.value] = [\n        this.allowedShowList[0],\n      ];\n    } else if (value.allowed === '*' && !selected) {\n      const temporalAllowed = [...this.allowedShowList];\n      temporalAllowed.shift();\n      this.allowedObject[this.optionsForm.get('resource')?.value] =\n        temporalAllowed;\n    } else if (selected) {\n      this.allowedObject[this.optionsForm.get('resource')?.value] = (\n        this.optionsForm.get('selected')?.value as string[]\n      ).map((stringObj) => {\n        return JSON.parse(stringObj);\n      });\n    } else {\n      if (this.optionsForm.get('selected')?.value.length === 0) {\n        delete this.allowedObject[this.optionsForm.get('resource')?.value];\n      } else {\n        this.allowedObject[this.optionsForm.get('resource')?.value] = (\n          this.optionsForm.get('selected')?.value as string[]\n        ).map((stringObj) => {\n          return JSON.parse(stringObj);\n        });\n      }\n    }\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  updateOptions() {\n    this.nbService\n      .updateRoleOptions(\n        this.role.id,\n        this.allowedObject,\n        this.originalAllowedObject\n      )\n      .subscribe({\n        error: (err) => {\n          this.dialogRef.disableClose = false;\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n        },\n        next: () => {\n          this.dialogRef.close(true);\n        },\n      });\n  }\n}\n","<h2 mat-dialog-title>Role {{ role.identifier }} access options</h2>\n<form [formGroup]=\"optionsForm\" (ngSubmit)=\"updateOptions()\">\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Select a resource</mat-label>\n      <mat-select name=\"resource\" formControlName=\"resource\">\n        <mat-option\n          [value]=\"option.applicationResourceName\"\n          *ngFor=\"let option of options\"\n          >{{ option.applicationResourceName }}</mat-option\n        >\n      </mat-select>\n      <mat-hint>Select an application resource</mat-hint>\n    </mat-form-field>\n    <mat-selection-list #allowed formControlName=\"selected\">\n      <mat-list-option\n        [value]=\"convertToString(allowedL)\"\n        [disabled]=\"\n          allowedL.allowed !== '*' &&\n          optionsForm.get('selected')?.value.length === allowedShowList.length\n            ? true\n            : false\n        \"\n        *ngFor=\"let allowedL of allowedShowList\"\n      >\n        {{ allowedL.allowed }}\n      </mat-list-option>\n    </mat-selection-list>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!optionsForm.valid || objectKeys(allowedObject).length === 0\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Update\n    </button>\n  </div>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport {\n  BehaviorSubject,\n  Subscription,\n  merge,\n  startWith,\n  switchMap,\n  catchError,\n  of,\n  map,\n  first,\n} from 'rxjs';\nimport {\n  BasicRole,\n  NodebootOauth2StarterService,\n  Role,\n} from '../nodeboot-oauth2-starter.service';\nimport { CreateRoleComponent } from './create-role/create-role.component';\nimport { DeleteRoleComponent } from './delete-role/delete-role.component';\nimport { OptionsComponent } from './options/options.component';\n\n@Component({\n  selector: 'lib-oauth-starter-roles',\n  templateUrl: './oauth-starter-roles.component.html',\n  styleUrls: ['./oauth-starter-roles.component.scss'],\n})\nexport class OauthStarterRolesComponent implements OnInit {\n  roles!: BasicRole[];\n  errorMessage!: string | undefined;\n  displayedColumns: string[] = ['id', 'identifier', 'options', 'delete'];\n\n  resultsLength = 0;\n  isLoadingResults = true;\n\n  reload = new BehaviorSubject<number>(0);\n\n  roleDataSubscription!: Subscription;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private nbService: NodebootOauth2StarterService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.roleDataSubscription?.unsubscribe();\n    this.sort.sortChange.complete();\n  }\n\n  ngAfterViewInit(): void {\n    this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\n    this.roleDataSubscription = merge(\n      this.sort.sortChange,\n      this.paginator.page,\n      this.reload\n    )\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.errorMessage = undefined;\n          this.isLoadingResults = true;\n          return this.nbService\n            .getRoles(this.paginator.pageIndex, this.sort.direction)\n            .pipe(\n              catchError((err) => {\n                if (err.error) {\n                  this.errorMessage = err.error.message;\n                } else {\n                  this.errorMessage = 'Unknown Error';\n                }\n                return of(null);\n              })\n            );\n        }),\n        map((data) => {\n          this.isLoadingResults = false;\n          if (data === null) {\n            return [];\n          }\n          this.resultsLength = data.content?.totalItems || 0;\n          return data.content?.items || [];\n        })\n      )\n      .subscribe((data) => {\n        this.roles = data;\n      });\n  }\n\n  openCreateRoleDialog() {\n    const createRoleDialogRef = this.dialog.open(CreateRoleComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n    });\n    createRoleDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openOptionsDialog(role: Role) {\n    const optionsRoleDialogRef = this.dialog.open(OptionsComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: role,\n    });\n    optionsRoleDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openDeleteRoleDialog(role: Role) {\n    const deleteRoleDialogRef = this.dialog.open(DeleteRoleComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: role,\n    });\n    deleteRoleDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n}\n","<div class=\"role-container\">\n  <div class=\"role-head\">\n    <h1 class=\"role-title\">Roles</h1>\n    <span class=\"separator\"></span>\n    <button (click)=\"openCreateRoleDialog()\" color=\"accent\" mat-flat-button>\n      Add Role\n    </button>\n  </div>\n  <div class=\"role-body\">\n    <div class=\"container-table mat-elevation-z8\">\n      <div class=\"loading-shade\" *ngIf=\"isLoadingResults\">\n        <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n      </div>\n\n      <div class=\"example-table-container\">\n        <table\n          mat-table\n          [dataSource]=\"roles\"\n          class=\"user-table\"\n          matSort\n          matSortActive=\"id\"\n          matSortDisableClear\n          matSortDirection=\"asc\"\n        >\n          <ng-container matColumnDef=\"id\">\n            <th mat-sort-header mat-header-cell *matHeaderCellDef>id</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"identifier\">\n            <th mat-header-cell *matHeaderCellDef>Identifier</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.identifier }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"options\">\n            <th mat-header-cell *matHeaderCellDef>Options</th>\n            <td class=\"roles-column\" mat-cell *matCellDef=\"let row\">\n              <button\n                [disabled]=\"row.identifier === 'admin'\"\n                (click)=\"openOptionsDialog(row)\"\n                mat-stroked-button\n              >\n                Options\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td class=\"actions-column\" mat-cell *matCellDef=\"let row\">\n              <button\n                color=\"warn\"\n                [disabled]=\"row.identifier === 'admin'\"\n                mat-stroked-button\n                (click)=\"openDeleteRoleDialog(row)\"\n              >\n                Delete Role\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n      </div>\n\n      <mat-paginator\n        [length]=\"resultsLength\"\n        [pageSize]=\"20\"\n        aria-label=\"Select page of GitHub search results\"\n      ></mat-paginator>\n    </div>\n  </div>\n</div>\n","import { Subscription } from 'rxjs';\nimport { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  Client,\n  NodebootOauth2StarterService,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-show-secret',\n  templateUrl: './show-secret.component.html',\n  styleUrls: ['./show-secret.component.scss'],\n})\nexport class ShowSecretComponent implements OnInit, OnDestroy {\n  hide = true;\n  clientSecret!: string;\n  errorMessage!: string;\n  subscription!: Subscription;\n\n  constructor(\n    private nbService: NodebootOauth2StarterService,\n    public dialogRef: MatDialogRef<ShowSecretComponent>,\n    @Inject(MAT_DIALOG_DATA) public client: Client\n  ) {}\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.dialogRef.disableClose = true;\n    this.subscription = this.nbService.getSecret(this.client.id).subscribe({\n      error: (err) => {\n        this.dialogRef.disableClose = false;\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n      },\n      next: (res) => {\n        this.dialogRef.disableClose = false;\n        this.clientSecret = res.content.clientSecret;\n      },\n    });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Client secret for {{ client.name }}</h2>\n<div mat-dialog-content>\n  <div class=\"loading-shade\" *ngIf=\"!clientSecret\">\n    <mat-spinner *ngIf=\"!clientSecret\"></mat-spinner>\n  </div>\n  <mat-form-field *ngIf=\"clientSecret\" class=\"full-width\" appearance=\"fill\">\n    <mat-label>Client secret</mat-label>\n    <input\n      [type]=\"hide ? 'password' : 'text'\"\n      disabled\n      matInput\n      [value]=\"clientSecret\"\n    />\n    <button\n      matTooltip=\"Show secret\"\n      mat-icon-button\n      matSuffix\n      (click)=\"hide = !hide\"\n    >\n      <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n    </button>\n  </mat-form-field>\n</div>\n<div align=\"end\" mat-dialog-actions>\n  <button (click)=\"closeDialog()\" type=\"button\" color=\"warn\" mat-stroked-button>\n    Close\n  </button>\n</div>\n","import { NodebootOauth2StarterService } from './../../nodeboot-oauth2-starter.service';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BasicRole, Client } from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-add-client-roles',\n  templateUrl: './add-client-roles.component.html',\n  styleUrls: ['./add-client-roles.component.scss'],\n})\nexport class AddClientRolesComponent implements OnInit {\n  addRolesForm: UntypedFormGroup;\n  errorMessage!: string;\n  errorMessageRoles!: string;\n  roles: BasicRole[] = [];\n  rolesList: BasicRole[] = [];\n\n  constructor(\n    public dialogRef: MatDialogRef<AddClientRolesComponent>,\n    private formBuilder: UntypedFormBuilder,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public client: Client\n  ) {\n    this.nbService.getRolesBasic().subscribe({\n      error: (err) => {\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n        this.roles = [];\n      },\n      next: (res) => {\n        const availableRoles = res.content?.flatMap((c) => {\n          const roleExist = client.roles.findIndex(\n            (r) => c.id == r.id\n          ) as number;\n          if (roleExist === -1) {\n            return c;\n          }\n          this.rolesList.push(c);\n          return [];\n        });\n        this.roles = availableRoles || [];\n      },\n    });\n    this.addRolesForm = this.formBuilder.group({\n      role: this.formBuilder.control(''),\n    });\n  }\n\n  ngOnInit(): void {}\n  addRoleToList() {\n    const roleValue = this.addRolesForm.get('role')?.value;\n    if (!roleValue) {\n      return;\n    }\n    const indexOfRole = this.roles.indexOf(roleValue);\n    this.roles.splice(indexOfRole, 1);\n    this.rolesList.push(roleValue);\n    this.addRolesForm.get('role')?.setValue('');\n  }\n\n  removeRoleToList(role: BasicRole) {\n    const roleValue = role;\n    const indexOfRole = this.rolesList.findIndex((r) => r.id == roleValue.id);\n    this.roles.unshift(role);\n    this.rolesList.splice(indexOfRole, 1);\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  updateRoles() {\n    const basicOriginalRoles = this.client.roles.map((rl) => {\n      return { id: rl.id, identifier: rl.identifier };\n    });\n    this.nbService\n      .updateClientRoles(\n        this.client.subjectId,\n        this.rolesList,\n        basicOriginalRoles\n      )\n      .subscribe({\n        error: (err) => {\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n          this.roles = [];\n        },\n        next: () => {\n          this.dialogRef.close(true);\n        },\n      });\n  }\n}\n","<h2 mat-dialog-title>Modify roles of {{ client.name }}</h2>\n<form [formGroup]=\"addRolesForm\" (ngSubmit)=\"updateRoles()\">\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <div class=\"select-role\">\n      <mat-form-field class=\"forms-field\" appearance=\"fill\">\n        <mat-label>Select A Role</mat-label>\n        <mat-select name=\"role\" formControlName=\"role\">\n          <mat-option [value]=\"role\" *ngFor=\"let role of roles\">{{\n            role.identifier\n          }}</mat-option>\n        </mat-select>\n        <mat-hint>Select a role and add it</mat-hint>\n      </mat-form-field>\n      <button type=\"button\" (click)=\"addRoleToList()\" mat-stroked-button>\n        +\n      </button>\n    </div>\n    <div *ngFor=\"let role of rolesList\" class=\"roles-list\">\n      <div class=\"role-title\">\n        <h3>{{ role.identifier }}</h3>\n      </div>\n      <button\n        (click)=\"removeRoleToList(role)\"\n        color=\"warn\"\n        type=\"button\"\n        mat-stroked-button\n      >\n        -\n      </button>\n    </div>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!addRolesForm.valid || rolesList.length === 0\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Update\n    </button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n  BasicRole,\n  NodebootOauth2StarterService,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-create-client',\n  templateUrl: './create-client.component.html',\n  styleUrls: ['./create-client.component.scss'],\n})\nexport class CreateClientComponent implements OnInit {\n  createClientForm: UntypedFormGroup;\n  errorMessage!: string;\n  errorMessageRoles!: string;\n  roles: BasicRole[] = [];\n  rolesList: BasicRole[] = [];\n  hidePassword = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateClientComponent>,\n    private formBuilder: UntypedFormBuilder,\n    private nbService: NodebootOauth2StarterService\n  ) {\n    this.nbService.getRolesBasic().subscribe({\n      error: (err) => {\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n        this.roles = [];\n      },\n      next: (res) => {\n        this.roles = res.content || [];\n      },\n    });\n    this.createClientForm = this.formBuilder.group({\n      name: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(45),\n          Validators.pattern(/^[a-zA-Z0-9_\\.\\-\\/\\s]+$/),\n        ])\n      ),\n      description: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(255),\n        ])\n      ),\n      identifier: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(/^[a-zA-Z0-9_\\.\\-\\/]+$/),\n          Validators.minLength(4),\n          Validators.maxLength(20),\n        ])\n      ),\n      role: this.formBuilder.control(''),\n      longLive: this.formBuilder.control(false),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  addRoleToList() {\n    const roleValue = this.createClientForm.get('role')?.value;\n    if (!roleValue) {\n      return;\n    }\n    const indexOfRole = this.roles.indexOf(roleValue);\n    this.roles.splice(indexOfRole, 1);\n    this.rolesList.push(roleValue);\n    this.createClientForm.get('role')?.setValue('');\n  }\n\n  removeRoleToList(role: BasicRole) {\n    const roleValue = role;\n    const indexOfRole = this.rolesList.indexOf(roleValue);\n    this.roles.unshift(role);\n    this.rolesList.splice(indexOfRole, 1);\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  createClient(createClientData: {\n    name: string;\n    identifier: string;\n    role: string | undefined;\n    longLive?: boolean;\n  }) {\n    const longLive = createClientData.longLive || false;\n    createClientData.role = undefined;\n    createClientData.longLive = undefined;\n    this.dialogRef.disableClose = true;\n    this.nbService\n      .createClient({ ...createClientData, roles: this.rolesList }, longLive)\n      .subscribe({\n        error: (err) => {\n          this.dialogRef.disableClose = false;\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n        },\n        next: (res) => {\n          this.dialogRef.close(res.content);\n        },\n      });\n  }\n}\n","<h2 mat-dialog-title>Create Client</h2>\n<form\n  [formGroup]=\"createClientForm\"\n  (ngSubmit)=\"createClient(createClientForm.value)\"\n>\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Name</mat-label>\n      <input matInput formControlName=\"name\" name=\"name\" required />\n      <mat-hint>Put the client name</mat-hint>\n    </mat-form-field>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Description</mat-label>\n      <textarea\n        matInput\n        formControlName=\"description\"\n        name=\"description\"\n        required\n      ></textarea>\n      <mat-hint>Breve user description</mat-hint>\n    </mat-form-field>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Identifier</mat-label>\n      <input\n        matInput\n        placeholder=\"admin01\"\n        formControlName=\"identifier\"\n        name=\"identifier\"\n        required\n      />\n      <mat-hint>Client unique identifier</mat-hint>\n    </mat-form-field>\n    <div class=\"select-role\">\n      <mat-form-field class=\"forms-field\" appearance=\"fill\">\n        <mat-label>Select A Role</mat-label>\n        <mat-select name=\"role\" formControlName=\"role\">\n          <mat-option [value]=\"role\" *ngFor=\"let role of roles\">{{\n            role.identifier\n          }}</mat-option>\n        </mat-select>\n        <mat-hint>Select a role and add it</mat-hint>\n      </mat-form-field>\n      <button type=\"button\" (click)=\"addRoleToList()\" mat-stroked-button>\n        +\n      </button>\n    </div>\n    <div *ngFor=\"let role of rolesList\" class=\"roles-list\">\n      <div class=\"role-title\">\n        <h3>{{ role.identifier }}</h3>\n      </div>\n      <button\n        (click)=\"removeRoleToList(role)\"\n        color=\"warn\"\n        type=\"button\"\n        mat-stroked-button\n      >\n        -\n      </button>\n    </div>\n    <div class=\"check-container\">\n      <h4>Create with a long live token:</h4>\n      <p>\n        <mat-checkbox formControlName=\"longLive\">Long Live Token</mat-checkbox>\n      </p>\n    </div>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!createClientForm.valid || rolesList.length === 0\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Create\n    </button>\n  </div>\n</form>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  Client,\n  NodebootOauth2StarterService,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-delete-client',\n  templateUrl: './delete-client.component.html',\n  styleUrls: ['./delete-client.component.scss'],\n})\nexport class DeleteClientComponent implements OnInit {\n  errorMessage!: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteClientComponent>,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public client: Client\n  ) {}\n\n  ngOnInit(): void {}\n\n  delete() {\n    this.dialogRef.disableClose = true;\n    this.nbService.deleteClient(this.client.subjectId).subscribe({\n      error: (err) => {\n        this.dialogRef.disableClose = false;\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n      },\n      next: () => {\n        this.dialogRef.close(true);\n      },\n    });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Delete Client {{ client.name }}</h2>\n<div mat-dialog-content>\n  <div class=\"error-display\" *ngIf=\"errorMessage\">\n    <h5>{{ errorMessage }}</h5>\n  </div>\n  <p>Are you sure?</p>\n</div>\n<div align=\"end\" mat-dialog-actions>\n  <button\n    (click)=\"closeDialog()\"\n    type=\"button\"\n    color=\"warn\"\n    mat-stroked-button\n    [disabled]=\"dialogRef.disableClose\"\n  >\n    Cancel</button\n  ><button\n    (click)=\"delete()\"\n    type=\"button\"\n    color=\"primary\"\n    mat-flat-button\n    [disabled]=\"dialogRef.disableClose\"\n  >\n    Delete\n  </button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ClientCreateContent } from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-show-token',\n  templateUrl: './show-token.component.html',\n  styleUrls: ['./show-token.component.scss'],\n})\nexport class ShowTokenComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<ShowTokenComponent>,\n    @Inject(MAT_DIALOG_DATA) public clientResult: ClientCreateContent\n  ) {}\n\n  ngOnInit(): void {}\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Created client data</h2>\n<div mat-dialog-content>\n  <mat-form-field class=\"full-width\" appearance=\"fill\">\n    <mat-label>Client Id</mat-label>\n    <input disabled matInput [value]=\"clientResult.clientId\" />\n  </mat-form-field>\n  <mat-form-field class=\"full-width\" appearance=\"fill\">\n    <mat-label>Client secret</mat-label>\n    <input disabled matInput [value]=\"clientResult.clientSecret\" />\n    <button\n      matTooltip=\"Copy secret\"\n      mat-icon-button\n      matSuffix\n      ngxClipboard\n      [cbContent]=\"clientResult.clientSecret\"\n      [attr.aria-label]=\"'Copy Token'\"\n    >\n      <mat-icon matSuffix>file_copy</mat-icon>\n    </button>\n  </mat-form-field>\n  <mat-form-field\n    *ngIf=\"!(clientResult.access_token === '')\"\n    class=\"full-width\"\n    appearance=\"fill\"\n  >\n    <mat-label>Access Token</mat-label>\n    <input disabled matInput [value]=\"clientResult.access_token\" />\n    <button\n      matTooltip=\"Copy token\"\n      mat-icon-button\n      matSuffix\n      ngxClipboard\n      [cbContent]=\"clientResult.access_token\"\n      [attr.aria-label]=\"'Copy Token'\"\n    >\n      <mat-icon matSuffix>file_copy</mat-icon>\n    </button>\n  </mat-form-field>\n</div>\n<div align=\"end\" mat-dialog-actions>\n  <button (click)=\"closeDialog()\" type=\"button\" color=\"warn\" mat-stroked-button>\n    Ok\n  </button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  Client,\n  ClientUpdateBody,\n  NodebootOauth2StarterService,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-update-client',\n  templateUrl: './update-client.component.html',\n  styleUrls: ['./update-client.component.scss'],\n})\nexport class UpdateClientComponent implements OnInit {\n  errorMessage!: string;\n  updateUserForm: UntypedFormGroup;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    public dialogRef: MatDialogRef<UpdateClientComponent>,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public client: Client\n  ) {\n    this.updateUserForm = this.formBuilder.group({\n      name: this.formBuilder.control(\n        client.name,\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(45),\n          Validators.pattern(/^[a-zA-Z0-9_\\.\\-\\/\\s]+$/),\n        ])\n      ),\n    });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  updateUser(updateClientData: ClientUpdateBody) {\n    this.dialogRef.disableClose = true;\n    this.nbService\n      .updateClient(this.client.subjectId, updateClientData)\n      .subscribe({\n        error: (err) => {\n          this.dialogRef.disableClose = false;\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n        },\n        next: () => {\n          this.dialogRef.close(true);\n        },\n      });\n  }\n\n  ngOnInit(): void {}\n}\n","<h2 mat-dialog-title>Update Client {{ client.name }}</h2>\n<form\n  [formGroup]=\"updateUserForm\"\n  (ngSubmit)=\"updateUser(updateUserForm.value)\"\n>\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Name</mat-label>\n      <input matInput formControlName=\"name\" name=\"name\" required />\n      <mat-hint>Put your name</mat-hint>\n    </mat-form-field>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!updateUserForm.valid || dialogRef.disableClose\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Update\n    </button>\n  </div>\n</form>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Client } from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-view-client-roles',\n  templateUrl: './view-client-roles.component.html',\n  styleUrls: ['./view-client-roles.component.scss'],\n})\nexport class ViewClientRolesComponent implements OnInit {\n  userTitle: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<ViewClientRolesComponent>,\n    @Inject(MAT_DIALOG_DATA) public client: Client\n  ) {\n    this.userTitle = `${client.name} roles`;\n  }\n\n  ngOnInit(): void {}\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<h2 class=\"primary-color\" mat-dialog-title>{{ userTitle }}</h2>\n<div mat-dialog-content>\n  <div class=\"accordion-container\">\n    <mat-accordion>\n      <mat-expansion-panel *ngFor=\"let role of client.roles\">\n        <mat-expansion-panel-header>\n          <mat-panel-title> {{ role.identifier }} </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h4>Grouped by application resource</h4>\n        <mat-list>\n          <div *ngFor=\"let option of role.resources\">\n            <div mat-subheader>{{ option.applicationResourceName }}</div>\n            <mat-list-item *ngFor=\"let allowed of option.allowed\">\n              <mat-icon mat-list-icon>vpn_key</mat-icon>\n              <div mat-line>\n                {{ option.applicationResourceName }}:{{ allowed }}\n              </div>\n            </mat-list-item>\n            <mat-divider></mat-divider>\n          </div>\n        </mat-list>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </div>\n</div>\n<div align=\"end\" mat-dialog-actions>\n  <button\n    (click)=\"closeDialog()\"\n    type=\"button\"\n    color=\"primary\"\n    mat-stroked-button\n  >\n    Ok\n  </button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'lib-show-new-token',\n  templateUrl: './show-new-token.component.html',\n  styleUrls: ['./show-new-token.component.scss'],\n})\nexport class ShowNewTokenComponent implements OnInit {\n  hide = true;\n  errorMessage!: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<ShowNewTokenComponent>,\n    @Inject(MAT_DIALOG_DATA) public security: { access_token: string }\n  ) {}\n\n  ngOnInit(): void {}\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Client Access Token</h2>\n<div mat-dialog-content>\n  <mat-form-field class=\"full-width\" appearance=\"fill\">\n    <mat-label>Access Token</mat-label>\n    <input disabled matInput [value]=\"security.access_token\" />\n    <button\n      matTooltip=\"Copy token\"\n      mat-icon-button\n      matSuffix\n      ngxClipboard\n      [cbContent]=\"security.access_token\"\n      [attr.aria-label]=\"'Copy Token'\"\n    >\n      <mat-icon matSuffix>file_copy</mat-icon>\n    </button>\n  </mat-form-field>\n</div>\n<div align=\"end\" mat-dialog-actions>\n  <button (click)=\"closeDialog()\" type=\"button\" color=\"warn\" mat-stroked-button>\n    Close\n  </button>\n</div>\n","import { ShowSecretComponent } from './show-secret/show-secret.component';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport {\n  BehaviorSubject,\n  Subscription,\n  merge,\n  startWith,\n  switchMap,\n  catchError,\n  of,\n  map,\n  first,\n} from 'rxjs';\nimport {\n  Client,\n  ClientCreateContent,\n  NodebootOauth2StarterService,\n} from '../nodeboot-oauth2-starter.service';\nimport { AddClientRolesComponent } from './add-client-roles/add-client-roles.component';\nimport { CreateClientComponent } from './create-client/create-client.component';\nimport { DeleteClientComponent } from './delete-client/delete-client.component';\nimport { ShowTokenComponent } from './show-token/show-token.component';\nimport { UpdateClientComponent } from './update-client/update-client.component';\nimport { ViewClientRolesComponent } from './view-client-roles/view-client-roles.component';\nimport { ShowNewTokenComponent } from './show-new-token/show-new-token.component';\n\n@Component({\n  selector: 'lib-oauth-starter-client',\n  templateUrl: './oauth-starter-client.component.html',\n  styleUrls: ['./oauth-starter-client.component.scss'],\n})\nexport class OauthStarterClientComponent implements OnInit {\n  clients!: Client[];\n  errorMessage!: string | undefined;\n  displayedColumns: string[] = [\n    'id',\n    'name',\n    'identifier',\n    'clientSecret',\n    'accessToken',\n    'roles',\n    'edit',\n  ];\n\n  resultsLength = 0;\n  isLoadingResults = true;\n  wholePageLoading = false;\n\n  reload = new BehaviorSubject<number>(0);\n\n  clientDataSubscription!: Subscription;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private nbService: NodebootOauth2StarterService,\n    public dialog: MatDialog\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\n    this.clientDataSubscription = merge(\n      this.sort.sortChange,\n      this.paginator.page,\n      this.reload\n    )\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.errorMessage = undefined;\n          this.isLoadingResults = true;\n          return this.nbService!.getClients(\n            this.paginator.pageIndex,\n            this.sort.direction\n          ).pipe(\n            catchError((err) => {\n              if (err.error) {\n                this.errorMessage = err.error.message;\n              } else {\n                this.errorMessage = 'Unknown Error';\n              }\n              return of(null);\n            })\n          );\n        }),\n        map((data) => {\n          this.isLoadingResults = false;\n          if (data === null) {\n            return [];\n          }\n          this.resultsLength = data.content?.totalItems || 0;\n          return data.content?.items || [];\n        })\n      )\n      .subscribe((data) => {\n        this.clients = data;\n      });\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.clientDataSubscription?.unsubscribe();\n    this.sort.sortChange.complete();\n  }\n\n  openShowSecretComponent(client: Client) {\n    this.dialog.open(ShowSecretComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: client,\n    });\n  }\n\n  generateNewLongLiveToken(client: Client) {\n    this.nbService\n      .generateLongLiveToken(client.id, client.identifier)\n      .subscribe({\n        error: (err) => {\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n        },\n        next: (res) => {\n          this.reload.next(this.reload.value + 1);\n          this.dialog.open(ShowNewTokenComponent, {\n            width: '600px',\n            maxHeight: '70vh',\n            data: { access_token: res.content.access_token },\n          });\n        },\n      });\n  }\n\n  removeLongLiveToken(client: Client) {\n    this.wholePageLoading = true;\n    this.nbService.removeLongLiveToken(client.id, client.identifier).subscribe({\n      error: (err) => {\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n      },\n      next: () => {\n        this.reload.next(this.reload.value + 1);\n      },\n      complete: () => {\n        this.wholePageLoading = false;\n      },\n    });\n  }\n\n  revokeClient(client: Client) {\n    this.wholePageLoading = true;\n    this.nbService.modifyRevokeStatus(client.id, true).subscribe({\n      error: (err) => {\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n      },\n      next: () => {\n        this.reload.next(this.reload.value + 1);\n      },\n      complete: () => {\n        this.wholePageLoading = false;\n      },\n    });\n  }\n\n  ratifyClient(client: Client) {\n    this.wholePageLoading = true;\n    this.nbService.modifyRevokeStatus(client.id, false).subscribe({\n      error: (err) => {\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n      },\n      next: () => {\n        this.reload.next(this.reload.value + 1);\n      },\n      complete: () => {\n        this.wholePageLoading = false;\n      },\n    });\n  }\n\n  openCreateClientDialog() {\n    const createClientDialogRef = this.dialog.open(CreateClientComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n    });\n    createClientDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res: ClientCreateContent) => {\n          if (res) {\n            this.dialog.open(ShowTokenComponent, {\n              width: '600px',\n              maxHeight: '70vh',\n              data: res,\n            });\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openViewRolesDialog(client: Client) {\n    this.dialog.open(ViewClientRolesComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: client,\n    });\n  }\n\n  openUpdateRolesDialog(client: Client) {\n    const updateRolesDialogRef = this.dialog.open(AddClientRolesComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: client,\n    });\n\n    updateRolesDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openUpdateClientDialog(client: Client) {\n    const updateClientDialogRef = this.dialog.open(UpdateClientComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: client,\n    });\n\n    updateClientDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openDialogDeleteClient(client: Client) {\n    const updateRolesDialogRef = this.dialog.open(DeleteClientComponent, {\n      width: '600px',\n      maxHeight: '70vh',\n      data: client,\n    });\n\n    updateRolesDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n}\n","<div class=\"client-container\">\n  <div class=\"client-head\">\n    <h1 class=\"client-title\">Clients</h1>\n    <span class=\"separator\"></span>\n    <button (click)=\"openCreateClientDialog()\" color=\"accent\" mat-flat-button>\n      Add Client\n    </button>\n  </div>\n  <div class=\"client-body\">\n    <div class=\"container-table mat-elevation-z8\">\n      <div class=\"loading-shade\" *ngIf=\"isLoadingResults\">\n        <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n      </div>\n\n      <div class=\"example-table-container\">\n        <table\n          mat-table\n          [dataSource]=\"clients\"\n          class=\"client-table\"\n          matSort\n          matSortActive=\"id\"\n          matSortDisableClear\n          matSortDirection=\"asc\"\n        >\n          <ng-container matColumnDef=\"id\">\n            <th mat-sort-header mat-header-cell *matHeaderCellDef>id</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"identifier\">\n            <th mat-header-cell *matHeaderCellDef>Identifier</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.identifier }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"clientSecret\">\n            <th mat-header-cell *matHeaderCellDef>Secret</th>\n            <td class=\"roles-column\" mat-cell *matCellDef=\"let row\">\n              <button (click)=\"openShowSecretComponent(row)\" mat-stroked-button>\n                Secret Key\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"accessToken\">\n            <th mat-header-cell *matHeaderCellDef>Access Token</th>\n            <td class=\"roles-column\" mat-cell *matCellDef=\"let row\">\n              <button\n                (click)=\"generateNewLongLiveToken(row)\"\n                mat-stroked-button\n                *ngIf=\"!row.hasLongLiveToken\"\n              >\n                Generate Long Live\n              </button>\n              <button\n                *ngIf=\"row.hasLongLiveToken\"\n                color=\"warn\"\n                (click)=\"removeLongLiveToken(row)\"\n                mat-stroked-button\n              >\n                Remove Long Live\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"roles\">\n            <th mat-header-cell *matHeaderCellDef>Roles</th>\n            <td class=\"roles-column\" mat-cell *matCellDef=\"let row\">\n              <button (click)=\"openViewRolesDialog(row)\" mat-stroked-button>\n                View Roles\n              </button>\n              <button\n                [disabled]=\"row.identifier === 'admin'\"\n                (click)=\"openUpdateRolesDialog(row)\"\n                mat-stroked-button\n              >\n                Update Roles\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td class=\"actions-column\" mat-cell *matCellDef=\"let row\">\n              <button\n                *ngIf=\"!row.revoked\"\n                color=\"primary\"\n                [disabled]=\"row.identifier === 'admin'\"\n                mat-stroked-button\n                (click)=\"revokeClient(row)\"\n              >\n                Revoke Client\n              </button>\n              <button\n                *ngIf=\"row.revoked\"\n                color=\"primary\"\n                [disabled]=\"row.identifier === 'admin'\"\n                mat-stroked-button\n                (click)=\"ratifyClient(row)\"\n              >\n                Ratify Client\n              </button>\n              <button\n                color=\"primary\"\n                [disabled]=\"row.identifier === 'admin'\"\n                mat-stroked-button\n                (click)=\"openUpdateClientDialog(row)\"\n              >\n                Edit Client\n              </button>\n              <button\n                color=\"warn\"\n                [disabled]=\"row.identifier === 'admin'\"\n                mat-stroked-button\n                (click)=\"openDialogDeleteClient(row)\"\n              >\n                Delete Client\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n      </div>\n\n      <mat-paginator [length]=\"resultsLength\" [pageSize]=\"20\"></mat-paginator>\n    </div>\n  </div>\n</div>\n<div *ngIf=\"wholePageLoading\" class=\"loading-full\">\n  <mat-spinner></mat-spinner>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  NodebootOauth2StarterService,\n  Resource,\n  Option,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-application-options',\n  templateUrl: './application-options.component.html',\n  styleUrls: ['./application-options.component.scss'],\n})\nexport class ApplicationOptionsComponent implements OnInit {\n  addResourceOptionForm: UntypedFormGroup;\n  errorMessage!: string;\n  errorMessageRoles!: string;\n  options: Option[] = [];\n  optionsList: Option[] = [];\n  hidePassword = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ApplicationOptionsComponent>,\n    private formBuilder: UntypedFormBuilder,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public resource: Resource\n  ) {\n    this.optionsList = [...resource.allowed];\n    this.addResourceOptionForm = this.formBuilder.group({\n      name: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.pattern(/^[a-zA-Z0-9_\\.\\-\\/\\s]+$/),\n          Validators.minLength(1),\n          Validators.maxLength(40),\n        ])\n      ),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  isBasicOption(allowed: string) {\n    const basicOptions = ['*', 'create', 'select', 'update', 'delete'];\n    const indexOfAllowed = basicOptions.indexOf(allowed);\n    if (indexOfAllowed === -1) return false;\n    return true;\n  }\n\n  addOptionToList() {\n    const currentNameValue =\n      (this.addResourceOptionForm.get('name')?.value as string) || '';\n    if (currentNameValue === '') return;\n    const indexOfCurrent = this.optionsList.findIndex(\n      (option) =>\n        option.allowed.toLowerCase() === currentNameValue.toLowerCase()\n    );\n    if (\n      indexOfCurrent === -1 &&\n      this.addResourceOptionForm.get('name')?.valid\n    ) {\n      this.optionsList.push({\n        id: 0,\n        allowed: this.addResourceOptionForm.get('name')?.value,\n      });\n      this.addResourceOptionForm.get('name')?.reset();\n    }\n  }\n\n  removeFromOptionList(optionToRemove: Option) {\n    const indexToRemove = this.optionsList.findIndex(\n      (option) =>\n        option.allowed.toLowerCase() === optionToRemove.allowed.toLowerCase()\n    );\n    this.optionsList.splice(indexToRemove, 1);\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  updateResourceOptions() {\n    this.nbService\n      .updateResourceOptions(\n        this.resource.id,\n        this.optionsList,\n        this.resource.allowed\n      )\n      .subscribe({\n        error: (err) => {\n          this.dialogRef.disableClose = false;\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n        },\n        next: () => {\n          this.dialogRef.close(true);\n        },\n      });\n  }\n}\n","<h2 mat-dialog-title>Resource options</h2>\n<form [formGroup]=\"addResourceOptionForm\" (ngSubmit)=\"updateResourceOptions()\">\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <div class=\"select-role\">\n      <mat-form-field class=\"forms-field\" appearance=\"fill\">\n        <mat-label>New Option</mat-label>\n        <input matInput formControlName=\"name\" name=\"name\" />\n        <mat-hint>Resource option</mat-hint>\n      </mat-form-field>\n      <button\n        [disabled]=\"!addResourceOptionForm.valid\"\n        type=\"button\"\n        (click)=\"addOptionToList()\"\n        mat-stroked-button\n      >\n        +\n      </button>\n    </div>\n    <div class=\"options-list-container\">\n      <div *ngFor=\"let option of optionsList\" class=\"roles-list\">\n        <div class=\"role-title\">\n          <h3>{{ option.allowed }}</h3>\n        </div>\n        <button\n          [disabled]=\"isBasicOption(option.allowed)\"\n          (click)=\"removeFromOptionList(option)\"\n          color=\"warn\"\n          type=\"button\"\n          mat-stroked-button\n        >\n          -\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!addResourceOptionForm.valid || optionsList.length === 0\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Update\n    </button>\n  </div>\n</form>\n","import {\n  Application,\n  NodebootOauth2StarterService,\n} from '../../nodeboot-oauth2-starter.service';\nimport { Component, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'lib-create-application-resource',\n  templateUrl: './create-application-resource.component.html',\n  styleUrls: ['./create-application-resource.component.scss'],\n})\nexport class CreateApplicationResourceComponent implements OnInit {\n  createResourceForm: UntypedFormGroup;\n  errorMessage!: string;\n  errorMessageRoles!: string;\n  applications: Application[] = [];\n  hidePassword = true;\n\n  loadingResult = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateApplicationResourceComponent>,\n    private formBuilder: UntypedFormBuilder,\n    private nbService: NodebootOauth2StarterService\n  ) {\n    this.nbService.getApplications().subscribe({\n      error: (err) => {\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n        this.applications = [];\n      },\n      next: (res) => {\n        this.applications = res.content || [];\n      },\n    });\n    this.createResourceForm = this.formBuilder.group({\n      resourceIdentifier: this.formBuilder.control(\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(45),\n          Validators.pattern(/^[a-zA-Z0-9_\\.\\-\\/]+$/),\n        ])\n      ),\n      application: this.formBuilder.control(\n        '',\n        Validators.compose([Validators.required, Validators.min(1)])\n      ),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  createResource(createResourceForm: {\n    resourceIdentifier: string;\n    application: number;\n  }) {\n    this.loadingResult = true;\n    this.nbService\n      .createResource(\n        createResourceForm.resourceIdentifier,\n        createResourceForm.application\n      )\n      .subscribe({\n        error: (err) => {\n          this.dialogRef.disableClose = false;\n          if (err.error) {\n            this.errorMessage = err.error.message;\n          } else {\n            this.errorMessage = 'Unknown Error';\n          }\n        },\n        next: () => {\n          this.dialogRef.close(true);\n        },\n        complete: () => {\n          this.loadingResult = false;\n        },\n      });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Create Application Resource</h2>\n<form\n  [formGroup]=\"createResourceForm\"\n  (ngSubmit)=\"createResource(createResourceForm.value)\"\n>\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Identifier</mat-label>\n      <input\n        matInput\n        formControlName=\"resourceIdentifier\"\n        name=\"resourceIdentifier\"\n        required\n      />\n      <mat-hint>The resource name</mat-hint>\n    </mat-form-field>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Select A Application</mat-label>\n      <mat-select name=\"application\" formControlName=\"application\">\n        <mat-option\n          [value]=\"application.id\"\n          *ngFor=\"let application of applications\"\n          >{{ application.identifier }}</mat-option\n        >\n      </mat-select>\n      <mat-hint>Select an application</mat-hint>\n    </mat-form-field>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"!createResourceForm.valid || loadingResult\"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Create\n    </button>\n  </div>\n</form>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  NodebootOauth2StarterService,\n  Resource,\n} from '../../nodeboot-oauth2-starter.service';\n\n@Component({\n  selector: 'lib-delete-application-resource',\n  templateUrl: './delete-application-resource.component.html',\n  styleUrls: ['./delete-application-resource.component.scss'],\n})\nexport class DeleteApplicationResourceComponent implements OnInit {\n  errorMessage!: string;\n  loadingResult = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteApplicationResourceComponent>,\n    private nbService: NodebootOauth2StarterService,\n    @Inject(MAT_DIALOG_DATA) public resource: Resource\n  ) {}\n\n  ngOnInit(): void {}\n\n  delete() {\n    this.loadingResult = true;\n    this.dialogRef.disableClose = true;\n    this.nbService.deleteResource(this.resource.id).subscribe({\n      error: (err) => {\n        this.dialogRef.disableClose = false;\n        if (err.error) {\n          this.errorMessage = err.error.message;\n        } else {\n          this.errorMessage = 'Unknown Error';\n        }\n      },\n      next: () => {\n        this.dialogRef.close(true);\n      },\n      complete: () => {\n        this.loadingResult = false;\n      },\n    });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Delete Resource {{ resource.applicationResourceName }}</h2>\n<div mat-dialog-content>\n  <div class=\"error-display\" *ngIf=\"errorMessage\">\n    <h5>{{ errorMessage }}</h5>\n  </div>\n  <p>Are you sure?</p>\n</div>\n<div align=\"end\" mat-dialog-actions>\n  <button\n    (click)=\"closeDialog()\"\n    type=\"button\"\n    color=\"warn\"\n    mat-stroked-button\n    [disabled]=\"dialogRef.disableClose\"\n  >\n    Cancel</button\n  ><button\n    (click)=\"delete()\"\n    type=\"button\"\n    color=\"primary\"\n    mat-flat-button\n    [disabled]=\"dialogRef.disableClose\"\n  >\n    Delete\n  </button>\n</div>\n","import { NodebootOauth2StarterService } from './../nodeboot-oauth2-starter.service';\nimport {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport {\n  BehaviorSubject,\n  Subscription,\n  merge,\n  startWith,\n  switchMap,\n  catchError,\n  of,\n  map,\n  first,\n} from 'rxjs';\nimport { Resource } from '../nodeboot-oauth2-starter.service';\nimport { ApplicationOptionsComponent } from './application-options/application-options.component';\nimport { CreateApplicationResourceComponent } from './create-application-resource/create-application-resource.component';\nimport { DeleteApplicationResourceComponent } from './delete-application-resource/delete-application-resource.component';\n\n@Component({\n  selector: 'lib-oauth-starter-application-resource',\n  templateUrl: './oauth-starter-application-resource.component.html',\n  styleUrls: ['./oauth-starter-application-resource.component.scss'],\n})\nexport class OauthStarterApplicationResourceComponent\n  implements OnInit, OnDestroy, AfterViewInit\n{\n  resources!: Resource[];\n  errorMessage!: string | undefined;\n  displayedColumns: string[] = [\n    'id',\n    'applicationResourceName',\n    'options',\n    'delete',\n  ];\n\n  masterResources = [\n    'OAUTH2_global',\n    'OAUTH2_user',\n    'OAUTH2_client',\n    'OAUTH2_application',\n    'OAUTH2_role',\n    'OAUTH2_option',\n  ];\n\n  resultsLength = 0;\n  isLoadingResults = true;\n\n  reload = new BehaviorSubject<number>(0);\n\n  userDataSubscription!: Subscription;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private nbService: NodebootOauth2StarterService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnDestroy(): void {\n    this.userDataSubscription?.unsubscribe();\n    this.sort.sortChange.complete();\n  }\n\n  ngAfterViewInit(): void {\n    this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\n    this.userDataSubscription = merge(\n      this.sort.sortChange,\n      this.paginator.page,\n      this.reload\n    )\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.errorMessage = undefined;\n          this.isLoadingResults = true;\n          return this.nbService!.getResources(\n            this.paginator.pageIndex,\n            this.sort.direction\n          ).pipe(\n            catchError((err) => {\n              if (err.error) {\n                this.errorMessage = err.error.message;\n              } else {\n                this.errorMessage = 'Unknown Error';\n              }\n              return of(null);\n            })\n          );\n        }),\n        map((data) => {\n          this.isLoadingResults = false;\n          if (data === null) {\n            return [];\n          }\n          this.resultsLength = data.content?.totalItems || 0;\n          return data.content?.items || [];\n        })\n      )\n      .subscribe((data) => {\n        this.resources = data;\n      });\n  }\n\n  ngOnInit(): void {}\n\n  openCreateAppResourceDialog() {\n    const createResourceOptionsDialogRef = this.dialog.open(\n      CreateApplicationResourceComponent,\n      {\n        width: '600px',\n        maxHeight: '70vh',\n      }\n    );\n\n    createResourceOptionsDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openDeleteResourceDialog(resource: Resource) {\n    const deleteResourceOptionsDialogRef = this.dialog.open(\n      DeleteApplicationResourceComponent,\n      {\n        width: '600px',\n        maxHeight: '70vh',\n        data: resource,\n      }\n    );\n\n    deleteResourceOptionsDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n\n  openOptionsDialog(resource: Resource) {\n    const updateResourceOptionsDialogRef = this.dialog.open(\n      ApplicationOptionsComponent,\n      {\n        width: '600px',\n        maxHeight: '70vh',\n        data: resource,\n      }\n    );\n\n    updateResourceOptionsDialogRef\n      .afterClosed()\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.reload.next(this.reload.value + 1);\n          }\n        },\n      });\n  }\n}\n","<div class=\"role-container\">\n  <div class=\"role-head\">\n    <h1 class=\"role-title\">Applications Resources</h1>\n    <span class=\"separator\"></span>\n    <button\n      (click)=\"openCreateAppResourceDialog()\"\n      color=\"accent\"\n      mat-flat-button\n    >\n      Add Resource\n    </button>\n  </div>\n  <div class=\"role-body\">\n    <div class=\"container-table mat-elevation-z8\">\n      <div class=\"loading-shade\" *ngIf=\"isLoadingResults\">\n        <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n      </div>\n      <div class=\"example-table-container\">\n        <table\n          mat-table\n          [dataSource]=\"resources\"\n          class=\"user-table\"\n          matSort\n          matSortActive=\"id\"\n          matSortDisableClear\n          matSortDirection=\"asc\"\n        >\n          <ng-container matColumnDef=\"id\">\n            <th mat-sort-header mat-header-cell *matHeaderCellDef>id</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"applicationResourceName\">\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let row\">\n              {{ row.applicationResourceName }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"options\">\n            <th mat-header-cell *matHeaderCellDef>Resource Options</th>\n            <td class=\"roles-column\" mat-cell *matCellDef=\"let row\">\n              <button\n                [disabled]=\"\n                  masterResources.indexOf(row.applicationResourceName) !== -1\n                \"\n                (click)=\"openOptionsDialog(row)\"\n                mat-stroked-button\n              >\n                Options\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td class=\"actions-column\" mat-cell *matCellDef=\"let row\">\n              <button\n                color=\"warn\"\n                [disabled]=\"\n                  masterResources.indexOf(row.applicationResourceName) !== -1\n                \"\n                mat-stroked-button\n                (click)=\"openDeleteResourceDialog(row)\"\n              >\n                Delete Resource\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n      </div>\n\n      <mat-paginator\n        [length]=\"resultsLength\"\n        [pageSize]=\"20\"\n        aria-label=\"Select page of GitHub search results\"\n      ></mat-paginator>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-revoke-token',\n  templateUrl: './revoke-token.component.html',\n  styleUrls: ['./revoke-token.component.css']\n})\nexport class RevokeTokenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>revoke-token works!</p>\n","import { DeleteUserComponent } from './oauth-starter-users/delete-user/delete-user.component';\nimport { UpdateUserComponent } from './oauth-starter-users/update-user/update-user.component';\nimport { NgModule } from '@angular/core';\nimport { NodebootOauth2StarterComponent } from './nodeboot-oauth2-starter.component';\nimport { LibraryMaterials } from './material.module';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OauthStarterUsersComponent } from './oauth-starter-users/oauth-starter-users.component';\nimport { ViewUserRolesComponent } from './oauth-starter-users/view-user-roles/view-user-roles.component';\nimport { CreateUserComponent } from './oauth-starter-users/create-user/create-user.component';\nimport { AddUserRolesComponent } from './oauth-starter-users/add-user-roles/add-user-roles.component';\nimport { OauthStarterUserProfileComponent } from './oauth-starter-user-profile/oauth-starter-user-profile.component';\nimport { ClipboardModule } from 'ngx-clipboard';\nimport { OauthStarterRolesComponent } from './oauth-starter-roles/oauth-starter-roles.component';\nimport { DeleteRoleComponent } from './oauth-starter-roles/delete-role/delete-role.component';\nimport { OptionsComponent } from './oauth-starter-roles/options/options.component';\nimport { CreateRoleComponent } from './oauth-starter-roles/create-role/create-role.component';\nimport { OauthStarterClientComponent } from './oauth-starter-client/oauth-starter-client.component';\nimport { DeleteClientComponent } from './oauth-starter-client/delete-client/delete-client.component';\nimport { UpdateClientComponent } from './oauth-starter-client/update-client/update-client.component';\nimport { AddClientRolesComponent } from './oauth-starter-client/add-client-roles/add-client-roles.component';\nimport { ViewClientRolesComponent } from './oauth-starter-client/view-client-roles/view-client-roles.component';\nimport { ShowTokenComponent } from './oauth-starter-client/show-token/show-token.component';\nimport { CreateClientComponent } from './oauth-starter-client/create-client/create-client.component';\nimport { OauthStarterApplicationResourceComponent } from './oauth-starter-application-resource/oauth-starter-application-resource.component';\nimport { DeleteApplicationResourceComponent } from './oauth-starter-application-resource/delete-application-resource/delete-application-resource.component';\nimport { ApplicationOptionsComponent } from './oauth-starter-application-resource/application-options/application-options.component';\nimport { CreateApplicationResourceComponent } from './oauth-starter-application-resource/create-application-resource/create-application-resource.component';\nimport { ChangePasswordComponent } from './oauth-starter-user-profile/change-password/change-password.component';\nimport { ShowNewTokenComponent } from './oauth-starter-client/show-new-token/show-new-token.component';\nimport { ShowSecretComponent } from './oauth-starter-client/show-secret/show-secret.component';\nimport { RevokeTokenComponent } from './oauth-starter-client/revoke-token/revoke-token.component';\n\n@NgModule({\n  declarations: [\n    NodebootOauth2StarterComponent,\n    OauthStarterUsersComponent,\n    OauthStarterUserProfileComponent,\n    ViewUserRolesComponent,\n    CreateUserComponent,\n    UpdateUserComponent,\n    DeleteUserComponent,\n    AddUserRolesComponent,\n    OauthStarterRolesComponent,\n    DeleteRoleComponent,\n    OptionsComponent,\n    CreateRoleComponent,\n    OauthStarterClientComponent,\n    DeleteClientComponent,\n    UpdateClientComponent,\n    AddClientRolesComponent,\n    ViewClientRolesComponent,\n    ShowTokenComponent,\n    CreateClientComponent,\n    ChangePasswordComponent,\n    OauthStarterApplicationResourceComponent,\n    DeleteApplicationResourceComponent,\n    ApplicationOptionsComponent,\n    CreateApplicationResourceComponent,\n    ShowNewTokenComponent,\n    ShowSecretComponent,\n    RevokeTokenComponent,\n  ],\n  imports: [\n    LibraryMaterials,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    ClipboardModule,\n  ],\n  exports: [\n    NodebootOauth2StarterComponent,\n    OauthStarterUsersComponent,\n    OauthStarterUserProfileComponent,\n    OauthStarterRolesComponent,\n    OauthStarterClientComponent,\n    OauthStarterApplicationResourceComponent,\n  ],\n})\nexport class NodebootOauth2StarterModule {}\n","/*\n * Public API Surface of nodeboot-oauth2-starter\n */\n\nexport * from './lib/nodeboot-oauth2-starter.service';\nexport * from './lib/nodeboot-oauth2-starter.component';\nexport * from './lib/nodeboot-oauth2-starter.module';\nexport * from './lib/oauth-starter-users/oauth-starter-users.component';\nexport * from './lib/oauth-starter-user-profile/oauth-starter-user-profile.component';\nexport * from './lib/oauth-starter-roles/oauth-starter-roles.component';\nexport * from './lib/oauth-starter-client/oauth-starter-client.component';\nexport * from './lib/oauth-starter-application-resource/oauth-starter-application-resource.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.NodebootOauth2StarterService","i1","i4","i2","i7","i5","i6","i3.NodebootOauth2StarterService","i8","i9","i10","i2.NodebootOauth2StarterService","i3"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAOa,4BAA4B,CAAA;IAUvC,WACU,CAAA,IAAgB,EAExB,aAEC,EAAA;QAJO,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;AAMxB,QAAA,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,GAAG,GAAG,YAAY,CAAC;QACpD,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,GAAG,GAAG,YAAY,CAAC;QACpD,IAAI,CAAC,eAAe,GAAG,aAAa,CAAC,GAAG,GAAG,gBAAgB,CAAC;QAC5D,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC,GAAG,GAAG,cAAc,CAAC;QACxD,IAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC,GAAG,GAAG,oBAAoB,CAAC;KACpE;IAED,QAAQ,CAAC,SAAiB,EAAE,KAAa,EAAA;QACvC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CACF,IAAI,CAAC,WAAW;AACd,YAAA,CAAA,WAAA,EAAc,SAAS,CAAA,yBAAA,EAA4B,KAAK,CAAA,CAAE,CAC7D;AACA,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;AAED,IAAA,UAAU,CAAC,cAKV,EAAA;AACC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KACvE;AAED,IAAA,cAAc,CAAC,MAAc,EAAE,WAAmB,EAAE,WAAmB,EAAA;QACrE,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAI,CAAA,EAAA,MAAM,WAAW,EAAE;YAC7C,WAAW;YACX,WAAW;SACZ,CAAC;AACD,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;AAED,IAAA,eAAe,CACb,MAAc,EACd,KAAkB,EAClB,iBAA8B,EAAA;QAE9B,OAAO,IAAI,CAAC,IAAI;AACb,aAAA,GAAG,CAAC,CAAA,EAAG,IAAI,CAAC,WAAW,CAAI,CAAA,EAAA,MAAM,CAAO,KAAA,CAAA,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,CAAC;AACvE,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;AAED,IAAA,UAAU,CAAC,SAAiB,EAAA;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA,EAAG,IAAI,CAAC,WAAW,IAAI,SAAS,CAAA,CAAE,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAC3E;IAED,UAAU,CAAC,SAAiB,EAAE,UAA0B,EAAA;QACtD,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,CAAG,EAAA,IAAI,CAAC,WAAW,IAAI,SAAS,CAAA,CAAE,EAAE,UAAU,CAAC;AACnD,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;IAED,cAAc,GAAA;QACZ,OAAO,IAAI,CAAC,IAAI;AACb,aAAA,GAAG,CAAoB,CAAG,EAAA,IAAI,CAAC,WAAW,aAAa,CAAC;AACxD,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;IAED,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,IAAI;AACb,aAAA,GAAG,CAAa,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;AACjD,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;IAED,UAAU,CAAC,UAAkB,EAAE,aAAuC,EAAA;QACpE,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,UAAU,EAAE,aAAa,EAAE,CAAC;AACrD,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;AAED,IAAA,iBAAiB,CACf,MAAc,EACd,gBAA0C,EAC1C,qBAA+C,EAAA;QAE/C,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,CAAI,CAAA,EAAA,MAAM,aAAa,EAAE;AAC/C,YAAA,gBAAgB,EAAE,gBAAgB;AAClC,YAAA,qBAAqB,EAAE,qBAAqB;SAC7C,CAAC;AACD,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;AAED,IAAA,UAAU,CAAC,MAAc,EAAA;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,MAAM,CAAA,CAAE,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KACxE;IAED,QAAQ,CAAC,SAAiB,EAAE,KAAa,EAAA;QACvC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CACF,IAAI,CAAC,WAAW;AACd,YAAA,CAAA,WAAA,EAAc,SAAS,CAAA,yBAAA,EAA4B,KAAK,CAAA,CAAE,CAC7D;AACA,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;IAED,iBAAiB,GAAA;QACf,OAAO,IAAI,CAAC,IAAI;AACb,aAAA,GAAG,CAAe,IAAI,CAAC,eAAe,GAAG,aAAa,CAAC;AACvD,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;IAED,YAAY,CACV,SAAiB,EACjB,KAAa,EAAA;QAEb,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CACF,IAAI,CAAC,eAAe;AAClB,YAAA,CAAA,WAAA,EAAc,SAAS,CAAA,yBAAA,EAA4B,KAAK,CAAA,CAAE,CAC7D;AACA,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;AAED,IAAA,qBAAqB,CACnB,UAAkB,EAClB,kBAA4B,EAC5B,uBAAiC,EAAA;QAEjC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,IAAI,CAAC,eAAe,GAAG,CAAI,CAAA,EAAA,UAAU,aAAa,EAAE;AACvD,YAAA,sBAAsB,EAAE,kBAAkB;AAC1C,YAAA,2BAA2B,EAAE,uBAAuB;SACrD,CAAC;AACD,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;AAED,IAAA,cAAc,CAAC,UAAkB,EAAA;AAC/B,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,GAAG,CAAA,CAAA,EAAI,UAAU,CAAA,CAAE,CAAC,CAAC;KAClE;IAED,cAAc,CAAC,kBAA0B,EAAE,eAAuB,EAAA;QAChE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YAC1C,kBAAkB;YAClB,eAAe;AAChB,SAAA,CAAC,CAAC;KACJ;IAED,UAAU,CACR,SAAiB,EACjB,KAAa,EAAA;QAEb,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CACF,IAAI,CAAC,aAAa;AAChB,YAAA,CAAA,WAAA,EAAc,SAAS,CAAA,yBAAA,EAA4B,KAAK,CAAA,CAAE,CAC7D;AACA,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;IAED,YAAY,CACV,gBAIC,EACD,QAAiB,EAAA;QAEjB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,aAAa,GAAG,aAAa,QAAQ,CAAA,CAAE,EAC5C,gBAAgB,CACjB;AACA,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;AAED,IAAA,YAAY,CAAC,SAAiB,EAAA;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA,EAAG,IAAI,CAAC,aAAa,IAAI,SAAS,CAAA,CAAE,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAC7E;AAED,IAAA,iBAAiB,CACf,QAAgB,EAChB,KAAkB,EAClB,iBAA8B,EAAA;QAE9B,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAI,CAAA,EAAA,QAAQ,OAAO,EAAE;YAC7C,KAAK;YACL,iBAAiB;SAClB,CAAC;AACD,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;IAED,YAAY,CAAC,SAAiB,EAAE,UAA4B,EAAA;QAC1D,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,CAAG,EAAA,IAAI,CAAC,aAAa,IAAI,SAAS,CAAA,CAAE,EAAE,UAAU,CAAC;AACrD,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;IAED,eAAe,GAAA;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAClE;AAED,IAAA,SAAS,CAAC,QAAgB,EAAA;QACxB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAsB,IAAI,CAAC,aAAa,GAAG,CAAI,CAAA,EAAA,QAAQ,SAAS,CAAC;AACpE,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;IAED,qBAAqB,CACnB,QAAgB,EAChB,UAAkB,EAAA;QAElB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CACF,IAAI,CAAC,aAAa,GAAG,CAAI,CAAA,EAAA,QAAQ,YAAY,EAC7C;YACE,UAAU;SACX,CACF;AACA,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;IAED,mBAAmB,CACjB,QAAgB,EAChB,UAAkB,EAAA;QAElB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CACF,IAAI,CAAC,aAAa,GAAG,CAAI,CAAA,EAAA,QAAQ,kCAAkC,EACnE;YACE,UAAU;SACX,CACF;AACA,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;IAED,kBAAkB,CAAC,QAAgB,EAAE,MAAe,EAAA;QAClD,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAgB,IAAI,CAAC,aAAa,GAAG,CAAI,CAAA,EAAA,QAAQ,SAAS,EAAE;YAC9D,MAAM;SACP,CAAC;AACD,aAAA,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAClB;AAED,IAAA,IAAI,MAAM,GAAA;AACR,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC;KAC/B;;AAjQU,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,4BAA4B,4CAY7B,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAZd,4BAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,4BAA4B,cAF3B,MAAM,EAAA,CAAA,CAAA;2FAEP,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBAHxC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;0BAaI,MAAM;2BAAC,eAAe,CAAA;;;MCZd,8BAA8B,CAAA;AAGzC,IAAA,WAAA,CAAoB,SAAuC,EAAA;QAAvC,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;KACxC;AAED,IAAA,QAAQ,MAAW;;2HAPR,8BAA8B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,4BAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA9B,8BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,8BAA8B,uGCP3C,EAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,CAAA;2FDOa,8BAA8B,EAAA,UAAA,EAAA,CAAA;kBAL1C,SAAS;+BACE,6BAA6B,EAAA,QAAA,EAAA,EAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA;gHAM9B,SAAS,EAAA,CAAA;sBAAjB,KAAK;;;MEGK,mBAAmB,CAAA;AAG9B,IAAA,WAAA,CACS,SAA4C,EAC3C,SAAuC,EACf,IAAU,EAAA;QAFnC,IAAS,CAAA,SAAA,GAAT,SAAS,CAAmC;QAC3C,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QACf,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAM;KACxC;AAEJ,IAAA,QAAQ,MAAW;IAEnB,MAAM,GAAA;AACJ,QAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;AACnC,QAAA,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC;AACvD,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;AACb,gBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;gBACpC,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;aACF;YACD,IAAI,EAAE,MAAK;AACT,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC5B;AACF,SAAA,CAAC,CAAC;KACJ;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;;AA9BU,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,yFAMpB,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AANd,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,uDCZhC,qmBA0BA,EAAA,MAAA,EAAA,CAAA,yIAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDda,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;+BACE,iBAAiB,EAAA,QAAA,EAAA,qmBAAA,EAAA,MAAA,EAAA,CAAA,yIAAA,CAAA,EAAA,CAAA;;0BAUxB,MAAM;2BAAC,eAAe,CAAA;;;MEJd,mBAAmB,CAAA;AAI9B,IAAA,WAAA,CACU,WAA+B,EAChC,SAA4C,EAC3C,SAAuC,EACf,IAAU,EAAA;QAHlC,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;QAChC,IAAS,CAAA,SAAA,GAAT,SAAS,CAAmC;QAC3C,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QACf,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAM;QAE1C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAC3C,YAAA,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAC5B,IAAI,CAAC,IAAI,EACT,UAAU,CAAC,OAAO,CAAC;AACjB,gBAAA,UAAU,CAAC,QAAQ;AACnB,gBAAA,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AACvB,gBAAA,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;AACxB,gBAAA,UAAU,CAAC,OAAO,CAAC,yBAAyB,CAAC;AAC9C,aAAA,CAAC,CACH;AACF,SAAA,CAAC,CAAC;KACJ;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;AAED,IAAA,UAAU,CAAC,cAA8B,EAAA;AACvC,QAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;AACnC,QAAA,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC,SAAS,CAAC;AACvE,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;AACb,gBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;gBACpC,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;aACF;YACD,IAAI,EAAE,MAAK;AACT,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC5B;AACF,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,QAAQ,MAAW;;AA5CR,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,2HAQpB,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AARd,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,uDCdhC,y7BAiCA,EAAA,MAAA,EAAA,CAAA,6fAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDnBa,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;+BACE,iBAAiB,EAAA,QAAA,EAAA,y7BAAA,EAAA,MAAA,EAAA,CAAA,6fAAA,CAAA,EAAA,CAAA;;0BAYxB,MAAM;2BAAC,eAAe,CAAA;;;MEqBd,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,YArBzB,gBAAgB;QAChB,aAAa;QACb,eAAe;QACf,gBAAgB;QAChB,aAAa;QACb,iBAAiB;QACjB,kBAAkB;QAClB,cAAc;QACd,eAAe;QACf,cAAc;QACd,aAAa;QACb,aAAa;QACb,kBAAkB;QAClB,wBAAwB;QACxB,eAAe;QACf,aAAa;QACb,kBAAkB;QAClB,gBAAgB;QAChB,iBAAiB,CAAA,EAAA,CAAA,CAAA;AAGR,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,YArBzB,gBAAgB;QAChB,aAAa;QACb,eAAe;QACf,gBAAgB;QAChB,aAAa;QACb,iBAAiB;QACjB,kBAAkB;QAClB,cAAc;QACd,eAAe;QACf,cAAc;QACd,aAAa;QACb,aAAa;QACb,kBAAkB;QAClB,wBAAwB;QACxB,eAAe;QACf,aAAa;QACb,kBAAkB;QAClB,gBAAgB;QAChB,iBAAiB,CAAA,EAAA,CAAA,CAAA;2FAGR,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAvB5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,gBAAgB;wBAChB,aAAa;wBACb,eAAe;wBACf,gBAAgB;wBAChB,aAAa;wBACb,iBAAiB;wBACjB,kBAAkB;wBAClB,cAAc;wBACd,eAAe;wBACf,cAAc;wBACd,aAAa;wBACb,aAAa;wBACb,kBAAkB;wBAClB,wBAAwB;wBACxB,eAAe;wBACf,aAAa;wBACb,kBAAkB;wBAClB,gBAAgB;wBAChB,iBAAiB;AAClB,qBAAA;AACF,iBAAA,CAAA;;;MCjCY,sBAAsB,CAAA;IAGjC,WACS,CAAA,SAA+C,EACtB,IAAU,EAAA;QADnC,IAAS,CAAA,SAAA,GAAT,SAAS,CAAsC;QACtB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAM;QAE1C,IAAI,CAAC,SAAS,GAAG,CAAA,EAAG,IAAI,CAAC,IAAI,QAAQ,CAAC;KACvC;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;AACD,IAAA,QAAQ,MAAW;;AAbR,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,gDAKvB,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AALd,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,sBAAsB,2DCTnC,2pCAmCA,EAAA,MAAA,EAAA,CAAA,2TAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,wDAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,4BAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAL,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,aAAA,EAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,gBAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FD1Ba,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBALlC,SAAS;+BACE,qBAAqB,EAAA,QAAA,EAAA,2pCAAA,EAAA,MAAA,EAAA,CAAA,2TAAA,CAAA,EAAA,CAAA;;0BAS5B,MAAM;2BAAC,eAAe,CAAA;;;MEDd,mBAAmB,CAAA;AAQ9B,IAAA,WAAA,CACS,SAA4C,EAC3C,WAA+B,EAC/B,SAAuC,EAAA;QAFxC,IAAS,CAAA,SAAA,GAAT,SAAS,CAAmC;QAC3C,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;QAC/B,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QAPjD,IAAK,CAAA,KAAA,GAAgB,EAAE,CAAC;QACxB,IAAS,CAAA,SAAA,GAAgB,EAAE,CAAC;QAC5B,IAAY,CAAA,YAAA,GAAG,IAAI,CAAC;AAOlB,QAAA,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC;AACvC,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;gBACb,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;AACD,gBAAA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;aACjB;AACD,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;gBACZ,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,OAAO,IAAI,EAAE,CAAC;aAChC;AACF,SAAA,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAC3C,YAAA,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAC5B,EAAE,EACF,UAAU,CAAC,OAAO,CAAC;AACjB,gBAAA,UAAU,CAAC,QAAQ;AACnB,gBAAA,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AACvB,gBAAA,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;AACxB,gBAAA,UAAU,CAAC,OAAO,CAAC,yBAAyB,CAAC;AAC9C,aAAA,CAAC,CACH;AACD,YAAA,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CACnC,EAAE,EACF,UAAU,CAAC,OAAO,CAAC;AACjB,gBAAA,UAAU,CAAC,QAAQ;AACnB,gBAAA,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AACvB,gBAAA,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC;AAC1B,aAAA,CAAC,CACH;AACD,YAAA,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAChC,EAAE,EACF,UAAU,CAAC,OAAO,CAAC;AACjB,gBAAA,UAAU,CAAC,QAAQ;AACnB,gBAAA,UAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC;AACpC,gBAAA,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AACvB,gBAAA,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;AACzB,aAAA,CAAC,CACH;AACD,YAAA,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAChC,EAAE,EACF,UAAU,CAAC,OAAO,CAAC;AACjB,gBAAA,UAAU,CAAC,QAAQ;AACnB,gBAAA,UAAU,CAAC,OAAO,CAChB,sDAAsD,CACvD;AACD,gBAAA,UAAU,CAAC,OAAO,CAChB,sDAAsD,CACvD;AACD,gBAAA,UAAU,CAAC,OAAO,CAChB,sDAAsD,CACvD;AACD,gBAAA,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AACxB,aAAA,CAAC,CACH;YACD,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;AACnC,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,QAAQ,MAAW;IAEnB,aAAa,GAAA;AACX,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC;QACzD,IAAI,CAAC,SAAS,EAAE;YACd,OAAO;AACR,SAAA;QACD,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;AAClC,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC/B,QAAA,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;KAC/C;AAED,IAAA,gBAAgB,CAAC,IAAe,EAAA;QAC9B,MAAM,SAAS,GAAG,IAAI,CAAC;QACvB,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACtD,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;KACvC;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;AAED,IAAA,UAAU,CAAC,cAKV,EAAA;AACC,QAAA,cAAc,CAAC,IAAI,GAAG,SAAS,CAAC;AAChC,QAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;AACnC,QAAA,IAAI,CAAC,SAAS;aACX,UAAU,CAAC,EAAE,GAAG,cAAc,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC;AACxD,aAAA,SAAS,CAAC;AACT,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;AACb,gBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;gBACpC,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;aACF;YACD,IAAI,EAAE,MAAK;AACT,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC5B;AACF,SAAA,CAAC,CAAC;KACN;;gHAxHU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAM,4BAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,uDCbhC,onGAwGA,EAAA,MAAA,EAAA,CAAA,6fAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAL,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAI,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAR,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAS,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FD3Fa,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;+BACE,iBAAiB,EAAA,QAAA,EAAA,onGAAA,EAAA,MAAA,EAAA,CAAA,6fAAA,CAAA,EAAA,CAAA;;;MEKhB,qBAAqB,CAAA;AAOhC,IAAA,WAAA,CACS,SAA8C,EAC7C,WAA+B,EAC/B,SAAuC,EACf,IAAU,EAAA;QAHnC,IAAS,CAAA,SAAA,GAAT,SAAS,CAAqC;QAC7C,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;QAC/B,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QACf,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAM;QAP5C,IAAK,CAAA,KAAA,GAAgB,EAAE,CAAC;QACxB,IAAS,CAAA,SAAA,GAAgB,EAAE,CAAC;AAQ1B,QAAA,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC;AACvC,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;gBACb,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;AACD,gBAAA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;aACjB;AACD,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;gBACZ,MAAM,cAAc,GAAG,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,KAAI;oBAChD,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAW,CAAC;AACtE,oBAAA,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE;AACpB,wBAAA,OAAO,CAAC,CAAC;AACV,qBAAA;AACD,oBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvB,oBAAA,OAAO,EAAE,CAAC;AACZ,iBAAC,CAAC,CAAC;AACH,gBAAA,IAAI,CAAC,KAAK,GAAG,cAAc,IAAI,EAAE,CAAC;aACnC;AACF,SAAA,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;AACnC,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,QAAQ,MAAW;IAEnB,aAAa,GAAA;AACX,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC;QACvD,IAAI,CAAC,SAAS,EAAE;YACd,OAAO;AACR,SAAA;QACD,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;AAClC,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC/B,QAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;KAC7C;AAED,IAAA,gBAAgB,CAAC,IAAe,EAAA;QAC9B,MAAM,SAAS,GAAG,IAAI,CAAC;QACvB,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACtD,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;KACvC;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;IAED,WAAW,GAAA;AACT,QAAA,MAAM,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAI;AACpD,YAAA,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,UAAU,EAAE,EAAE,CAAC,UAAU,EAAE,CAAC;AAClD,SAAC,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,SAAS;AACX,aAAA,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,kBAAkB,CAAC;AACxE,aAAA,SAAS,CAAC;AACT,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;gBACb,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;AACD,gBAAA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;aACjB;YACD,IAAI,EAAE,MAAK;AACT,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC5B;AACF,SAAA,CAAC,CAAC;KACN;;AAlFU,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,2HAWtB,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAXd,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,qBAAqB,0DCdlC,8iDAoDA,EAAA,MAAA,EAAA,CAAA,6fAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAR,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAI,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAH,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDtCa,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,SAAS;+BACE,oBAAoB,EAAA,QAAA,EAAA,8iDAAA,EAAA,MAAA,EAAA,CAAA,6fAAA,CAAA,EAAA,CAAA;;0BAe3B,MAAM;2BAAC,eAAe,CAAA;;;MEKd,0BAA0B,CAAA;IAerC,WACU,CAAA,SAAuC,EACxC,MAAiB,EAAA;QADhB,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QACxC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AAd1B,QAAA,IAAA,CAAA,gBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QAEzE,IAAa,CAAA,aAAA,GAAG,CAAC,CAAC;QAClB,IAAgB,CAAA,gBAAA,GAAG,IAAI,CAAC;AAExB,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,eAAe,CAAS,CAAC,CAAC,CAAC;KAUpC;IAEJ,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,oBAAoB,EAAE,WAAW,EAAE,CAAC;AACzC,QAAA,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;KACjC;IAED,eAAe,GAAA;QACb,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAC/B,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,SAAS,CAAC,IAAI,EACnB,IAAI,CAAC,MAAM,CACZ;aACE,IAAI,CACH,SAAS,CAAC,EAAE,CAAC,EACb,SAAS,CAAC,MAAK;AACb,YAAA,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;AAC9B,YAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,OAAO,IAAI,CAAC,SAAU,CAAC,QAAQ,CAC7B,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,IAAI,CAAC,IAAI,CAAC,SAAS,CACpB,CAAC,IAAI,CACJ,UAAU,CAAC,CAAC,GAAG,KAAI;gBACjB,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;AACD,gBAAA,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;aACjB,CAAC,CACH,CAAC;AACJ,SAAC,CAAC,EACF,GAAG,CAAC,CAAC,IAAI,KAAI;AACX,YAAA,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,IAAI,KAAK,IAAI,EAAE;AACjB,gBAAA,OAAO,EAAE,CAAC;AACX,aAAA;YACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,EAAE,UAAU,IAAI,CAAC,CAAC;AACnD,YAAA,OAAO,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE,CAAC;AACnC,SAAC,CAAC,CACH;AACA,aAAA,SAAS,CAAC,CAAC,IAAI,KAAI;AAClB,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACpB,SAAC,CAAC,CAAC;KACN;;IAID,oBAAoB,GAAA;QAClB,MAAM,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE;AAChE,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,SAAS,EAAE,MAAM;AAClB,SAAA,CAAC,CAAC;QACH,mBAAmB;AAChB,aAAA,WAAW,EAAE;aACb,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,aAAA,SAAS,CAAC;AACT,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;AACZ,gBAAA,IAAI,GAAG,EAAE;AACP,oBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACzC,iBAAA;aACF;AACF,SAAA,CAAC,CAAC;KACN;AAED,IAAA,mBAAmB,CAAC,IAAU,EAAA;AAC5B,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE;AACvC,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,SAAS,EAAE,MAAM;AACjB,YAAA,IAAI,EAAE,IAAI;AACX,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,oBAAoB,CAAC,IAAU,EAAA;QAC7B,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE;AACjE,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,SAAS,EAAE,MAAM;AACjB,YAAA,IAAI,EAAE,IAAI;AACX,SAAA,CAAC,CAAC;QAEH,oBAAoB;AACjB,aAAA,WAAW,EAAE;aACb,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,aAAA,SAAS,CAAC;AACT,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;AACZ,gBAAA,IAAI,GAAG,EAAE;AACP,oBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACzC,iBAAA;aACF;AACF,SAAA,CAAC,CAAC;KACN;AAED,IAAA,qBAAqB,CAAC,IAAU,EAAA;QAC9B,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE;AACnE,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,SAAS,EAAE,MAAM;AACjB,YAAA,IAAI,EAAE,IAAI;AACX,SAAA,CAAC,CAAC;QAEH,oBAAoB;AACjB,aAAA,WAAW,EAAE;aACb,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,aAAA,SAAS,CAAC;AACT,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;AACZ,gBAAA,IAAI,GAAG,EAAE;AACP,oBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACzC,iBAAA;aACF;AACF,SAAA,CAAC,CAAC;KACN;AAED,IAAA,oBAAoB,CAAC,IAAU,EAAA;QAC7B,MAAM,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE;AAChE,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,SAAS,EAAE,MAAM;AACjB,YAAA,IAAI,EAAE,IAAI;AACX,SAAA,CAAC,CAAC;QAEH,mBAAmB;AAChB,aAAA,WAAW,EAAE;aACb,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,aAAA,SAAS,CAAC;AACT,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;AACZ,gBAAA,IAAI,GAAG,EAAE;AACP,oBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACzC,iBAAA;aACF;AACF,SAAA,CAAC,CAAC;KACN;;uHAnJU,0BAA0B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAD,4BAAA,EAAA,EAAA,EAAA,KAAA,EAAAG,IAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,0BAA0B,EAY1B,QAAA,EAAA,yBAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,YAAY,EACZ,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,MAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,OAAO,gDC3CpB,2nGA0FA,EAAA,MAAA,EAAA,CAAA,qrBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,uBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,oCAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,eAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,qBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,OAAA,EAAA,uBAAA,EAAA,cAAA,CAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,mCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,aAAA,EAAA,MAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FD5Da,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBALtC,SAAS;+BACE,yBAAyB,EAAA,QAAA,EAAA,2nGAAA,EAAA,MAAA,EAAA,CAAA,qrBAAA,CAAA,EAAA,CAAA;0IAgBV,SAAS,EAAA,CAAA;sBAAjC,SAAS;uBAAC,YAAY,CAAA;gBACH,IAAI,EAAA,CAAA;sBAAvB,SAAS;uBAAC,OAAO,CAAA;;;ME9BP,uBAAuB,CAAA;AAOlC,IAAA,WAAA,CACU,WAA+B,EAChC,SAAgD,EAC/C,SAAuC,EACf,IAAU,EAAA;QAHlC,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;QAChC,IAAS,CAAA,SAAA,GAAT,SAAS,CAAuC;QAC/C,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QACf,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAM;QAP5C,IAAe,CAAA,eAAA,GAAG,IAAI,CAAC;QACvB,IAAe,CAAA,eAAA,GAAG,IAAI,CAAC;QAQrB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAC/C,YAAA,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CACnC,EAAE,EACF,UAAU,CAAC,OAAO,CAAC;AACjB,gBAAA,UAAU,CAAC,QAAQ;AACnB,gBAAA,UAAU,CAAC,OAAO,CAChB,sDAAsD,CACvD;AACD,gBAAA,UAAU,CAAC,OAAO,CAChB,sDAAsD,CACvD;AACD,gBAAA,UAAU,CAAC,OAAO,CAChB,sDAAsD,CACvD;AACD,gBAAA,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AACxB,aAAA,CAAC,CACH;AACD,YAAA,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CACnC,EAAE,EACF,UAAU,CAAC,OAAO,CAAC;AACjB,gBAAA,UAAU,CAAC,QAAQ;AACnB,gBAAA,UAAU,CAAC,OAAO,CAChB,sDAAsD,CACvD;AACD,gBAAA,UAAU,CAAC,OAAO,CAChB,sDAAsD,CACvD;AACD,gBAAA,UAAU,CAAC,OAAO,CAChB,sDAAsD,CACvD;AACD,gBAAA,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AACxB,aAAA,CAAC,CACH;AACF,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,QAAQ,MAAW;IAEnB,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;AAED,IAAA,cAAc,CAAC,kBAGd,EAAA;AACC,QAAA,IAAI,CAAC,SAAS;AACX,aAAA,cAAc,CACb,IAAI,CAAC,IAAI,CAAC,EAAE,EACZ,kBAAkB,CAAC,WAAW,EAC9B,kBAAkB,CAAC,WAAW,CAC/B;AACA,aAAA,SAAS,CAAC;AACT,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;AACb,gBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;gBACpC,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;aACF;YACD,IAAI,EAAE,MAAK;AACT,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC5B;AACF,SAAA,CAAC,CAAC;KACN;;AA9EU,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,2HAWxB,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAXd,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,uBAAuB,2DCbpC,ypEA0EA,EAAA,MAAA,EAAA,CAAA,+CAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FD7Da,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,SAAS;+BACE,qBAAqB,EAAA,QAAA,EAAA,ypEAAA,EAAA,MAAA,EAAA,CAAA,+CAAA,CAAA,EAAA,CAAA;;0BAe5B,MAAM;2BAAC,eAAe,CAAA;;;MEVd,gCAAgC,CAAA;IAG3C,WACU,CAAA,SAAuC,EACxC,MAAiB,EAAA;QADhB,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QACxC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AAExB,QAAA,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC;AACxC,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;AACZ,gBAAA,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,OAAe,CAAC;aACjC;AACF,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,QAAQ,MAAW;IAEnB,wBAAwB,GAAA;AACtB,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE;AACxC,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,SAAS,EAAE,MAAM;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;AAChB,SAAA,CAAC,CAAC;KACJ;;6HAtBU,gCAAgC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAD,4BAAA,EAAA,EAAA,EAAA,KAAA,EAAAG,IAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhC,gCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gCAAgC,sECd7C,kpCAsCA,EAAA,MAAA,EAAA,CAAA,2TAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,wDAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAE,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,aAAA,EAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,gBAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDxBa,gCAAgC,EAAA,UAAA,EAAA,CAAA;kBAL5C,SAAS;+BACE,gCAAgC,EAAA,QAAA,EAAA,kpCAAA,EAAA,MAAA,EAAA,CAAA,2TAAA,CAAA,EAAA,CAAA;;;MEK/B,mBAAmB,CAAA;AAW9B,IAAA,WAAA,CACU,WAA+B,EAC/B,SAAuC,EACxC,SAA4C,EAAA;QAF3C,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;QAC/B,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QACxC,IAAS,CAAA,SAAA,GAAT,SAAS,CAAmC;QAXrD,IAAO,CAAA,OAAA,GAAe,EAAE,CAAC;QACzB,IAAe,CAAA,eAAA,GAAa,EAAE,CAAC;QAC/B,IAAa,CAAA,aAAA,GAA6B,EAAE,CAAC;AAC7C,QAAA,IAAA,CAAA,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;AAUvB,QAAA,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC;AAC3C,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;gBACb,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;AACD,gBAAA,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;aACnB;AACD,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;gBACZ,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,IAAI,EAAE,CAAC;aAClC;AACF,SAAA,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAC3C,YAAA,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAClC,EAAE,EACF,UAAU,CAAC,OAAO,CAAC;AACjB,gBAAA,UAAU,CAAC,QAAQ;AACnB,gBAAA,UAAU,CAAC,OAAO,CAAC,uBAAuB,CAAC;AAC3C,gBAAA,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AACvB,gBAAA,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;AACzB,aAAA,CAAC,CACH;YACD,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YACtC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;AACvC,SAAA,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,cAAc;aAC5C,GAAG,CAAC,UAAU,CAAC;cACd,YAAY,CAAC,SAAS,CAAC;AACvB,YAAA,IAAI,EAAE,CAAC,KAAa,KAAI;AACtB,gBAAA,IAAI,CAAC,eAAe;AAClB,oBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,uBAAuB,KAAK,KAAK,CAAC;0BACzD,OAAO,IAAI,EAAE,CAAC;AACpB,gBAAA,IAAI,CAAC,cAAc;qBAChB,GAAG,CAAC,UAAU,CAAC;sBACd,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;aAC/C;AACF,SAAA,CAAiB,CAAC;AAErB,QAAA,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,cAAc;aAC5C,GAAG,CAAC,UAAU,CAAC;AAChB,cAAE,YAAY,CAAC,SAAS,CAAC,CAAC,WAAqB,KAAI;AACjD,YAAA,MAAM,oBAAoB,GACxB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;YAEvE,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,oBAAoB,CAAC,MAAM,KAAK,CAAC;gBAC/D,OAAO;AAET,YAAA,IAAI,cAAsB,CAAC;AAE3B,YAAA,IAAI,oBAAoB,CAAC,MAAM,KAAK,CAAC,EAAE;AACrC,gBAAA,cAAc,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;AAChC,gBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;gBAC1C,OAAO;AACR,aAAA;AAED,YAAA,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;AAC5B,gBAAA,cAAc,GAAG,oBAAoB,CAAC,CAAC,CAAC,CAAC;AACzC,gBAAA,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;gBAC3C,OAAO;AACR,aAAA;AAED,YAAA,IACE,oBAAoB,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,GAAG;AACvC,gBAAA,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,GAAG,EAC9B;AACA,gBAAA,cAAc,GAAG,oBAAoB,CAAC,CAAC,CAAC,CAAC;AACzC,gBAAA,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;gBAC3C,OAAO;AACR,aAAA;YAED,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,GAAG,EAAE;AAClC,gBAAA,cAAc,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;AAChC,gBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;gBAC1C,OAAO;AACR,aAAA;AAED,YAAA,IAAI,oBAAoB,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,EAAE;AACpD,gBAAA,KAAK,MAAM,OAAO,IAAI,oBAAoB,EAAE;AAC1C,oBAAA,MAAM,cAAc,GAAG,WAAW,CAAC,SAAS,CAC1C,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,CAC3B,CAAC;AAEF,oBAAA,IAAI,cAAc,KAAK,CAAC,CAAC,EAAE;wBACzB,cAAc,GAAG,OAAO,CAAC;AACzB,wBAAA,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;wBAC3C,MAAM;AACP,qBAAA;AACF,iBAAA;gBAED,OAAO;AACR,aAAA;AAED,YAAA,KAAK,MAAM,KAAK,IAAI,WAAW,EAAE;AAC/B,gBAAA,MAAM,cAAc,GAAG,oBAAoB,CAAC,SAAS,CACnD,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CACzB,CAAC;AAEF,gBAAA,IAAI,cAAc,KAAK,CAAC,CAAC,EAAE;oBACzB,cAAc,GAAG,KAAK,CAAC;AACvB,oBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;oBAC1C,MAAM;AACP,iBAAA;AACF,aAAA;AACH,SAAC,CAAiB,CAAC;KACtB;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,oBAAoB,EAAE,WAAW,EAAE,CAAC;AACzC,QAAA,IAAI,CAAC,oBAAoB,EAAE,WAAW,EAAE,CAAC;KAC1C;AAED,IAAA,QAAQ,MAAW;AAEnB,IAAA,UAAU,CAAC,QAA8D,EAAA;AACvE,QAAA,IAAI,CAAC,SAAS;aACX,UAAU,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC;AACnD,aAAA,SAAS,CAAC;AACT,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;AACb,gBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;gBACpC,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;aACF;YACD,IAAI,EAAE,MAAK;AACT,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC5B;AACF,SAAA,CAAC,CAAC;KACN;IAED,cAAc,CAAC,QAAiB,EAAE,KAAa,EAAA;;;AAG7C,QAAA,IACE,KAAK,CAAC,OAAO,KAAK,GAAG;YACrB,QAAQ;YACR,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,MAAM;AAC/C,gBAAA,IAAI,CAAC,eAAe,CAAC,MAAM,EAC7B;AACA,YAAA,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACpE,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,GAAG;AAC/D,gBAAA,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;aACxB,CAAC;AACH,SAAA;aAAM,IAAI,KAAK,CAAC,OAAO,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE;YAC7C,MAAM,eAAe,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;YAClD,eAAe,CAAC,KAAK,EAAE,CAAC;AACxB,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC;AAC5D,gBAAA,eAAe,CAAC;AACnB,SAAA;AAAM,aAAA,IAAI,QAAQ,EAAE;AACnB,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC;gBAC5D,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC;AAC9C,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AAC3D,gBAAA,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC;AACvE,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC;oBAC5D,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC;AAC9C,aAAA;AACF,SAAA;KACF;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;;gHArLU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAL,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAU,4BAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,uDCfhC,i+DAmEA,EAAA,MAAA,EAAA,CAAA,+CAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAV,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,OAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,OAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAI,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAX,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAS,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDpDa,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;+BACE,iBAAiB,EAAA,QAAA,EAAA,i+DAAA,EAAA,MAAA,EAAA,CAAA,+CAAA,CAAA,EAAA,CAAA;;;MEChB,mBAAmB,CAAA;AAG9B,IAAA,WAAA,CACS,SAA4C,EAC3C,SAAuC,EACf,IAAU,EAAA;QAFnC,IAAS,CAAA,SAAA,GAAT,SAAS,CAAmC;QAC3C,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QACf,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAM;KACxC;AAEJ,IAAA,QAAQ,MAAW;IAEnB,MAAM,GAAA;AACJ,QAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;AACnC,QAAA,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;AAChD,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;AACb,gBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;gBACpC,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;aACF;YACD,IAAI,EAAE,MAAK;AACT,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC5B;AACF,SAAA,CAAC,CAAC;KACJ;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;;AA9BU,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,yFAMpB,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AANd,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,uDCZhC,2mBA0BA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAT,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDda,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;+BACE,iBAAiB,EAAA,QAAA,EAAA,2mBAAA,EAAA,CAAA;;0BAUxB,MAAM;2BAAC,eAAe,CAAA;;;MEFd,gBAAgB,CAAA;AAa3B,IAAA,WAAA,CACS,SAAyC,EAChB,IAAU,EAClC,SAAuC,EACvC,WAA+B,EAAA;QAHhC,IAAS,CAAA,SAAA,GAAT,SAAS,CAAgC;QAChB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAM;QAClC,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QACvC,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;QAdzC,IAAO,CAAA,OAAA,GAAe,EAAE,CAAC;QACzB,IAAe,CAAA,eAAA,GAAa,EAAE,CAAC;QAC/B,IAAa,CAAA,aAAA,GAA6B,EAAE,CAAC;QAC7C,IAAqB,CAAA,qBAAA,GAA6B,EAAE,CAAC;AACrD,QAAA,IAAA,CAAA,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;AACzB,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC;QAW/B,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AACxC,YAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,uBAAuB,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;AACzE,YAAA,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,uBAAuB,CAAC,GAAG;gBAC3D,GAAG,MAAM,CAAC,OAAO;aAClB,CAAC;AACH,SAAA;AAED,QAAA,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC;AAC3C,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;gBACb,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;AACD,gBAAA,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;aACnB;AACD,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;gBACZ,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,IAAI,EAAE,CAAC;aAClC;AACF,SAAA,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YACtC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;AACvC,SAAA,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,WAAW;aACzC,GAAG,CAAC,UAAU,CAAC;cACd,YAAY,CAAC,SAAS,CAAC;AACvB,YAAA,IAAI,EAAE,CAAC,KAAK,KAAI;AACd,gBAAA,IAAI,CAAC,eAAe;AAClB,oBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,uBAAuB,KAAK,KAAK,CAAC;0BACzD,OAAO,IAAI,EAAE,CAAC;AAEpB,gBAAA,IAAI,CAAC,WAAW;qBACb,GAAG,CAAC,UAAU,CAAC;AAChB,sBAAE,QAAQ,CACR,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,EAAE,GAAG,CAC9D,CAAC,GAAG,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAC7B,IAAI,EAAE,CACR,CAAC;aACL;AACF,SAAA,CAAiB,CAAC;AAErB,QAAA,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,WAAW;aACzC,GAAG,CAAC,UAAU,CAAC;AAChB,cAAE,YAAY,CAAC,SAAS,CAAC,CAAC,WAAqB,KAAI;AACjD,YAAA,MAAM,oBAAoB,GACxB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;YAEpE,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,oBAAoB,CAAC,MAAM,KAAK,CAAC;gBAC/D,OAAO;AAET,YAAA,IAAI,cAAsB,CAAC;AAE3B,YAAA,IAAI,oBAAoB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACrC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,gBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;gBAC1C,OAAO;AACR,aAAA;AAED,YAAA,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;AAC5B,gBAAA,cAAc,GAAG,oBAAoB,CAAC,CAAC,CAAC,CAAC;AACzC,gBAAA,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;gBAC3C,OAAO;AACR,aAAA;AAED,YAAA,IACE,oBAAoB,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,GAAG;AACvC,gBAAA,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,GAAG,EAC1C;AACA,gBAAA,cAAc,GAAG,oBAAoB,CAAC,CAAC,CAAC,CAAC;AACzC,gBAAA,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;gBAC3C,OAAO;AACR,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,GAAG,EAAE;gBAC9C,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,gBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;gBAC1C,OAAO;AACR,aAAA;AAED,YAAA,IAAI,oBAAoB,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,EAAE;AACpD,gBAAA,KAAK,MAAM,OAAO,IAAI,oBAAoB,EAAE;oBAC1C,MAAM,cAAc,GAAG,WAAW,CAAC,SAAS,CAC1C,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,CACvC,CAAC;AAEF,oBAAA,IAAI,cAAc,KAAK,CAAC,CAAC,EAAE;wBACzB,cAAc,GAAG,OAAO,CAAC;AACzB,wBAAA,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;wBAC3C,MAAM;AACP,qBAAA;AACF,iBAAA;gBAED,OAAO;AACR,aAAA;AAED,YAAA,KAAK,MAAM,KAAK,IAAI,WAAW,EAAE;gBAC/B,MAAM,cAAc,GAAG,oBAAoB,CAAC,SAAS,CACnD,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CACrC,CAAC;AAEF,gBAAA,IAAI,cAAc,KAAK,CAAC,CAAC,EAAE;AACzB,oBAAA,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACnC,oBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;oBAC1C,MAAM;AACP,iBAAA;AACF,aAAA;AACH,SAAC,CAAiB,CAAC;KACtB;AAED,IAAA,QAAQ,MAAW;IAEnB,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,oBAAoB,EAAE,WAAW,EAAE,CAAC;AACzC,QAAA,IAAI,CAAC,oBAAoB,EAAE,WAAW,EAAE,CAAC;KAC1C;IAED,cAAc,CAAC,QAAiB,EAAE,KAAa,EAAA;AAC7C,QAAA,IACE,KAAK,CAAC,OAAO,KAAK,GAAG;YACrB,QAAQ;YACR,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,MAAM;AAC5C,gBAAA,IAAI,CAAC,eAAe,CAAC,MAAM,EAC7B;AACA,YAAA,IAAI,CAAC,WAAW;iBACb,GAAG,CAAC,UAAU,CAAC;kBACd,QAAQ,CACR,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAC7D,CAAC;AACJ,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,GAAG;AAC5D,gBAAA,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;aACxB,CAAC;AACH,SAAA;aAAM,IAAI,KAAK,CAAC,OAAO,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE;YAC7C,MAAM,eAAe,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;YAClD,eAAe,CAAC,KAAK,EAAE,CAAC;AACxB,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC;AACzD,gBAAA,eAAe,CAAC;AACnB,SAAA;AAAM,aAAA,IAAI,QAAQ,EAAE;AACnB,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,GACzD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KACnC,CAAC,GAAG,CAAC,CAAC,SAAS,KAAI;AAClB,gBAAA,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AAC/B,aAAC,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AACxD,gBAAA,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC;AACpE,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,GACzD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KACnC,CAAC,GAAG,CAAC,CAAC,SAAS,KAAI;AAClB,oBAAA,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AAC/B,iBAAC,CAAC,CAAC;AACJ,aAAA;AACF,SAAA;KACF;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;IAED,aAAa,GAAA;AACX,QAAA,IAAI,CAAC,SAAS;AACX,aAAA,iBAAiB,CAChB,IAAI,CAAC,IAAI,CAAC,EAAE,EACZ,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,qBAAqB,CAC3B;AACA,aAAA,SAAS,CAAC;AACT,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;AACb,gBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;gBACpC,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;aACF;YACD,IAAI,EAAE,MAAK;AACT,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC5B;AACF,SAAA,CAAC,CAAC;KACN;;AAvMU,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,gDAejB,eAAe,EAAA,EAAA,EAAA,KAAA,EAAAS,4BAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,EAAA,CAAA,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAfd,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gBAAgB,mDChB7B,+nDAkDA,EAAA,MAAA,EAAA,CAAA,+CAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAV,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,OAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,OAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAI,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAW,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAH,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDlCa,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAL5B,SAAS;+BACE,aAAa,EAAA,QAAA,EAAA,+nDAAA,EAAA,MAAA,EAAA,CAAA,+CAAA,CAAA,EAAA,CAAA;;0BAmBpB,MAAM;2BAAC,eAAe,CAAA;;;MEFd,0BAA0B,CAAA;IAerC,WACU,CAAA,SAAuC,EACxC,MAAiB,EAAA;QADhB,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QACxC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;QAd1B,IAAgB,CAAA,gBAAA,GAAa,CAAC,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;QAEvE,IAAa,CAAA,aAAA,GAAG,CAAC,CAAC;QAClB,IAAgB,CAAA,gBAAA,GAAG,IAAI,CAAC;AAExB,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,eAAe,CAAS,CAAC,CAAC,CAAC;KAUpC;AAEJ,IAAA,QAAQ,MAAW;IAEnB,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,oBAAoB,EAAE,WAAW,EAAE,CAAC;AACzC,QAAA,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;KACjC;IAED,eAAe,GAAA;QACb,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAC/B,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,SAAS,CAAC,IAAI,EACnB,IAAI,CAAC,MAAM,CACZ;aACE,IAAI,CACH,SAAS,CAAC,EAAE,CAAC,EACb,SAAS,CAAC,MAAK;AACb,YAAA,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;AAC9B,YAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,OAAO,IAAI,CAAC,SAAS;AAClB,iBAAA,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;AACvD,iBAAA,IAAI,CACH,UAAU,CAAC,CAAC,GAAG,KAAI;gBACjB,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;AACD,gBAAA,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;aACjB,CAAC,CACH,CAAC;AACN,SAAC,CAAC,EACF,GAAG,CAAC,CAAC,IAAI,KAAI;AACX,YAAA,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,IAAI,KAAK,IAAI,EAAE;AACjB,gBAAA,OAAO,EAAE,CAAC;AACX,aAAA;YACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,EAAE,UAAU,IAAI,CAAC,CAAC;AACnD,YAAA,OAAO,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE,CAAC;AACnC,SAAC,CAAC,CACH;AACA,aAAA,SAAS,CAAC,CAAC,IAAI,KAAI;AAClB,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACpB,SAAC,CAAC,CAAC;KACN;IAED,oBAAoB,GAAA;QAClB,MAAM,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE;AAChE,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,SAAS,EAAE,MAAM;AAClB,SAAA,CAAC,CAAC;QACH,mBAAmB;AAChB,aAAA,WAAW,EAAE;aACb,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,aAAA,SAAS,CAAC;AACT,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;AACZ,gBAAA,IAAI,GAAG,EAAE;AACP,oBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACzC,iBAAA;aACF;AACF,SAAA,CAAC,CAAC;KACN;AAED,IAAA,iBAAiB,CAAC,IAAU,EAAA;QAC1B,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE;AAC9D,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,SAAS,EAAE,MAAM;AACjB,YAAA,IAAI,EAAE,IAAI;AACX,SAAA,CAAC,CAAC;QACH,oBAAoB;AACjB,aAAA,WAAW,EAAE;aACb,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,aAAA,SAAS,CAAC;AACT,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;AACZ,gBAAA,IAAI,GAAG,EAAE;AACP,oBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACzC,iBAAA;aACF;AACF,SAAA,CAAC,CAAC;KACN;AAED,IAAA,oBAAoB,CAAC,IAAU,EAAA;QAC7B,MAAM,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE;AAChE,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,SAAS,EAAE,MAAM;AACjB,YAAA,IAAI,EAAE,IAAI;AACX,SAAA,CAAC,CAAC;QACH,mBAAmB;AAChB,aAAA,WAAW,EAAE;aACb,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,aAAA,SAAS,CAAC;AACT,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;AACZ,gBAAA,IAAI,GAAG,EAAE;AACP,oBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACzC,iBAAA;aACF;AACF,SAAA,CAAC,CAAC;KACN;;uHArHU,0BAA0B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAT,4BAAA,EAAA,EAAA,EAAA,KAAA,EAAAG,IAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,0BAA0B,EAY1B,QAAA,EAAA,yBAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,YAAY,EACZ,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,MAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,OAAO,gDC1CpB,yhFA0EA,EAAA,MAAA,EAAA,CAAA,krBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,uBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,oCAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,eAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,qBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,OAAA,EAAA,uBAAA,EAAA,cAAA,CAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,mCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,aAAA,EAAA,MAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FD7Ca,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBALtC,SAAS;+BACE,yBAAyB,EAAA,QAAA,EAAA,yhFAAA,EAAA,MAAA,EAAA,CAAA,krBAAA,CAAA,EAAA,CAAA;0IAgBV,SAAS,EAAA,CAAA;sBAAjC,SAAS;uBAAC,YAAY,CAAA;gBACH,IAAI,EAAA,CAAA;sBAAvB,SAAS;uBAAC,OAAO,CAAA;;;ME7BP,mBAAmB,CAAA;AAM9B,IAAA,WAAA,CACU,SAAuC,EACxC,SAA4C,EACnB,MAAc,EAAA;QAFtC,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QACxC,IAAS,CAAA,SAAA,GAAT,SAAS,CAAmC;QACnB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QARhD,IAAI,CAAA,IAAA,GAAG,IAAI,CAAC;KASR;IAEJ,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,YAAY,EAAE,WAAW,EAAE,CAAC;KAClC;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;AACnC,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;AACrE,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;AACb,gBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;gBACpC,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;aACF;AACD,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;AACZ,gBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;gBACpC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC;aAC9C;AACF,SAAA,CAAC,CAAC;KACJ;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;;AApCU,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,yFASpB,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AATd,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,uDCbhC,62BA4BA,EAAA,MAAA,EAAA,CAAA,yLAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAQ,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAV,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,mCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,aAAA,EAAA,MAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAK,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDfa,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;+BACE,iBAAiB,EAAA,QAAA,EAAA,62BAAA,EAAA,MAAA,EAAA,CAAA,yLAAA,CAAA,EAAA,CAAA;;0BAaxB,MAAM;2BAAC,eAAe,CAAA;;;MEXd,uBAAuB,CAAA;AAOlC,IAAA,WAAA,CACS,SAAgD,EAC/C,WAA+B,EAC/B,SAAuC,EACf,MAAc,EAAA;QAHvC,IAAS,CAAA,SAAA,GAAT,SAAS,CAAuC;QAC/C,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;QAC/B,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QACf,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QAPhD,IAAK,CAAA,KAAA,GAAgB,EAAE,CAAC;QACxB,IAAS,CAAA,SAAA,GAAgB,EAAE,CAAC;AAQ1B,QAAA,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC;AACvC,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;gBACb,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;AACD,gBAAA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;aACjB;AACD,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;gBACZ,MAAM,cAAc,GAAG,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,KAAI;oBAChD,MAAM,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,CACtC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CACV,CAAC;AACZ,oBAAA,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE;AACpB,wBAAA,OAAO,CAAC,CAAC;AACV,qBAAA;AACD,oBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvB,oBAAA,OAAO,EAAE,CAAC;AACZ,iBAAC,CAAC,CAAC;AACH,gBAAA,IAAI,CAAC,KAAK,GAAG,cAAc,IAAI,EAAE,CAAC;aACnC;AACF,SAAA,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;AACnC,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,QAAQ,MAAW;IACnB,aAAa,GAAA;AACX,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC;QACvD,IAAI,CAAC,SAAS,EAAE;YACd,OAAO;AACR,SAAA;QACD,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;AAClC,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC/B,QAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;KAC7C;AAED,IAAA,gBAAgB,CAAC,IAAe,EAAA;QAC9B,MAAM,SAAS,GAAG,IAAI,CAAC;QACvB,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;AAC1E,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;KACvC;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;IAED,WAAW,GAAA;AACT,QAAA,MAAM,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAI;AACtD,YAAA,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,UAAU,EAAE,EAAE,CAAC,UAAU,EAAE,CAAC;AAClD,SAAC,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,SAAS;AACX,aAAA,iBAAiB,CAChB,IAAI,CAAC,MAAM,CAAC,SAAS,EACrB,IAAI,CAAC,SAAS,EACd,kBAAkB,CACnB;AACA,aAAA,SAAS,CAAC;AACT,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;gBACb,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;AACD,gBAAA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;aACjB;YACD,IAAI,EAAE,MAAK;AACT,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC5B;AACF,SAAA,CAAC,CAAC;KACN;;AAvFU,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,2HAWxB,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAXd,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,uBAAuB,4DCXpC,gjDAoDA,EAAA,MAAA,EAAA,CAAA,6fAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAP,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAI,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAH,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDzCa,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,SAAS;+BACE,sBAAsB,EAAA,QAAA,EAAA,gjDAAA,EAAA,MAAA,EAAA,CAAA,6fAAA,CAAA,EAAA,CAAA;;0BAe7B,MAAM;2BAAC,eAAe,CAAA;;;METd,qBAAqB,CAAA;AAQhC,IAAA,WAAA,CACS,SAA8C,EAC7C,WAA+B,EAC/B,SAAuC,EAAA;QAFxC,IAAS,CAAA,SAAA,GAAT,SAAS,CAAqC;QAC7C,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;QAC/B,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QAPjD,IAAK,CAAA,KAAA,GAAgB,EAAE,CAAC;QACxB,IAAS,CAAA,SAAA,GAAgB,EAAE,CAAC;QAC5B,IAAY,CAAA,YAAA,GAAG,IAAI,CAAC;AAOlB,QAAA,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC;AACvC,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;gBACb,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;AACD,gBAAA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;aACjB;AACD,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;gBACZ,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,OAAO,IAAI,EAAE,CAAC;aAChC;AACF,SAAA,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAC7C,YAAA,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAC5B,EAAE,EACF,UAAU,CAAC,OAAO,CAAC;AACjB,gBAAA,UAAU,CAAC,QAAQ;AACnB,gBAAA,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AACvB,gBAAA,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;AACxB,gBAAA,UAAU,CAAC,OAAO,CAAC,yBAAyB,CAAC;AAC9C,aAAA,CAAC,CACH;AACD,YAAA,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CACnC,EAAE,EACF,UAAU,CAAC,OAAO,CAAC;AACjB,gBAAA,UAAU,CAAC,QAAQ;AACnB,gBAAA,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AACvB,gBAAA,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC;AAC1B,aAAA,CAAC,CACH;AACD,YAAA,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAClC,EAAE,EACF,UAAU,CAAC,OAAO,CAAC;AACjB,gBAAA,UAAU,CAAC,QAAQ;AACnB,gBAAA,UAAU,CAAC,OAAO,CAAC,uBAAuB,CAAC;AAC3C,gBAAA,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AACvB,gBAAA,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;AACzB,aAAA,CAAC,CACH;YACD,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YAClC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC;AAC1C,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,QAAQ,MAAW;IAEnB,aAAa,GAAA;AACX,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC;QAC3D,IAAI,CAAC,SAAS,EAAE;YACd,OAAO;AACR,SAAA;QACD,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;AAClC,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC/B,QAAA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;KACjD;AAED,IAAA,gBAAgB,CAAC,IAAe,EAAA;QAC9B,MAAM,SAAS,GAAG,IAAI,CAAC;QACvB,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACtD,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;KACvC;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;AAED,IAAA,YAAY,CAAC,gBAKZ,EAAA;AACC,QAAA,MAAM,QAAQ,GAAG,gBAAgB,CAAC,QAAQ,IAAI,KAAK,CAAC;AACpD,QAAA,gBAAgB,CAAC,IAAI,GAAG,SAAS,CAAC;AAClC,QAAA,gBAAgB,CAAC,QAAQ,GAAG,SAAS,CAAC;AACtC,QAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;AACnC,QAAA,IAAI,CAAC,SAAS;AACX,aAAA,YAAY,CAAC,EAAE,GAAG,gBAAgB,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,EAAE,QAAQ,CAAC;AACtE,aAAA,SAAS,CAAC;AACT,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;AACb,gBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;gBACpC,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;aACF;AACD,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;gBACZ,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;aACnC;AACF,SAAA,CAAC,CAAC;KACN;;kHA3GU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAM,4BAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,qBAAqB,yDCblC,4pFAuFA,EAAA,MAAA,EAAA,CAAA,6fAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAL,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAI,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAS,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FD1Ea,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,SAAS;+BACE,mBAAmB,EAAA,QAAA,EAAA,4pFAAA,EAAA,MAAA,EAAA,CAAA,6fAAA,CAAA,EAAA,CAAA;;;MEGlB,qBAAqB,CAAA;AAGhC,IAAA,WAAA,CACS,SAA8C,EAC7C,SAAuC,EACf,MAAc,EAAA;QAFvC,IAAS,CAAA,SAAA,GAAT,SAAS,CAAqC;QAC7C,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QACf,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;KAC5C;AAEJ,IAAA,QAAQ,MAAW;IAEnB,MAAM,GAAA;AACJ,QAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;AACnC,QAAA,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC;AAC3D,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;AACb,gBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;gBACpC,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;aACF;YACD,IAAI,EAAE,MAAK;AACT,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC5B;AACF,SAAA,CAAC,CAAC;KACJ;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;;AA9BU,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,yFAMtB,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AANd,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,qBAAqB,yDCZlC,ymBA0BA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAT,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDda,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,SAAS;+BACE,mBAAmB,EAAA,QAAA,EAAA,ymBAAA,EAAA,CAAA;;0BAU1B,MAAM;2BAAC,eAAe,CAAA;;;METd,kBAAkB,CAAA;IAC7B,WACS,CAAA,SAA2C,EAClB,YAAiC,EAAA;QAD1D,IAAS,CAAA,SAAA,GAAT,SAAS,CAAkC;QAClB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;KAC/D;AAEJ,IAAA,QAAQ,MAAW;IAEnB,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;;AAVU,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,gDAGnB,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAHd,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,sDCT/B,w4CA4CA,EAAA,MAAA,EAAA,CAAA,2BAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAJ,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAK,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAI,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,WAAA,EAAA,WAAA,EAAA,cAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,EAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDnCa,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAL9B,SAAS;+BACE,gBAAgB,EAAA,QAAA,EAAA,w4CAAA,EAAA,MAAA,EAAA,CAAA,2BAAA,CAAA,EAAA,CAAA;;0BAOvB,MAAM;2BAAC,eAAe,CAAA;;;MEEd,qBAAqB,CAAA;AAIhC,IAAA,WAAA,CACU,WAA+B,EAChC,SAA8C,EAC7C,SAAuC,EACf,MAAc,EAAA;QAHtC,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;QAChC,IAAS,CAAA,SAAA,GAAT,SAAS,CAAqC;QAC7C,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QACf,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QAE9C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAC3C,YAAA,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAC5B,MAAM,CAAC,IAAI,EACX,UAAU,CAAC,OAAO,CAAC;AACjB,gBAAA,UAAU,CAAC,QAAQ;AACnB,gBAAA,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AACvB,gBAAA,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;AACxB,gBAAA,UAAU,CAAC,OAAO,CAAC,yBAAyB,CAAC;AAC9C,aAAA,CAAC,CACH;AACF,SAAA,CAAC,CAAC;KACJ;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;AAED,IAAA,UAAU,CAAC,gBAAkC,EAAA;AAC3C,QAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;AACnC,QAAA,IAAI,CAAC,SAAS;aACX,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,gBAAgB,CAAC;AACrD,aAAA,SAAS,CAAC;AACT,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;AACb,gBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;gBACpC,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;aACF;YACD,IAAI,EAAE,MAAK;AACT,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC5B;AACF,SAAA,CAAC,CAAC;KACN;AAED,IAAA,QAAQ,MAAW;;AA9CR,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,2HAQtB,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AARd,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,qBAAqB,yDCdlC,67BAiCA,EAAA,MAAA,EAAA,CAAA,6fAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAN,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDnBa,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,SAAS;+BACE,mBAAmB,EAAA,QAAA,EAAA,67BAAA,EAAA,MAAA,EAAA,CAAA,6fAAA,CAAA,EAAA,CAAA;;0BAY1B,MAAM;2BAAC,eAAe,CAAA;;;MEbd,wBAAwB,CAAA;IAGnC,WACS,CAAA,SAAiD,EACxB,MAAc,EAAA;QADvC,IAAS,CAAA,SAAA,GAAT,SAAS,CAAwC;QACxB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QAE9C,IAAI,CAAC,SAAS,GAAG,CAAA,EAAG,MAAM,CAAC,IAAI,QAAQ,CAAC;KACzC;AAED,IAAA,QAAQ,MAAW;IAEnB,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;;AAdU,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,gDAKzB,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AALd,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,wBAAwB,6DCTrC,6pCAmCA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,wDAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,4BAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAL,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,aAAA,EAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,gBAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FD1Ba,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBALpC,SAAS;+BACE,uBAAuB,EAAA,QAAA,EAAA,6pCAAA,EAAA,CAAA;;0BAS9B,MAAM;2BAAC,eAAe,CAAA;;;MENd,qBAAqB,CAAA;IAIhC,WACS,CAAA,SAA8C,EACrB,QAAkC,EAAA;QAD3D,IAAS,CAAA,SAAA,GAAT,SAAS,CAAqC;QACrB,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAA0B;QALpE,IAAI,CAAA,IAAA,GAAG,IAAI,CAAC;KAMR;AAEJ,IAAA,QAAQ,MAAW;IAEnB,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;;AAbU,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,gDAMtB,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AANd,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,qBAAqB,0DCRlC,wrBAsBA,EAAA,MAAA,EAAA,CAAA,2BAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAJ,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAK,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,WAAA,EAAA,WAAA,EAAA,cAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,EAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDda,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,SAAS;+BACE,oBAAoB,EAAA,QAAA,EAAA,wrBAAA,EAAA,MAAA,EAAA,CAAA,2BAAA,CAAA,EAAA,CAAA;;0BAU3B,MAAM;2BAAC,eAAe,CAAA;;;MEoBd,2BAA2B,CAAA;IAwBtC,WACU,CAAA,SAAuC,EACxC,MAAiB,EAAA;QADhB,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QACxC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AAvB1B,QAAA,IAAA,CAAA,gBAAgB,GAAa;YAC3B,IAAI;YACJ,MAAM;YACN,YAAY;YACZ,cAAc;YACd,aAAa;YACb,OAAO;YACP,MAAM;SACP,CAAC;QAEF,IAAa,CAAA,aAAA,GAAG,CAAC,CAAC;QAClB,IAAgB,CAAA,gBAAA,GAAG,IAAI,CAAC;QACxB,IAAgB,CAAA,gBAAA,GAAG,KAAK,CAAC;AAEzB,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,eAAe,CAAS,CAAC,CAAC,CAAC;KAUpC;IAEJ,eAAe,GAAA;QACb,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,sBAAsB,GAAG,KAAK,CACjC,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,SAAS,CAAC,IAAI,EACnB,IAAI,CAAC,MAAM,CACZ;aACE,IAAI,CACH,SAAS,CAAC,EAAE,CAAC,EACb,SAAS,CAAC,MAAK;AACb,YAAA,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;AAC9B,YAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,OAAO,IAAI,CAAC,SAAU,CAAC,UAAU,CAC/B,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,IAAI,CAAC,IAAI,CAAC,SAAS,CACpB,CAAC,IAAI,CACJ,UAAU,CAAC,CAAC,GAAG,KAAI;gBACjB,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;AACD,gBAAA,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;aACjB,CAAC,CACH,CAAC;AACJ,SAAC,CAAC,EACF,GAAG,CAAC,CAAC,IAAI,KAAI;AACX,YAAA,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,IAAI,KAAK,IAAI,EAAE;AACjB,gBAAA,OAAO,EAAE,CAAC;AACX,aAAA;YACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,EAAE,UAAU,IAAI,CAAC,CAAC;AACnD,YAAA,OAAO,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE,CAAC;AACnC,SAAC,CAAC,CACH;AACA,aAAA,SAAS,CAAC,CAAC,IAAI,KAAI;AAClB,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACtB,SAAC,CAAC,CAAC;KACN;AAED,IAAA,QAAQ,MAAW;IAEnB,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,sBAAsB,EAAE,WAAW,EAAE,CAAC;AAC3C,QAAA,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;KACjC;AAED,IAAA,uBAAuB,CAAC,MAAc,EAAA;AACpC,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE;AACpC,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,SAAS,EAAE,MAAM;AACjB,YAAA,IAAI,EAAE,MAAM;AACb,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,wBAAwB,CAAC,MAAc,EAAA;AACrC,QAAA,IAAI,CAAC,SAAS;aACX,qBAAqB,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,UAAU,CAAC;AACnD,aAAA,SAAS,CAAC;AACT,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;gBACb,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;aACF;AACD,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;AACZ,gBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACxC,gBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE;AACtC,oBAAA,KAAK,EAAE,OAAO;AACd,oBAAA,SAAS,EAAE,MAAM;oBACjB,IAAI,EAAE,EAAE,YAAY,EAAE,GAAG,CAAC,OAAO,CAAC,YAAY,EAAE;AACjD,iBAAA,CAAC,CAAC;aACJ;AACF,SAAA,CAAC,CAAC;KACN;AAED,IAAA,mBAAmB,CAAC,MAAc,EAAA;AAChC,QAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAC7B,QAAA,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC;AACzE,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;gBACb,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;aACF;YACD,IAAI,EAAE,MAAK;AACT,gBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;aACzC;YACD,QAAQ,EAAE,MAAK;AACb,gBAAA,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;aAC/B;AACF,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,YAAY,CAAC,MAAc,EAAA;AACzB,QAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAC7B,QAAA,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC;AAC3D,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;gBACb,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;aACF;YACD,IAAI,EAAE,MAAK;AACT,gBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;aACzC;YACD,QAAQ,EAAE,MAAK;AACb,gBAAA,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;aAC/B;AACF,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,YAAY,CAAC,MAAc,EAAA;AACzB,QAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAC7B,QAAA,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC;AAC5D,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;gBACb,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;aACF;YACD,IAAI,EAAE,MAAK;AACT,gBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;aACzC;YACD,QAAQ,EAAE,MAAK;AACb,gBAAA,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;aAC/B;AACF,SAAA,CAAC,CAAC;KACJ;IAED,sBAAsB,GAAA;QACpB,MAAM,qBAAqB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE;AACpE,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,SAAS,EAAE,MAAM;AAClB,SAAA,CAAC,CAAC;QACH,qBAAqB;AAClB,aAAA,WAAW,EAAE;aACb,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,aAAA,SAAS,CAAC;AACT,YAAA,IAAI,EAAE,CAAC,GAAwB,KAAI;AACjC,gBAAA,IAAI,GAAG,EAAE;AACP,oBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE;AACnC,wBAAA,KAAK,EAAE,OAAO;AACd,wBAAA,SAAS,EAAE,MAAM;AACjB,wBAAA,IAAI,EAAE,GAAG;AACV,qBAAA,CAAC,CAAC;AACH,oBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACzC,iBAAA;aACF;AACF,SAAA,CAAC,CAAC;KACN;AAED,IAAA,mBAAmB,CAAC,MAAc,EAAA;AAChC,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,EAAE;AACzC,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,SAAS,EAAE,MAAM;AACjB,YAAA,IAAI,EAAE,MAAM;AACb,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,qBAAqB,CAAC,MAAc,EAAA;QAClC,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE;AACrE,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,SAAS,EAAE,MAAM;AACjB,YAAA,IAAI,EAAE,MAAM;AACb,SAAA,CAAC,CAAC;QAEH,oBAAoB;AACjB,aAAA,WAAW,EAAE;aACb,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,aAAA,SAAS,CAAC;AACT,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;AACZ,gBAAA,IAAI,GAAG,EAAE;AACP,oBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACzC,iBAAA;aACF;AACF,SAAA,CAAC,CAAC;KACN;AAED,IAAA,sBAAsB,CAAC,MAAc,EAAA;QACnC,MAAM,qBAAqB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE;AACpE,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,SAAS,EAAE,MAAM;AACjB,YAAA,IAAI,EAAE,MAAM;AACb,SAAA,CAAC,CAAC;QAEH,qBAAqB;AAClB,aAAA,WAAW,EAAE;aACb,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,aAAA,SAAS,CAAC;AACT,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;AACZ,gBAAA,IAAI,GAAG,EAAE;AACP,oBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACzC,iBAAA;aACF;AACF,SAAA,CAAC,CAAC;KACN;AAED,IAAA,sBAAsB,CAAC,MAAc,EAAA;QACnC,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE;AACnE,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,SAAS,EAAE,MAAM;AACjB,YAAA,IAAI,EAAE,MAAM;AACb,SAAA,CAAC,CAAC;QAEH,oBAAoB;AACjB,aAAA,WAAW,EAAE;aACb,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,aAAA,SAAS,CAAC;AACT,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;AACZ,gBAAA,IAAI,GAAG,EAAE;AACP,oBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACzC,iBAAA;aACF;AACF,SAAA,CAAC,CAAC;KACN;;wHAxPU,2BAA2B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAJ,4BAAA,EAAA,EAAA,EAAA,KAAA,EAAAG,IAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,2BAA2B,EAqB3B,QAAA,EAAA,0BAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,YAAY,EACZ,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,MAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,OAAO,gDCxDpB,44JAyIA,EAAA,MAAA,EAAA,CAAA,k4BAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,uBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,oCAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,eAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,qBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,OAAA,EAAA,uBAAA,EAAA,cAAA,CAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,mCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,aAAA,EAAA,MAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDvGa,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBALvC,SAAS;+BACE,0BAA0B,EAAA,QAAA,EAAA,44JAAA,EAAA,MAAA,EAAA,CAAA,k4BAAA,CAAA,EAAA,CAAA;0IAyBX,SAAS,EAAA,CAAA;sBAAjC,SAAS;uBAAC,YAAY,CAAA;gBACH,IAAI,EAAA,CAAA;sBAAvB,SAAS;uBAAC,OAAO,CAAA;;;ME1CP,2BAA2B,CAAA;AAQtC,IAAA,WAAA,CACS,SAAoD,EACnD,WAA+B,EAC/B,SAAuC,EACf,QAAkB,EAAA;QAH3C,IAAS,CAAA,SAAA,GAAT,SAAS,CAA2C;QACnD,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;QAC/B,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QACf,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;QARpD,IAAO,CAAA,OAAA,GAAa,EAAE,CAAC;QACvB,IAAW,CAAA,WAAA,GAAa,EAAE,CAAC;QAC3B,IAAY,CAAA,YAAA,GAAG,IAAI,CAAC;QAQlB,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAClD,YAAA,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAC5B,EAAE,EACF,UAAU,CAAC,OAAO,CAAC;AACjB,gBAAA,UAAU,CAAC,OAAO,CAAC,yBAAyB,CAAC;AAC7C,gBAAA,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AACvB,gBAAA,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;AACzB,aAAA,CAAC,CACH;AACF,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,QAAQ,MAAW;AAEnB,IAAA,aAAa,CAAC,OAAe,EAAA;AAC3B,QAAA,MAAM,YAAY,GAAG,CAAC,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACnE,MAAM,cAAc,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrD,IAAI,cAAc,KAAK,CAAC,CAAC;AAAE,YAAA,OAAO,KAAK,CAAC;AACxC,QAAA,OAAO,IAAI,CAAC;KACb;IAED,eAAe,GAAA;AACb,QAAA,MAAM,gBAAgB,GACnB,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,KAAgB,IAAI,EAAE,CAAC;QAClE,IAAI,gBAAgB,KAAK,EAAE;YAAE,OAAO;QACpC,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAC/C,CAAC,MAAM,KACL,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,gBAAgB,CAAC,WAAW,EAAE,CAClE,CAAC;QACF,IACE,cAAc,KAAK,CAAC,CAAC;YACrB,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,KAAK,EAC7C;AACA,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;AACpB,gBAAA,EAAE,EAAE,CAAC;gBACL,OAAO,EAAE,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,KAAK;AACvD,aAAA,CAAC,CAAC;YACH,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC;AACjD,SAAA;KACF;AAED,IAAA,oBAAoB,CAAC,cAAsB,EAAA;QACzC,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAC9C,CAAC,MAAM,KACL,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,cAAc,CAAC,OAAO,CAAC,WAAW,EAAE,CACxE,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;KAC3C;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;IAED,qBAAqB,GAAA;AACnB,QAAA,IAAI,CAAC,SAAS;AACX,aAAA,qBAAqB,CACpB,IAAI,CAAC,QAAQ,CAAC,EAAE,EAChB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,QAAQ,CAAC,OAAO,CACtB;AACA,aAAA,SAAS,CAAC;AACT,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;AACb,gBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;gBACpC,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;aACF;YACD,IAAI,EAAE,MAAK;AACT,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC5B;AACF,SAAA,CAAC,CAAC;KACN;;AAxFU,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,2BAA2B,2HAY5B,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAZd,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,2BAA2B,+DCdxC,+oDAyDA,EAAA,MAAA,EAAA,CAAA,siBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FD3Ca,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBALvC,SAAS;+BACE,yBAAyB,EAAA,QAAA,EAAA,+oDAAA,EAAA,MAAA,EAAA,CAAA,siBAAA,CAAA,EAAA,CAAA;;0BAgBhC,MAAM;2BAAC,eAAe,CAAA;;;MEbd,kCAAkC,CAAA;AAS7C,IAAA,WAAA,CACS,SAA2D,EAC1D,WAA+B,EAC/B,SAAuC,EAAA;QAFxC,IAAS,CAAA,SAAA,GAAT,SAAS,CAAkD;QAC1D,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;QAC/B,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QARjD,IAAY,CAAA,YAAA,GAAkB,EAAE,CAAC;QACjC,IAAY,CAAA,YAAA,GAAG,IAAI,CAAC;QAEpB,IAAa,CAAA,aAAA,GAAG,KAAK,CAAC;AAOpB,QAAA,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC;AACzC,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;gBACb,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;AACD,gBAAA,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;aACxB;AACD,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;gBACZ,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,IAAI,EAAE,CAAC;aACvC;AACF,SAAA,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAC/C,YAAA,kBAAkB,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAC1C,EAAE,EACF,UAAU,CAAC,OAAO,CAAC;AACjB,gBAAA,UAAU,CAAC,QAAQ;AACnB,gBAAA,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AACvB,gBAAA,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;AACxB,gBAAA,UAAU,CAAC,OAAO,CAAC,uBAAuB,CAAC;AAC5C,aAAA,CAAC,CACH;YACD,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CACnC,EAAE,EACF,UAAU,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAC7D;AACF,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,QAAQ,MAAW;AAEnB,IAAA,cAAc,CAAC,kBAGd,EAAA;AACC,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC1B,QAAA,IAAI,CAAC,SAAS;aACX,cAAc,CACb,kBAAkB,CAAC,kBAAkB,EACrC,kBAAkB,CAAC,WAAW,CAC/B;AACA,aAAA,SAAS,CAAC;AACT,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;AACb,gBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;gBACpC,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;aACF;YACD,IAAI,EAAE,MAAK;AACT,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC5B;YACD,QAAQ,EAAE,MAAK;AACb,gBAAA,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC5B;AACF,SAAA,CAAC,CAAC;KACN;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;;+HA5EU,kCAAkC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAH,IAAA,CAAA,YAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAM,4BAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlC,kCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kCAAkC,uECb/C,49CAiDA,EAAA,MAAA,EAAA,CAAA,+CAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAL,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAI,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAQ,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDpCa,kCAAkC,EAAA,UAAA,EAAA,CAAA;kBAL9C,SAAS;+BACE,iCAAiC,EAAA,QAAA,EAAA,49CAAA,EAAA,MAAA,EAAA,CAAA,+CAAA,CAAA,EAAA,CAAA;;;MEGhC,kCAAkC,CAAA;AAI7C,IAAA,WAAA,CACS,SAA2D,EAC1D,SAAuC,EACf,QAAkB,EAAA;QAF3C,IAAS,CAAA,SAAA,GAAT,SAAS,CAAkD;QAC1D,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QACf,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;QALpD,IAAa,CAAA,aAAA,GAAG,KAAK,CAAC;KAMlB;AAEJ,IAAA,QAAQ,MAAW;IAEnB,MAAM,GAAA;AACJ,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC1B,QAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;AACnC,QAAA,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;AACxD,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;AACb,gBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;gBACpC,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;aACF;YACD,IAAI,EAAE,MAAK;AACT,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC5B;YACD,QAAQ,EAAE,MAAK;AACb,gBAAA,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC5B;AACF,SAAA,CAAC,CAAC;KACJ;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;;AAnCU,kCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kCAAkC,yFAOnC,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAPd,kCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kCAAkC,uECZ/C,goBA0BA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAR,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDda,kCAAkC,EAAA,UAAA,EAAA,CAAA;kBAL9C,SAAS;+BACE,iCAAiC,EAAA,QAAA,EAAA,goBAAA,EAAA,CAAA;;0BAWxC,MAAM;2BAAC,eAAe,CAAA;;;MEad,wCAAwC,CAAA;IA+BnD,WACU,CAAA,SAAuC,EACxC,MAAiB,EAAA;QADhB,IAAS,CAAA,SAAA,GAAT,SAAS,CAA8B;QACxC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AA5B1B,QAAA,IAAA,CAAA,gBAAgB,GAAa;YAC3B,IAAI;YACJ,yBAAyB;YACzB,SAAS;YACT,QAAQ;SACT,CAAC;AAEF,QAAA,IAAA,CAAA,eAAe,GAAG;YAChB,eAAe;YACf,aAAa;YACb,eAAe;YACf,oBAAoB;YACpB,aAAa;YACb,eAAe;SAChB,CAAC;QAEF,IAAa,CAAA,aAAA,GAAG,CAAC,CAAC;QAClB,IAAgB,CAAA,gBAAA,GAAG,IAAI,CAAC;AAExB,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,eAAe,CAAS,CAAC,CAAC,CAAC;KAUpC;IAEJ,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,oBAAoB,EAAE,WAAW,EAAE,CAAC;AACzC,QAAA,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;KACjC;IAED,eAAe,GAAA;QACb,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAC/B,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,SAAS,CAAC,IAAI,EACnB,IAAI,CAAC,MAAM,CACZ;aACE,IAAI,CACH,SAAS,CAAC,EAAE,CAAC,EACb,SAAS,CAAC,MAAK;AACb,YAAA,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;AAC9B,YAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,OAAO,IAAI,CAAC,SAAU,CAAC,YAAY,CACjC,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,IAAI,CAAC,IAAI,CAAC,SAAS,CACpB,CAAC,IAAI,CACJ,UAAU,CAAC,CAAC,GAAG,KAAI;gBACjB,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACrC,iBAAA;AACD,gBAAA,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;aACjB,CAAC,CACH,CAAC;AACJ,SAAC,CAAC,EACF,GAAG,CAAC,CAAC,IAAI,KAAI;AACX,YAAA,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,IAAI,KAAK,IAAI,EAAE;AACjB,gBAAA,OAAO,EAAE,CAAC;AACX,aAAA;YACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,EAAE,UAAU,IAAI,CAAC,CAAC;AACnD,YAAA,OAAO,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE,CAAC;AACnC,SAAC,CAAC,CACH;AACA,aAAA,SAAS,CAAC,CAAC,IAAI,KAAI;AAClB,YAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACxB,SAAC,CAAC,CAAC;KACN;AAED,IAAA,QAAQ,MAAW;IAEnB,2BAA2B,GAAA;QACzB,MAAM,8BAA8B,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CACrD,kCAAkC,EAClC;AACE,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,SAAS,EAAE,MAAM;AAClB,SAAA,CACF,CAAC;QAEF,8BAA8B;AAC3B,aAAA,WAAW,EAAE;aACb,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,aAAA,SAAS,CAAC;AACT,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;AACZ,gBAAA,IAAI,GAAG,EAAE;AACP,oBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACzC,iBAAA;aACF;AACF,SAAA,CAAC,CAAC;KACN;AAED,IAAA,wBAAwB,CAAC,QAAkB,EAAA;QACzC,MAAM,8BAA8B,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CACrD,kCAAkC,EAClC;AACE,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,SAAS,EAAE,MAAM;AACjB,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA,CACF,CAAC;QAEF,8BAA8B;AAC3B,aAAA,WAAW,EAAE;aACb,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,aAAA,SAAS,CAAC;AACT,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;AACZ,gBAAA,IAAI,GAAG,EAAE;AACP,oBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACzC,iBAAA;aACF;AACF,SAAA,CAAC,CAAC;KACN;AAED,IAAA,iBAAiB,CAAC,QAAkB,EAAA;QAClC,MAAM,8BAA8B,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CACrD,2BAA2B,EAC3B;AACE,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,SAAS,EAAE,MAAM;AACjB,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA,CACF,CAAC;QAEF,8BAA8B;AAC3B,aAAA,WAAW,EAAE;aACb,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,aAAA,SAAS,CAAC;AACT,YAAA,IAAI,EAAE,CAAC,GAAG,KAAI;AACZ,gBAAA,IAAI,GAAG,EAAE;AACP,oBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACzC,iBAAA;aACF;AACF,SAAA,CAAC,CAAC;KACN;;qIAlJU,wCAAwC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAF,4BAAA,EAAA,EAAA,EAAA,KAAA,EAAAG,IAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxC,wCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,wCAAwC,EA4BxC,QAAA,EAAA,wCAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,YAAY,EACZ,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,MAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,OAAO,gDC7DpB,myFAmFA,EAAA,MAAA,EAAA,CAAA,krBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,uBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,oCAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,eAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,qBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,OAAA,EAAA,uBAAA,EAAA,cAAA,CAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,mCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,aAAA,EAAA,MAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDnDa,wCAAwC,EAAA,UAAA,EAAA,CAAA;kBALpD,SAAS;+BACE,wCAAwC,EAAA,QAAA,EAAA,myFAAA,EAAA,MAAA,EAAA,CAAA,krBAAA,CAAA,EAAA,CAAA;0IAgCzB,SAAS,EAAA,CAAA;sBAAjC,SAAS;uBAAC,YAAY,CAAA;gBACH,IAAI,EAAA,CAAA;sBAAvB,SAAS;uBAAC,OAAO,CAAA;;;MEtDP,oBAAoB,CAAA;AAE/B,IAAA,WAAA,GAAA,GAAiB;IAEjB,QAAQ,GAAA;KACP;;iHALU,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,wDCPjC,8BACA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDMa,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBALhC,SAAS;+BACE,kBAAkB,EAAA,QAAA,EAAA,8BAAA,EAAA,CAAA;;;ME8EjB,2BAA2B,CAAA;;wHAA3B,2BAA2B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,2BAA2B,iBA7CpC,8BAA8B;QAC9B,0BAA0B;QAC1B,gCAAgC;QAChC,sBAAsB;QACtB,mBAAmB;QACnB,mBAAmB;QACnB,mBAAmB;QACnB,qBAAqB;QACrB,0BAA0B;QAC1B,mBAAmB;QACnB,gBAAgB;QAChB,mBAAmB;QACnB,2BAA2B;QAC3B,qBAAqB;QACrB,qBAAqB;QACrB,uBAAuB;QACvB,wBAAwB;QACxB,kBAAkB;QAClB,qBAAqB;QACrB,uBAAuB;QACvB,wCAAwC;QACxC,kCAAkC;QAClC,2BAA2B;QAC3B,kCAAkC;QAClC,qBAAqB;QACrB,mBAAmB;AACnB,QAAA,oBAAoB,aAGpB,gBAAgB;QAChB,gBAAgB;QAChB,WAAW;QACX,mBAAmB;QACnB,YAAY;AACZ,QAAA,eAAe,aAGf,8BAA8B;QAC9B,0BAA0B;QAC1B,gCAAgC;QAChC,0BAA0B;QAC1B,2BAA2B;QAC3B,wCAAwC,CAAA,EAAA,CAAA,CAAA;AAG/B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,2BAA2B,YAhBpC,gBAAgB;QAChB,gBAAgB;QAChB,WAAW;QACX,mBAAmB;QACnB,YAAY;QACZ,eAAe,CAAA,EAAA,CAAA,CAAA;2FAWN,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBA/CvC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE;wBACZ,8BAA8B;wBAC9B,0BAA0B;wBAC1B,gCAAgC;wBAChC,sBAAsB;wBACtB,mBAAmB;wBACnB,mBAAmB;wBACnB,mBAAmB;wBACnB,qBAAqB;wBACrB,0BAA0B;wBAC1B,mBAAmB;wBACnB,gBAAgB;wBAChB,mBAAmB;wBACnB,2BAA2B;wBAC3B,qBAAqB;wBACrB,qBAAqB;wBACrB,uBAAuB;wBACvB,wBAAwB;wBACxB,kBAAkB;wBAClB,qBAAqB;wBACrB,uBAAuB;wBACvB,wCAAwC;wBACxC,kCAAkC;wBAClC,2BAA2B;wBAC3B,kCAAkC;wBAClC,qBAAqB;wBACrB,mBAAmB;wBACnB,oBAAoB;AACrB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,gBAAgB;wBAChB,gBAAgB;wBAChB,WAAW;wBACX,mBAAmB;wBACnB,YAAY;wBACZ,eAAe;AAChB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,8BAA8B;wBAC9B,0BAA0B;wBAC1B,gCAAgC;wBAChC,0BAA0B;wBAC1B,2BAA2B;wBAC3B,wCAAwC;AACzC,qBAAA;AACF,iBAAA,CAAA;;;AChFD;;AAEG;;ACFH;;AAEG;;;;"}