import { Component } from '@angular/core';
import { ChangePasswordComponent } from './change-password/change-password.component';
import * as i0 from "@angular/core";
import * as i1 from "./../nodeboot-oauth2-starter.service";
import * as i2 from "@angular/material/dialog";
import * as i3 from "@angular/material/expansion";
import * as i4 from "@angular/material/list";
import * as i5 from "@angular/material/button";
import * as i6 from "@angular/common";
export class OauthStarterUserProfileComponent {
    constructor(nbService, dialog) {
        this.nbService = nbService;
        this.dialog = dialog;
        this.nbService.getUserProfile().subscribe({
            next: (res) => {
                this.user = res.content;
            },
        });
    }
    ngOnInit() { }
    openChangePasswordDialog() {
        this.dialog.open(ChangePasswordComponent, {
            width: '600px',
            maxHeight: '70vh',
            data: this.user,
        });
    }
}
OauthStarterUserProfileComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: OauthStarterUserProfileComponent, deps: [{ token: i1.NodebootOauth2StarterService }, { token: i2.MatDialog }], target: i0.ɵɵFactoryTarget.Component });
OauthStarterUserProfileComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.2", type: OauthStarterUserProfileComponent, selector: "lib-oauth-starter-user-profile", ngImport: i0, template: "<div>\n  <div class=\"profile-container\" *ngIf=\"user\">\n    <div class=\"header\">\n      <h1>{{ user.name }} Profile</h1>\n      <h4>#{{ user.id }}</h4>\n    </div>\n    <section>\n      <h3>Roles</h3>\n      <mat-accordion>\n        <mat-expansion-panel *ngFor=\"let role of user.roles\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              #{{ role.id }} | Role Name: {{ role.identifier }}\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <mat-list role=\"list\">\n            <mat-list-item *ngFor=\"let part of role.parts\" role=\"listitem\"\n              >{{ part.applicationPartName }} | Options:\n              {{ part.allowed.join(\",\") }}</mat-list-item\n            >\n          </mat-list>\n        </mat-expansion-panel>\n      </mat-accordion>\n      <div class=\"actions\">\n        <button\n          (click)=\"openChangePasswordDialog()\"\n          type=\"button\"\n          mat-flat-button\n          color=\"accent\"\n        >\n          Change Password\n        </button>\n      </div>\n    </section>\n  </div>\n</div>\n", styles: [".header{display:flex;align-items:baseline;gap:.5rem;flex-wrap:wrap}.header h1{margin:0;font-size:32px}.header h4{margin:0;color:gray}section{display:grid}section .roles-list{color:#000}section .actions{margin-top:2rem}.profile-container ::ng-deep .mat-list-base .mat-list-item .mat-list-item-content{color:#000}\n"], components: [{ type: i3.MatExpansionPanel, selector: "mat-expansion-panel", inputs: ["disabled", "expanded", "hideToggle", "togglePosition"], outputs: ["opened", "closed", "expandedChange", "afterExpand", "afterCollapse"], exportAs: ["matExpansionPanel"] }, { type: i3.MatExpansionPanelHeader, selector: "mat-expansion-panel-header", inputs: ["tabIndex", "expandedHeight", "collapsedHeight"] }, { type: i4.MatList, selector: "mat-list, mat-action-list", inputs: ["disableRipple", "disabled"], exportAs: ["matList"] }, { type: i4.MatListItem, selector: "mat-list-item, a[mat-list-item], button[mat-list-item]", inputs: ["disableRipple", "disabled"], exportAs: ["matListItem"] }, { type: i5.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }], directives: [{ type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.MatAccordion, selector: "mat-accordion", inputs: ["multi", "hideToggle", "displayMode", "togglePosition"], exportAs: ["matAccordion"] }, { type: i6.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.MatExpansionPanelTitle, selector: "mat-panel-title" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: OauthStarterUserProfileComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-oauth-starter-user-profile', template: "<div>\n  <div class=\"profile-container\" *ngIf=\"user\">\n    <div class=\"header\">\n      <h1>{{ user.name }} Profile</h1>\n      <h4>#{{ user.id }}</h4>\n    </div>\n    <section>\n      <h3>Roles</h3>\n      <mat-accordion>\n        <mat-expansion-panel *ngFor=\"let role of user.roles\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              #{{ role.id }} | Role Name: {{ role.identifier }}\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <mat-list role=\"list\">\n            <mat-list-item *ngFor=\"let part of role.parts\" role=\"listitem\"\n              >{{ part.applicationPartName }} | Options:\n              {{ part.allowed.join(\",\") }}</mat-list-item\n            >\n          </mat-list>\n        </mat-expansion-panel>\n      </mat-accordion>\n      <div class=\"actions\">\n        <button\n          (click)=\"openChangePasswordDialog()\"\n          type=\"button\"\n          mat-flat-button\n          color=\"accent\"\n        >\n          Change Password\n        </button>\n      </div>\n    </section>\n  </div>\n</div>\n", styles: [".header{display:flex;align-items:baseline;gap:.5rem;flex-wrap:wrap}.header h1{margin:0;font-size:32px}.header h4{margin:0;color:gray}section{display:grid}section .roles-list{color:#000}section .actions{margin-top:2rem}.profile-container ::ng-deep .mat-list-base .mat-list-item .mat-list-item-content{color:#000}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.NodebootOauth2StarterService }, { type: i2.MatDialog }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2F1dGgtc3RhcnRlci11c2VyLXByb2ZpbGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbm9kZWJvb3Qtb2F1dGgyLXN0YXJ0ZXIvc3JjL2xpYi9vYXV0aC1zdGFydGVyLXVzZXItcHJvZmlsZS9vYXV0aC1zdGFydGVyLXVzZXItcHJvZmlsZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9ub2RlYm9vdC1vYXV0aDItc3RhcnRlci9zcmMvbGliL29hdXRoLXN0YXJ0ZXItdXNlci1wcm9maWxlL29hdXRoLXN0YXJ0ZXItdXNlci1wcm9maWxlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFHbEQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkNBQTZDLENBQUM7Ozs7Ozs7O0FBT3RGLE1BQU0sT0FBTyxnQ0FBZ0M7SUFHM0MsWUFDVSxTQUF1QyxFQUN4QyxNQUFpQjtRQURoQixjQUFTLEdBQVQsU0FBUyxDQUE4QjtRQUN4QyxXQUFNLEdBQU4sTUFBTSxDQUFXO1FBRXhCLElBQUksQ0FBQyxTQUFTLENBQUMsY0FBYyxFQUFFLENBQUMsU0FBUyxDQUFDO1lBQ3hDLElBQUksRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFO2dCQUNaLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLE9BQWUsQ0FBQztZQUNsQyxDQUFDO1NBQ0YsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELFFBQVEsS0FBVSxDQUFDO0lBRW5CLHdCQUF3QjtRQUN0QixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyx1QkFBdUIsRUFBRTtZQUN4QyxLQUFLLEVBQUUsT0FBTztZQUNkLFNBQVMsRUFBRSxNQUFNO1lBQ2pCLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSTtTQUNoQixDQUFDLENBQUM7SUFDTCxDQUFDOzs2SEF0QlUsZ0NBQWdDO2lIQUFoQyxnQ0FBZ0Msc0VDZDdDLGdtQ0FvQ0E7MkZEdEJhLGdDQUFnQztrQkFMNUMsU0FBUzsrQkFDRSxnQ0FBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBOb2RlYm9vdE9hdXRoMlN0YXJ0ZXJTZXJ2aWNlLFxuICBVc2VyLFxufSBmcm9tICcuLy4uL25vZGVib290LW9hdXRoMi1zdGFydGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1hdERpYWxvZyB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2RpYWxvZyc7XG5cbmltcG9ydCB7IENoYW5nZVBhc3N3b3JkQ29tcG9uZW50IH0gZnJvbSAnLi9jaGFuZ2UtcGFzc3dvcmQvY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xpYi1vYXV0aC1zdGFydGVyLXVzZXItcHJvZmlsZScsXG4gIHRlbXBsYXRlVXJsOiAnLi9vYXV0aC1zdGFydGVyLXVzZXItcHJvZmlsZS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL29hdXRoLXN0YXJ0ZXItdXNlci1wcm9maWxlLmNvbXBvbmVudC5zY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIE9hdXRoU3RhcnRlclVzZXJQcm9maWxlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgdXNlciE6IFVzZXI7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBuYlNlcnZpY2U6IE5vZGVib290T2F1dGgyU3RhcnRlclNlcnZpY2UsXG4gICAgcHVibGljIGRpYWxvZzogTWF0RGlhbG9nXG4gICkge1xuICAgIHRoaXMubmJTZXJ2aWNlLmdldFVzZXJQcm9maWxlKCkuc3Vic2NyaWJlKHtcbiAgICAgIG5leHQ6IChyZXMpID0+IHtcbiAgICAgICAgdGhpcy51c2VyID0gcmVzLmNvbnRlbnQgYXMgVXNlcjtcbiAgICAgIH0sXG4gICAgfSk7XG4gIH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHt9XG5cbiAgb3BlbkNoYW5nZVBhc3N3b3JkRGlhbG9nKCkge1xuICAgIHRoaXMuZGlhbG9nLm9wZW4oQ2hhbmdlUGFzc3dvcmRDb21wb25lbnQsIHtcbiAgICAgIHdpZHRoOiAnNjAwcHgnLFxuICAgICAgbWF4SGVpZ2h0OiAnNzB2aCcsXG4gICAgICBkYXRhOiB0aGlzLnVzZXIsXG4gICAgfSk7XG4gIH1cbn1cbiIsIjxkaXY+XG4gIDxkaXYgY2xhc3M9XCJwcm9maWxlLWNvbnRhaW5lclwiICpuZ0lmPVwidXNlclwiPlxuICAgIDxkaXYgY2xhc3M9XCJoZWFkZXJcIj5cbiAgICAgIDxoMT57eyB1c2VyLm5hbWUgfX0gUHJvZmlsZTwvaDE+XG4gICAgICA8aDQ+I3t7IHVzZXIuaWQgfX08L2g0PlxuICAgIDwvZGl2PlxuICAgIDxzZWN0aW9uPlxuICAgICAgPGgzPlJvbGVzPC9oMz5cbiAgICAgIDxtYXQtYWNjb3JkaW9uPlxuICAgICAgICA8bWF0LWV4cGFuc2lvbi1wYW5lbCAqbmdGb3I9XCJsZXQgcm9sZSBvZiB1c2VyLnJvbGVzXCI+XG4gICAgICAgICAgPG1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyPlxuICAgICAgICAgICAgPG1hdC1wYW5lbC10aXRsZT5cbiAgICAgICAgICAgICAgI3t7IHJvbGUuaWQgfX0gfCBSb2xlIE5hbWU6IHt7IHJvbGUuaWRlbnRpZmllciB9fVxuICAgICAgICAgICAgPC9tYXQtcGFuZWwtdGl0bGU+XG4gICAgICAgICAgPC9tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcj5cbiAgICAgICAgICA8bWF0LWxpc3Qgcm9sZT1cImxpc3RcIj5cbiAgICAgICAgICAgIDxtYXQtbGlzdC1pdGVtICpuZ0Zvcj1cImxldCBwYXJ0IG9mIHJvbGUucGFydHNcIiByb2xlPVwibGlzdGl0ZW1cIlxuICAgICAgICAgICAgICA+e3sgcGFydC5hcHBsaWNhdGlvblBhcnROYW1lIH19IHwgT3B0aW9uczpcbiAgICAgICAgICAgICAge3sgcGFydC5hbGxvd2VkLmpvaW4oXCIsXCIpIH19PC9tYXQtbGlzdC1pdGVtXG4gICAgICAgICAgICA+XG4gICAgICAgICAgPC9tYXQtbGlzdD5cbiAgICAgICAgPC9tYXQtZXhwYW5zaW9uLXBhbmVsPlxuICAgICAgPC9tYXQtYWNjb3JkaW9uPlxuICAgICAgPGRpdiBjbGFzcz1cImFjdGlvbnNcIj5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIChjbGljayk9XCJvcGVuQ2hhbmdlUGFzc3dvcmREaWFsb2coKVwiXG4gICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgbWF0LWZsYXQtYnV0dG9uXG4gICAgICAgICAgY29sb3I9XCJhY2NlbnRcIlxuICAgICAgICA+XG4gICAgICAgICAgQ2hhbmdlIFBhc3N3b3JkXG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9zZWN0aW9uPlxuICA8L2Rpdj5cbjwvZGl2PlxuIl19