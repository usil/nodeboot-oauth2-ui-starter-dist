import { Component } from '@angular/core';
import { Validators } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "../../nodeboot-oauth2-starter.service";
import * as i3 from "@angular/material/dialog";
import * as i4 from "@angular/material/form-field";
import * as i5 from "@angular/material/select";
import * as i6 from "@angular/material/core";
import * as i7 from "@angular/material/list";
import * as i8 from "@angular/material/button";
import * as i9 from "@angular/common";
import * as i10 from "@angular/material/input";
export class CreateRoleComponent {
    constructor(formBuilder, nbService, dialogRef) {
        this.formBuilder = formBuilder;
        this.nbService = nbService;
        this.dialogRef = dialogRef;
        this.options = [];
        this.allowedShowList = [];
        this.allowedObject = {};
        this.objectKeys = Object.keys;
        this.nbService.getResourcesBasic().subscribe({
            error: (err) => {
                if (err.error) {
                    this.errorMessage = err.error.message;
                }
                else {
                    this.errorMessage = 'Unknown Error';
                }
                this.options = [];
            },
            next: (res) => {
                this.options = res.content || [];
            },
        });
        this.createRoleForm = this.formBuilder.group({
            identifier: this.formBuilder.control('', Validators.compose([
                Validators.required,
                Validators.pattern(/^[a-zA-Z0-9_\.\-\/]+$/),
                Validators.minLength(4),
                Validators.maxLength(20),
            ])),
            resource: this.formBuilder.control(''),
            selected: this.formBuilder.control(''),
        });
        this.resourceSubscription = this.createRoleForm
            .get('resource')
            ?.valueChanges.subscribe({
            next: (value) => {
                this.allowedShowList =
                    this.options.find((o) => o.applicationResourceName === value)
                        ?.allowed || [];
                this.createRoleForm
                    .get('selected')
                    ?.setValue(this.allowedObject[this.createRoleForm.get('resource')?.value] ||
                    []);
            },
        });
    }
    ngOnDestroy() {
        this.resourceSubscription?.unsubscribe();
    }
    ngOnInit() { }
    createRole(roleBody) {
        this.nbService
            .createRole(roleBody.identifier, this.allowedObject)
            .subscribe({
            error: (err) => {
                this.dialogRef.disableClose = false;
                if (err.error) {
                    this.errorMessage = err.error.message;
                }
                else {
                    this.errorMessage = 'Unknown Error';
                }
            },
            next: () => {
                this.dialogRef.close(true);
            },
        });
    }
    selectedChange(selected, value) {
        const currentAllowedObject = this.allowedObject[this.createRoleForm.get('resource')?.value];
        if (value.allowed === '*' &&
            selected &&
            this.createRoleForm.get('selected')?.value.length !==
                this.allowedShowList.length) {
            this.createRoleForm.get('selected')?.setValue(this.allowedShowList);
            this.allowedObject[this.createRoleForm.get('resource')?.value] = [
                this.allowedShowList[0],
            ];
        }
        else if (value.allowed === '*' && !selected) {
            const temporalAllowed = [...this.allowedShowList];
            temporalAllowed.shift();
            this.allowedObject[this.createRoleForm.get('resource')?.value] =
                temporalAllowed;
        }
        else if (selected) {
            if (!(currentAllowedObject && currentAllowedObject[0].allowed === '*')) {
                if (currentAllowedObject &&
                    currentAllowedObject.findIndex((ca) => ca.id === value.id)) {
                    currentAllowedObject.push(value);
                }
                else {
                    this.allowedObject[this.createRoleForm.get('resource')?.value] = [
                        value,
                    ];
                }
            }
        }
        else {
            const indexOfValue = this.createRoleForm
                .get('selected')
                ?.value.indexOf(value);
            if (currentAllowedObject && indexOfValue !== -1) {
                currentAllowedObject.splice(indexOfValue, 1);
            }
            if (currentAllowedObject && currentAllowedObject.length === 0) {
                delete this.allowedObject[this.createRoleForm.get('resource')?.value];
            }
        }
    }
    closeDialog() {
        this.dialogRef.close();
    }
}
CreateRoleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: CreateRoleComponent, deps: [{ token: i1.FormBuilder }, { token: i2.NodebootOauth2StarterService }, { token: i3.MatDialogRef }], target: i0.ɵɵFactoryTarget.Component });
CreateRoleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.2", type: CreateRoleComponent, selector: "lib-create-role", ngImport: i0, template: "<h2 mat-dialog-title>Create Role</h2>\n<form\n  [formGroup]=\"createRoleForm\"\n  (ngSubmit)=\"createRole(createRoleForm.value)\"\n>\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Identifier</mat-label>\n      <input\n        matInput\n        placeholder=\"admin01\"\n        formControlName=\"identifier\"\n        name=\"identifier\"\n        required\n      />\n      <mat-hint>A role identifier</mat-hint>\n    </mat-form-field>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Select a resource</mat-label>\n      <mat-select name=\"resource\" formControlName=\"resource\">\n        <mat-option\n          [value]=\"option.applicationResourceName\"\n          *ngFor=\"let option of options\"\n          >{{ option.applicationResourceName }}</mat-option\n        >\n      </mat-select>\n      <mat-hint>Select an application resource</mat-hint>\n    </mat-form-field>\n    <mat-selection-list #allowed formControlName=\"selected\">\n      <mat-list-option\n        (selectedChange)=\"selectedChange($event, allowedL)\"\n        [value]=\"allowedL\"\n        [disabled]=\"\n          allowedL.allowed !== '*' &&\n          createRoleForm.get('selected')?.value.length ===\n            allowedShowList.length\n            ? true\n            : false\n        \"\n        *ngFor=\"let allowedL of allowedShowList\"\n      >\n        {{ allowedL.allowed }}\n      </mat-list-option>\n    </mat-selection-list>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"\n        !createRoleForm.valid || objectKeys(allowedObject).length === 0\n      \"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Create\n    </button>\n  </div>\n</form>\n", styles: [".forms-field{width:100%}\n"], components: [{ type: i4.MatFormField, selector: "mat-form-field", inputs: ["color", "appearance", "hideRequiredMarker", "hintLabel", "floatLabel"], exportAs: ["matFormField"] }, { type: i5.MatSelect, selector: "mat-select", inputs: ["disabled", "disableRipple", "tabIndex"], exportAs: ["matSelect"] }, { type: i6.MatOption, selector: "mat-option", exportAs: ["matOption"] }, { type: i7.MatSelectionList, selector: "mat-selection-list", inputs: ["disableRipple", "tabIndex", "color", "compareWith", "disabled", "multiple"], outputs: ["selectionChange"], exportAs: ["matSelectionList"] }, { type: i7.MatListOption, selector: "mat-list-option", inputs: ["disableRipple", "checkboxPosition", "color", "value", "disabled", "selected"], outputs: ["selectedChange"], exportAs: ["matListOption"] }, { type: i8.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }], directives: [{ type: i3.MatDialogTitle, selector: "[mat-dialog-title], [matDialogTitle]", inputs: ["id"], exportAs: ["matDialogTitle"] }, { type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i3.MatDialogContent, selector: "[mat-dialog-content], mat-dialog-content, [matDialogContent]" }, { type: i9.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.MatLabel, selector: "mat-label" }, { type: i10.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { type: i1.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i4.MatHint, selector: "mat-hint", inputs: ["align", "id"] }, { type: i9.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.MatDialogActions, selector: "[mat-dialog-actions], mat-dialog-actions, [matDialogActions]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: CreateRoleComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-create-role', template: "<h2 mat-dialog-title>Create Role</h2>\n<form\n  [formGroup]=\"createRoleForm\"\n  (ngSubmit)=\"createRole(createRoleForm.value)\"\n>\n  <div mat-dialog-content>\n    <div class=\"error-display\" *ngIf=\"errorMessage\">\n      <h5>{{ errorMessage }}</h5>\n    </div>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Identifier</mat-label>\n      <input\n        matInput\n        placeholder=\"admin01\"\n        formControlName=\"identifier\"\n        name=\"identifier\"\n        required\n      />\n      <mat-hint>A role identifier</mat-hint>\n    </mat-form-field>\n    <mat-form-field class=\"forms-field\" appearance=\"fill\">\n      <mat-label>Select a resource</mat-label>\n      <mat-select name=\"resource\" formControlName=\"resource\">\n        <mat-option\n          [value]=\"option.applicationResourceName\"\n          *ngFor=\"let option of options\"\n          >{{ option.applicationResourceName }}</mat-option\n        >\n      </mat-select>\n      <mat-hint>Select an application resource</mat-hint>\n    </mat-form-field>\n    <mat-selection-list #allowed formControlName=\"selected\">\n      <mat-list-option\n        (selectedChange)=\"selectedChange($event, allowedL)\"\n        [value]=\"allowedL\"\n        [disabled]=\"\n          allowedL.allowed !== '*' &&\n          createRoleForm.get('selected')?.value.length ===\n            allowedShowList.length\n            ? true\n            : false\n        \"\n        *ngFor=\"let allowedL of allowedShowList\"\n      >\n        {{ allowedL.allowed }}\n      </mat-list-option>\n    </mat-selection-list>\n  </div>\n  <div align=\"end\" mat-dialog-actions>\n    <button\n      (click)=\"closeDialog()\"\n      type=\"button\"\n      color=\"warn\"\n      mat-stroked-button\n      [disabled]=\"dialogRef.disableClose\"\n    >\n      Cancel</button\n    ><button\n      [disabled]=\"\n        !createRoleForm.valid || objectKeys(allowedObject).length === 0\n      \"\n      color=\"primary\"\n      mat-flat-button\n    >\n      Create\n    </button>\n  </div>\n</form>\n", styles: [".forms-field{width:100%}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }, { type: i2.NodebootOauth2StarterService }, { type: i3.MatDialogRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLXJvbGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbm9kZWJvb3Qtb2F1dGgyLXN0YXJ0ZXIvc3JjL2xpYi9vYXV0aC1zdGFydGVyLXJvbGVzL2NyZWF0ZS1yb2xlL2NyZWF0ZS1yb2xlLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25vZGVib290LW9hdXRoMi1zdGFydGVyL3NyYy9saWIvb2F1dGgtc3RhcnRlci1yb2xlcy9jcmVhdGUtcm9sZS9jcmVhdGUtcm9sZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUM3RCxPQUFPLEVBQTBCLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7Ozs7Ozs7Ozs7QUFjcEUsTUFBTSxPQUFPLG1CQUFtQjtJQVM5QixZQUNVLFdBQXdCLEVBQ3hCLFNBQXVDLEVBQ3hDLFNBQTRDO1FBRjNDLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBQ3hCLGNBQVMsR0FBVCxTQUFTLENBQThCO1FBQ3hDLGNBQVMsR0FBVCxTQUFTLENBQW1DO1FBVHJELFlBQU8sR0FBZSxFQUFFLENBQUM7UUFDekIsb0JBQWUsR0FBYSxFQUFFLENBQUM7UUFDL0Isa0JBQWEsR0FBNkIsRUFBRSxDQUFDO1FBQzdDLGVBQVUsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDO1FBUXZCLElBQUksQ0FBQyxTQUFTLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxTQUFTLENBQUM7WUFDM0MsS0FBSyxFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUU7Z0JBQ2IsSUFBSSxHQUFHLENBQUMsS0FBSyxFQUFFO29CQUNiLElBQUksQ0FBQyxZQUFZLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUM7aUJBQ3ZDO3FCQUFNO29CQUNMLElBQUksQ0FBQyxZ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QyxjQUFjLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxHQUFHO3dCQUMvRCxLQUFLO3FCQUNOLENBQUM7aUJBQ0g7YUFDRjtTQUNGO2FBQU07WUFDTCxNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsY0FBYztpQkFDckMsR0FBRyxDQUFDLFVBQVUsQ0FBQztnQkFDaEIsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3pCLElBQUksb0JBQW9CLElBQUksWUFBWSxLQUFLLENBQUMsQ0FBQyxFQUFFO2dCQUMvQyxvQkFBb0IsQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQyxDQUFDO2FBQzlDO1lBQ0QsSUFBSSxvQkFBb0IsSUFBSSxvQkFBb0IsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO2dCQUM3RCxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7YUFDdkU7U0FDRjtJQUNILENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN6QixDQUFDOztnSEEvSFUsbUJBQW1CO29HQUFuQixtQkFBbUIsdURDZmhDLGdpRUFvRUE7MkZEckRhLG1CQUFtQjtrQkFML0IsU0FBUzsrQkFDRSxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtR3JvdXAsIEZvcm1CdWlsZGVyLCBWYWxpZGF0b3JzIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgTWF0RGlhbG9nUmVmIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvZGlhbG9nJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtcbiAgUmVzb3VyY2UsXG4gIE9wdGlvbixcbiAgTm9kZWJvb3RPYXV0aDJTdGFydGVyU2VydmljZSxcbn0gZnJvbSAnLi4vLi4vbm9kZWJvb3Qtb2F1dGgyLXN0YXJ0ZXIuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xpYi1jcmVhdGUtcm9sZScsXG4gIHRlbXBsYXRlVXJsOiAnLi9jcmVhdGUtcm9sZS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2NyZWF0ZS1yb2xlLmNvbXBvbmVudC5zY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIENyZWF0ZVJvbGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIGNyZWF0ZVJvbGVGb3JtOiBGb3JtR3JvdXA7XG4gIGVycm9yTWVzc2FnZSE6IHN0cmluZztcbiAgb3B0aW9uczogUmVzb3VyY2VbXSA9IFtdO1xuICBhbGxvd2VkU2hvd0xpc3Q6IE9wdGlvbltdID0gW107XG4gIGFsbG93ZWRPYmplY3Q6IFJlY29yZDxzdHJpbmcsIE9wdGlvbltdPiA9IHt9O1xuICBvYmplY3RLZXlzID0gT2JqZWN0LmtleXM7XG4gIHJlc291cmNlU3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBmb3JtQnVpbGRlcjogRm9ybUJ1aWxkZXIsXG4gICAgcHJpdmF0ZSBuYlNlcnZpY2U6IE5vZGVib290T2F1dGgyU3RhcnRlclNlcnZpY2UsXG4gICAgcHVibGljIGRpYWxvZ1JlZjogTWF0RGlhbG9nUmVmPENyZWF0ZVJvbGVDb21wb25lbnQ+XG4gICkge1xuICAgIHRoaXMubmJTZXJ2aWNlLmdldFJlc291cmNlc0Jhc2ljKCkuc3Vic2NyaWJlKHtcbiAgICAgIGVycm9yOiAoZXJyKSA9PiB7XG4gICAgICAgIGlmIChlcnIuZXJyb3IpIHtcbiAgICAgICAgICB0aGlzLmVycm9yTWVzc2FnZSA9IGVyci5lcnJvci5tZXNzYWdlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuZXJyb3JNZXNzYWdlID0gJ1Vua25vd24gRXJyb3InO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IFtdO1xuICAgICAgfSxcbiAgICAgIG5leHQ6IChyZXMpID0+IHtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gcmVzLmNvbnRlbnQgfHwgW107XG4gICAgICB9LFxuICAgIH0pO1xuICAgIHRoaXMuY3JlYXRlUm9sZUZvcm0gPSB0aGlzLmZvcm1CdWlsZGVyLmdyb3VwKHtcbiAgICAgIGlkZW50aWZpZXI6IHRoaXMuZm9ybUJ1aWxkZXIuY29udHJvbChcbiAgICAgICAgJycsXG4gICAgICAgIFZhbGlkYXRvcnMuY29tcG9zZShbXG4gICAgICAgICAgVmFsaWRhdG9ycy5yZXF1aXJlZCxcbiAgICAgICAgICBWYWxpZGF0b3JzLnBhdHRlcm4oL15bYS16QS1aMC05X1xcLlxcLVxcL10rJC8pLFxuICAgICAgICAgIFZhbGlkYXRvcnMubWluTGVuZ3RoKDQpLFxuICAgICAgICAgIFZhbGlkYXRvcnMubWF4TGVuZ3RoKDIwKSxcbiAgICAgICAgXSlcbiAgICAgICksXG4gICAgICByZXNvdXJjZTogdGhpcy5mb3JtQnVpbGRlci5jb250cm9sKCcnKSxcbiAgICAgIHNlbGVjdGVkOiB0aGlzLmZvcm1CdWlsZGVyLmNvbnRyb2woJycpLFxuICAgIH0pO1xuICAgIHRoaXMucmVzb3VyY2VTdWJzY3JpcHRpb24gPSB0aGlzLmNyZWF0ZVJvbGVGb3JtXG4gICAgICAuZ2V0KCdyZXNvdXJjZScpXG4gICAgICA/LnZhbHVlQ2hhbmdlcy5zdWJzY3JpYmUoe1xuICAgICAgICBuZXh0OiAodmFsdWUpID0+IHtcbiAgICAgICAgICB0aGlzLmFsbG93ZWRTaG93TGlzdCA9XG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMuZmluZCgobykgPT4gby5hcHBsaWNhdGlvblJlc291cmNlTmFtZSA9PT0gdmFsdWUpXG4gICAgICAgICAgICAgID8uYWxsb3dlZCB8fCBbXTtcbiAgICAgICAgICB0aGlzLmNyZWF0ZVJvbGVGb3JtXG4gICAgICAgICAgICAuZ2V0KCdzZWxlY3RlZCcpXG4gICAgICAgICAgICA/LnNldFZhbHVlKFxuICAgICAgICAgICAgICB0aGlzLmFsbG93ZWRPYmplY3RbdGhpcy5jcmVhdGVSb2xlRm9ybS5nZXQoJ3Jlc291cmNlJyk/LnZhbHVlXSB8fFxuICAgICAgICAgICAgICAgIFtdXG4gICAgICAgICAgICApO1xuICAgICAgICB9LFxuICAgICAgfSkgYXMgU3Vic2NyaXB0aW9uO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5yZXNvdXJjZVN1YnNjcmlwdGlvbj8udW5zdWJzY3JpYmUoKTtcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge31cblxuICBjcmVhdGVSb2xlKHJvbGVCb2R5OiB7IGlkZW50aWZpZXI6IHN0cmluZzsgcmVzb3VyY2U6IHN0cmluZyB8IHVuZGVmaW5lZCB9KSB7XG4gICAgdGhpcy5uYlNlcnZpY2VcbiAgICAgIC5jcmVhdGVSb2xlKHJvbGVCb2R5LmlkZW50aWZpZXIsIHRoaXMuYWxsb3dlZE9iamVjdClcbiAgICAgIC5zdWJzY3JpYmUoe1xuICAgICAgICBlcnJvcjogKGVycikgPT4ge1xuICAgICAgICAgIHRoaXMuZGlhbG9nUmVmLmRpc2FibGVDbG9zZSA9IGZhbHNlO1xuICAgICAgICAgIGlmIChlcnIuZXJyb3IpIHtcbiAgICAgICAgICAgIHRoaXMuZXJyb3JNZXNzYWdlID0gZXJyLmVycm9yLm1lc3NhZ2U7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuZXJyb3JNZXNzYWdlID0gJ1Vua25vd24gRXJyb3InO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgbmV4dDogKCkgPT4ge1xuICAgICAgICAgIHRoaXMuZGlhbG9nUmVmLmNsb3NlKHRydWUpO1xuICAgICAgICB9LFxuICAgICAgfSk7XG4gIH1cblxuICBzZWxlY3RlZENoYW5nZShzZWxlY3RlZDogYm9vbGVhbiwgdmFsdWU6IE9wdGlvbikge1xuICAgIGNvbnN0IGN1cnJlbnRBbGxvd2VkT2JqZWN0ID1cbiAgICAgIHRoaXMuYWxsb3dlZE9iamVjdFt0aGlzLmNyZWF0ZVJvbGVGb3JtLmdldCgncmVzb3VyY2UnKT8udmFsdWVdO1xuICAgIGlmIChcbiAgICAgIHZhbHVlLmFsbG93ZWQgPT09ICcqJyAmJlxuICAgICAgc2VsZWN0ZWQgJiZcbiAgICAgIHRoaXMuY3JlYXRlUm9sZUZvcm0uZ2V0KCdzZWxlY3RlZCcpPy52YWx1ZS5sZW5ndGggIT09XG4gICAgICAgIHRoaXMuYWxsb3dlZFNob3dMaXN0Lmxlbmd0aFxuICAgICkge1xuICAgICAgdGhpcy5jcmVhdGVSb2xlRm9ybS5nZXQoJ3NlbGVjdGVkJyk/LnNldFZhbHVlKHRoaXMuYWxsb3dlZFNob3dMaXN0KTtcbiAgICAgIHRoaXMuYWxsb3dlZE9iamVjdFt0aGlzLmNyZWF0ZVJvbGVGb3JtLmdldCgncmVzb3VyY2UnKT8udmFsdWVdID0gW1xuICAgICAgICB0aGlzLmFsbG93ZWRTaG93TGlzdFswXSxcbiAgICAgIF07XG4gICAgfSBlbHNlIGlmICh2YWx1ZS5hbGxvd2VkID09PSAnKicgJiYgIXNlbGVjdGVkKSB7XG4gICAgICBjb25zdCB0ZW1wb3JhbEFsbG93ZWQgPSBbLi4udGhpcy5hbGxvd2VkU2hvd0xpc3RdO1xuICAgICAgdGVtcG9yYWxBbGxvd2VkLnNoaWZ0KCk7XG4gICAgICB0aGlzLmFsbG93ZWRPYmplY3RbdGhpcy5jcmVhdGVSb2xlRm9ybS5nZXQoJ3Jlc291cmNlJyk/LnZhbHVlXSA9XG4gICAgICAgIHRlbXBvcmFsQWxsb3dlZDtcbiAgICB9IGVsc2UgaWYgKHNlbGVjdGVkKSB7XG4gICAgICBpZiAoIShjdXJyZW50QWxsb3dlZE9iamVjdCAmJiBjdXJyZW50QWxsb3dlZE9iamVjdFswXS5hbGxvd2VkID09PSAnKicpKSB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICBjdXJyZW50QWxsb3dlZE9iamVjdCAmJlxuICAgICAgICAgIGN1cnJlbnRBbGxvd2VkT2JqZWN0LmZpbmRJbmRleCgoY2EpID0+IGNhLmlkID09PSB2YWx1ZS5pZClcbiAgICAgICAgKSB7XG4gICAgICAgICAgY3VycmVudEFsbG93ZWRPYmplY3QucHVzaCh2YWx1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5hbGxvd2VkT2JqZWN0W3RoaXMuY3JlYXRlUm9sZUZvcm0uZ2V0KCdyZXNvdXJjZScpPy52YWx1ZV0gPSBbXG4gICAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICBdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGluZGV4T2ZWYWx1ZSA9IHRoaXMuY3JlYXRlUm9sZUZvcm1cbiAgICAgICAgLmdldCgnc2VsZWN0ZWQnKVxuICAgICAgICA/LnZhbHVlLmluZGV4T2YodmFsdWUpO1xuICAgICAgaWYgKGN1cnJlbnRBbGxvd2VkT2JqZWN0ICYmIGluZGV4T2ZWYWx1ZSAhPT0gLTEpIHtcbiAgICAgICAgY3VycmVudEFsbG93ZWRPYmplY3Quc3BsaWNlKGluZGV4T2ZWYWx1ZSwgMSk7XG4gICAgICB9XG4gICAgICBpZiAoY3VycmVudEFsbG93ZWRPYmplY3QgJiYgY3VycmVudEFsbG93ZWRPYmplY3QubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLmFsbG93ZWRPYmplY3RbdGhpcy5jcmVhdGVSb2xlRm9ybS5nZXQoJ3Jlc291cmNlJyk/LnZhbHVlXTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBjbG9zZURpYWxvZygpIHtcbiAgICB0aGlzLmRpYWxvZ1JlZi5jbG9zZSgpO1xuICB9XG59XG4iLCI8aDIgbWF0LWRpYWxvZy10aXRsZT5DcmVhdGUgUm9sZTwvaDI+XG48Zm9ybVxuICBbZm9ybUdyb3VwXT1cImNyZWF0ZVJvbGVGb3JtXCJcbiAgKG5nU3VibWl0KT1cImNyZWF0ZVJvbGUoY3JlYXRlUm9sZUZvcm0udmFsdWUpXCJcbj5cbiAgPGRpdiBtYXQtZGlhbG9nLWNvbnRlbnQ+XG4gICAgPGRpdiBjbGFzcz1cImVycm9yLWRpc3BsYXlcIiAqbmdJZj1cImVycm9yTWVzc2FnZVwiPlxuICAgICAgPGg1Pnt7IGVycm9yTWVzc2FnZSB9fTwvaDU+XG4gICAgPC9kaXY+XG4gICAgPG1hdC1mb3JtLWZpZWxkIGNsYXNzPVwiZm9ybXMtZmllbGRcIiBhcHBlYXJhbmNlPVwiZmlsbFwiPlxuICAgICAgPG1hdC1sYWJlbD5JZGVudGlmaWVyPC9tYXQtbGFiZWw+XG4gICAgICA8aW5wdXRcbiAgICAgICAgbWF0SW5wdXRcbiAgICAgICAgcGxhY2Vob2xkZXI9XCJhZG1pbjAxXCJcbiAgICAgICAgZm9ybUNvbnRyb2xOYW1lPVwiaWRlbnRpZmllclwiXG4gICAgICAgIG5hbWU9XCJpZGVudGlmaWVyXCJcbiAgICAgICAgcmVxdWlyZWRcbiAgICAgIC8+XG4gICAgICA8bWF0LWhpbnQ+QSByb2xlIGlkZW50aWZpZXI8L21hdC1oaW50PlxuICAgIDwvbWF0LWZvcm0tZmllbGQ+XG4gICAgPG1hdC1mb3JtLWZpZWxkIGNsYXNzPVwiZm9ybXMtZmllbGRcIiBhcHBlYXJhbmNlPVwiZmlsbFwiPlxuICAgICAgPG1hdC1sYWJlbD5TZWxlY3QgYSByZXNvdXJjZTwvbWF0LWxhYmVsPlxuICAgICAgPG1hdC1zZWxlY3QgbmFtZT1cInJlc291cmNlXCIgZm9ybUNvbnRyb2xOYW1lPVwicmVzb3VyY2VcIj5cbiAgICAgICAgPG1hdC1vcHRpb25cbiAgICAgICAgICBbdmFsdWVdPVwib3B0aW9uLmFwcGxpY2F0aW9uUmVzb3VyY2VOYW1lXCJcbiAgICAgICAgICAqbmdGb3I9XCJsZXQgb3B0aW9uIG9mIG9wdGlvbnNcIlxuICAgICAgICAgID57eyBvcHRpb24uYXBwbGljYXRpb25SZXNvdXJjZU5hbWUgfX08L21hdC1vcHRpb25cbiAgICAgICAgPlxuICAgICAgPC9tYXQtc2VsZWN0PlxuICAgICAgPG1hdC1oaW50PlNlbGVjdCBhbiBhcHBsaWNhdGlvbiByZXNvdXJjZTwvbWF0LWhpbnQ+XG4gICAgPC9tYXQtZm9ybS1maWVsZD5cbiAgICA8bWF0LXNlbGVjdGlvbi1saXN0ICNhbGxvd2VkIGZvcm1Db250cm9sTmFtZT1cInNlbGVjdGVkXCI+XG4gICAgICA8bWF0LWxpc3Qtb3B0aW9uXG4gICAgICAgIChzZWxlY3RlZENoYW5nZSk9XCJzZWxlY3RlZENoYW5nZSgkZXZlbnQsIGFsbG93ZWRMKVwiXG4gICAgICAgIFt2YWx1ZV09XCJhbGxvd2VkTFwiXG4gICAgICAgIFtkaXNhYmxlZF09XCJcbiAgICAgICAgICBhbGxvd2VkTC5hbGxvd2VkICE9PSAnKicgJiZcbiAgICAgICAgICBjcmVhdGVSb2xlRm9ybS5nZXQoJ3NlbGVjdGVkJyk/LnZhbHVlLmxlbmd0aCA9PT1cbiAgICAgICAgICAgIGFsbG93ZWRTaG93TGlzdC5sZW5ndGhcbiAgICAgICAgICAgID8gdHJ1ZVxuICAgICAgICAgICAgOiBmYWxzZVxuICAgICAgICBcIlxuICAgICAgICAqbmdGb3I9XCJsZXQgYWxsb3dlZEwgb2YgYWxsb3dlZFNob3dMaXN0XCJcbiAgICAgID5cbiAgICAgICAge3sgYWxsb3dlZEwuYWxsb3dlZCB9fVxuICAgICAgPC9tYXQtbGlzdC1vcHRpb24+XG4gICAgPC9tYXQtc2VsZWN0aW9uLWxpc3Q+XG4gIDwvZGl2PlxuICA8ZGl2IGFsaWduPVwiZW5kXCIgbWF0LWRpYWxvZy1hY3Rpb25zPlxuICAgIDxidXR0b25cbiAgICAgIChjbGljayk9XCJjbG9zZURpYWxvZygpXCJcbiAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgY29sb3I9XCJ3YXJuXCJcbiAgICAgIG1hdC1zdHJva2VkLWJ1dHRvblxuICAgICAgW2Rpc2FibGVkXT1cImRpYWxvZ1JlZi5kaXNhYmxlQ2xvc2VcIlxuICAgID5cbiAgICAgIENhbmNlbDwvYnV0dG9uXG4gICAgPjxidXR0b25cbiAgICAgIFtkaXNhYmxlZF09XCJcbiAgICAgICAgIWNyZWF0ZVJvbGVGb3JtLnZhbGlkIHx8IG9iamVjdEtleXMoYWxsb3dlZE9iamVjdCkubGVuZ3RoID09PSAwXG4gICAgICBcIlxuICAgICAgY29sb3I9XCJwcmltYXJ5XCJcbiAgICAgIG1hdC1mbGF0LWJ1dHRvblxuICAgID5cbiAgICAgIENyZWF0ZVxuICAgIDwvYnV0dG9uPlxuICA8L2Rpdj5cbjwvZm9ybT5cbiJdfQ==